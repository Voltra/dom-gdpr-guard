{"version":3,"sources":["webpack://domGdprGuard/webpack/universalModuleDefinition","webpack://domGdprGuard/webpack/bootstrap","webpack://domGdprGuard/./src/render.ts","webpack://domGdprGuard/./node_modules/gdpr-guard/dist/gdpr_guard.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/fromVirtual.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/apply.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/undo.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/helpers.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/apply.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/fromString.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/diff.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/index.js","webpack://domGdprGuard/./src/utils.ts","webpack://domGdprGuard/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","render","gdpr","payload","savior","restoreOrCreate","manager","rm","rgr","rgu","bound","method","this","renderGuard","guard","renderGroup","group","renderManager","rendered","e","default","None","Cookie","LocalStorage","SessionStorage","IndexedDb","FileSystem","ServerStorage","All","GdprStorage","__values","iterator","length","next","done","TypeError","__read","u","push","error","return","__spread","arguments","concat","a","description","enabled","required","bindings","Map","storage","for","addGuard","set","hasGuard","has","getGuard","doForEachGuard","forEach","isEnabled","enable","disable","toggle","makeRequired","enableForStorage","disableForStorage","toggleForStorage","raw","guards","map","GdprGuardGroup","makeGuard","JSON","parse","stringify","groups","addGroup","createGroup","reduceGroupsPred","forEachGroup","hasGroup","getGroup","GdprManager","parent","require","endGuard","edit","withName","withDescription","disabled","storedIn","GdprGuardBuilder","make","startGroup","GdprGroupBuilder","startRequiredGroup","startEnabledGroup","startDisabledGroup","build","endGroup","GdprManagerBuilder","__extends","setPrototypeOf","__proto__","Array","constructor","startGuard","startRequiredGuard","withEnabledGuard","withDisabledGuard","every","isArray","filter","GdprDeserializer","__awaiter","Promise","throw","then","apply","__generator","label","sent","trys","ops","pop","exists","restore","storeIfNotExists","store","updateSharedManager","check","resolve","setTimeout","GdprSaviorAdapter","objToNode","objNode","insideSvg","options","node","nodeName","document","createTextNode","data","createComment","createElementNS","createElement","attributes","entries","setAttribute","childNodes","childNode","appendChild","valueDiffing","checked","selected","getFromRoute","route","slice","splice","applyDiff","tree","diff","newNode","reference","nodeArray","_const","info","preDiffApply","action","addAttribute","modifyAttribute","newValue","removeAttribute","modifyTextElement","nodeType","textDiff","oldValue","modifyValue","modifyComment","modifyChecked","modifySelected","replaceElement","parentNode","replaceChild","namespaceURI","relocateGroup","groupLength","removeChild","from","index","to","insertBefore","removeElement","addElement","element","removeTextElement","addTextElement","console","log","postDiffApply","swap","obj","p1","p2","tmp","undoDOM","diffs","reverse","undoDiff","Diff","aKey","aValue","elementDescriptors","el","output","replace","id","findUniqueDescriptors","li","uniqueDescriptors","duplicateDescriptors","descriptor","inUnique","uniqueInBoth","l1","l2","l1Unique","l2Unique","inBoth","keys","removeDone","outerDone","innerDone","valueDone","isEqual","e1","e2","Boolean","e1Attributes","e2Attributes","attribute","roughlyEqual","sameSiblings","preventRecursion","nodeList1","nodeList2","childUniqueDescriptors","cloneObj","findCommonSubsets","c1","c2","marked1","marked2","lcsSize","c1Length","c2Length","matches","subsetsSame","some","c1Desc","c2Desc","c1Index","c1Element","c2Index","c2Element","makeArray","v","DiffTracker","list","fn","getFromVirtualRoute","nodeIndex","applyVirtual","routeInfo","newSubsets","movedNode","subsets","splitLength","delete","applyVirtualDiff","nodeToObj","aNode","undefined","type","includes","toLowerCase","tagRE","empty","attrRE","string","lookup","area","base","br","col","embed","hr","img","input","keygen","link","menuItem","meta","param","source","track","wbr","html","components","result","current","level","arr","byTag","inComponent","tag","isOpen","charAt","start","nextChar","res","tagMatch","match","toUpperCase","voidElement","reg","RegExp","exec","trim","attr","indexOf","split","lastIndex","substring","parseTag","tagName","end","stringToObj","cleanObj","child","t1Node","t2Node","t1","HTMLElement","t2","diffcount","foundAll","debug","t1Orig","t2Orig","tracker","findDiffs","diffcap","diffError","Error","findNextDiff","add","fdiffs","maxDepth","findOuterDiff","filterOuterDiff","findInnerDiff","findValueDiff","attr1","attr2","attrLength","pos","setValue","maxNodeDiffCount","Math","abs","sort","t1ChildNodes","t2ChildNodes","last","max","childNodesLengthDifference","maxChildCount","subtrees","subsetsAge","oldTree","newTree","oldChildren","newChildren","subset","returnIndex","item","markBoth","markSubTrees","attemptGroupRelocation","gapInformation","stable","gaps1","gaps2","endOld","endNew","j","getGapInformation","destinationDifferent","toGroup","similarNode","testI","shortest","min","index2","index1","DEFAULT_OPTIONS","currentValue","expectedValue","compress","diffing","varNames","varName","DiffFinder","applyDOM","init","mountOnTarget","target","childElementCount","diffSource","children","renderInside","doRender"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"domGdprGuard\"] = factory();\n\telse\n\t\troot[\"domGdprGuard\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { GdprManager, GdprGuard, GdprGuardGroup, GdprSavior, GdprManagerFactory } from \"gdpr-guard\"\r\nimport { Rendered, GroupRenderFunction, ManagerRenderFunction, GuardRenderFunction } from \"./Renderer\"\r\n\r\n/**\r\n * Configuration for the render function\r\n */\r\nexport interface RenderPayload{\r\n\t/**\r\n\t * Manager rendering function\r\n\t */\r\n\trenderManager: ManagerRenderFunction;\r\n\r\n\t/**\r\n\t * Group rendering function\r\n\t */\r\n\trenderGroup: GroupRenderFunction;\r\n\r\n\t/**\r\n\t * Guard rendering function\r\n\t */\r\n\trenderGuard: GuardRenderFunction;\r\n}\r\n\r\n/**\r\n * The payload required for the Savior API\r\n */\r\nexport interface GdprPayload{\r\n\t/**\r\n\t * The savior to use\r\n\t */\r\n\tsavior: GdprSavior;\r\n\t\r\n\t/**\r\n\t * A factory to a {@link GdprManager}\r\n\t */\r\n\tmanagerFactory: GdprManagerFactory;\r\n}\r\n\r\n/**\r\n * Result of the render function\r\n */\r\nexport interface GdprRenderResult{\r\n\t/**\r\n\t * The rendered element\r\n\t */\r\n\trendered: Rendered;\r\n\t\r\n\t/**\r\n\t * The manager used to render\r\n\t */\r\n\tmanager: GdprManager;\r\n}\r\n\r\n/**\r\n * Render the current manager state (you will manually handle re-renders)\r\n * @param manager - The manager state to use for rendering\r\n * @param payload - The render configuration\r\n */\r\nexport const render = async (gdpr: GdprPayload, payload: RenderPayload): Promise<GdprRenderResult> => {\r\n\tconst {\r\n\t\tsavior,\r\n\t\tmanagerFactory: factory,\r\n\t} = gdpr;\r\n\r\n\tconst manager = await savior.restoreOrCreate(factory);\r\n\r\n\tconst {\r\n\t\trenderManager: rm,\r\n\t\trenderGroup: rgr,\r\n\t\trenderGuard: rgu,\r\n\t} = payload;\r\n\r\n\tconst renderer = {\r\n\t\tbound(method: string){\r\n\t\t\treturn this[method].bind(this);\r\n\t\t},\r\n\t\trenderGuard(guard: GdprGuard): Promise<Rendered>{\r\n\t\t\treturn rgu(this.bound(\"renderGroup\"), savior, guard);\r\n\t\t},\r\n\t\trenderGroup(group: GdprGuardGroup): Promise<Rendered>{\r\n\t\t\treturn rgr(this.bound(\"renderGuard\"), savior, group);\r\n\t\t},\r\n\t\trenderManager(manager: GdprManager): Promise<Rendered>{\r\n\t\t\treturn rm(this.bound(\"renderGroup\"), savior, manager);\r\n\t\t},\r\n\t};\r\n\r\n\r\n\tconst rendered = await renderer.renderManager(manager);\r\n\treturn {\r\n\t\trendered,\r\n\t\tmanager,\r\n\t};\r\n};\r\n","!function(t,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define(\"gdprGuard\",[],r):\"object\"==typeof exports?exports.gdprGuard=r():t.gdprGuard=r()}(window,(function(){return function(t){var r={};function e(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=r,e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:n})},e.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&r&&\"string\"!=typeof t)for(var o in t)e.d(n,o,function(r){return t[r]}.bind(null,o));return n},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,\"a\",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p=\"\",e(e.s=7)}([function(t,r,e){\"use strict\";var n;Object.defineProperty(r,\"__esModule\",{value:!0}),function(t){t[t.None=1]=\"None\",t[t.Cookie=2]=\"Cookie\",t[t.LocalStorage=4]=\"LocalStorage\",t[t.SessionStorage=8]=\"SessionStorage\",t[t.IndexedDb=16]=\"IndexedDb\",t[t.FileSystem=16]=\"FileSystem\",t[t.ServerStorage=16]=\"ServerStorage\",t[t.All=30]=\"All\"}(n||(n={})),r.GdprStorage=n},function(t,r,e){\"use strict\";var n=this&&this.__values||function(t){var r=\"function\"==typeof Symbol&&Symbol.iterator,e=r&&t[r],n=0;if(e)return e.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(r?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},o=this&&this.__read||function(t,r){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,o,i=e.call(t),u=[];try{for(;(void 0===r||r-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},i=this&&this.__spread||function(){for(var t=[],r=0;r<arguments.length;r++)t=t.concat(o(arguments[r]));return t};Object.defineProperty(r,\"__esModule\",{value:!0});var u=e(0),a=function(){function t(t,r,e,n){void 0===r&&(r=\"\"),void 0===e&&(e=!1),void 0===n&&(n=!1),this.name=t,this.description=r,this.enabled=e,this.required=n,this.bindings=new Map,this.storage=u.GdprStorage.None,this.required&&(this.enabled=!0)}return t.for=function(r,e,n,o){return void 0===e&&(e=\"\"),void 0===n&&(n=!1),void 0===o&&(o=!1),new t(r,e,n,o)},t.prototype.addGuard=function(t){return this.bindings.set(t.name,t),this},t.prototype.hasGuard=function(t){return this.name===t||this.bindings.has(t)},t.prototype.getGuard=function(t){return this.name===t?this:this.bindings.get(t)||null},t.prototype.doForEachGuard=function(t){return this.bindings.forEach((function(r){return t(r)})),this},t.prototype.isEnabled=function(t){var r,e;if(this.hasGuard(t)&&null!==(a=this.getGuard(t)))return a.enabled;try{for(var i=n(this.bindings),u=i.next();!u.done;u=i.next()){var a,s=o(u.value,2);s[0];if((a=s[1]).isEnabled(t))return!0}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return!1},t.prototype.enable=function(){return this.required?this:(this.enabled=!0,this.doForEachGuard((function(t){return t.enable()})))},t.prototype.disable=function(){return this.required?this:(this.enabled=!1,this.doForEachGuard((function(t){return t.disable()})))},t.prototype.toggle=function(){return this.enabled?this.disable():this.enable()},t.prototype.makeRequired=function(){return this.required=!0,this.enabled=!0,this.doForEachGuard((function(t){return t.makeRequired()}))},t.prototype.enableForStorage=function(t){return this.doForEachGuard((function(r){r.storage&t&&r.enable()}))},t.prototype.disableForStorage=function(t){return this.doForEachGuard((function(r){r.storage&t&&r.disable()}))},t.prototype.toggleForStorage=function(t){return this.doForEachGuard((function(r){if(r.storage&t)return r.toggle()}))},t.prototype.raw=function(){var t={name:this.name,description:this.description,enabled:this.enabled,required:this.required,storage:this.storage,guards:[]};return t.guards=i(this.bindings).map((function(t){var r=o(t,2);r[0];return r[1].raw()})),t},t}();r.GdprGuardGroup=a},function(t,r,e){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n=e(0);r.makeGuard=function(t,r,e,o,i){return void 0===e&&(e=n.GdprStorage.Cookie),void 0===o&&(o=!1),void 0===i&&(i=null),{name:t,description:r,storage:e,required:o,enabled:null===i?o:i,enable:function(){return this.enabled||this.toggle(),this},disable:function(){return this.enabled&&this.toggle(),this},toggle:function(){return this.required||(this.enabled=!this.enabled),this},makeRequired:function(){return this.required=!0,this.enabled=!0,this},isEnabled:function(t){return this.name===t&&this.enabled},enableForStorage:function(t){return this.enabled||this.toggleForStorage(t),this},disableForStorage:function(t){return this.enabled&&this.toggleForStorage(t),this},toggleForStorage:function(t){return this.storage!=t||this.required||this.toggle(),this},raw:function(){return JSON.parse(JSON.stringify(this))}}}},function(t,r,e){\"use strict\";var n=this&&this.__values||function(t){var r=\"function\"==typeof Symbol&&Symbol.iterator,e=r&&t[r],n=0;if(e)return e.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(r?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},o=this&&this.__read||function(t,r){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,o,i=e.call(t),u=[];try{for(;(void 0===r||r-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},i=this&&this.__spread||function(){for(var t=[],r=0;r<arguments.length;r++)t=t.concat(o(arguments[r]));return t};Object.defineProperty(r,\"__esModule\",{value:!0});var u=e(1),a=e(0),s=function(){function t(){this.groups=new Map,this.name=\"manager\",this.description=\"Manager of GDPR guard groups\",this.enabled=!0,this.storage=a.GdprStorage.None,this.required=!1}return t.create=function(r){void 0===r&&(r=[]);var e=new t;return r.forEach((function(t){return e.addGroup(t)})),e},t.prototype.createGroup=function(t,r){return void 0===r&&(r=\"\"),this.addGroup(u.GdprGuardGroup.for(t,r))},t.prototype.addGroup=function(t){return this.groups.set(t.name,t),this},t.prototype.reduceGroupsPred=function(t){var r,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2);a[0];if(t(a[1]))return!0}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return!1},t.prototype.forEachGroup=function(t){return this.groups.forEach((function(r){return t(r)})),this},t.prototype.hasGuard=function(t){return this.reduceGroupsPred((function(r){return r.hasGuard(t)}))},t.prototype.getGuard=function(t){var r,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2),s=(a[0],a[1]);if(s.hasGuard(t))return s.getGuard(t)}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return null},t.prototype.hasGroup=function(t){return this.reduceGroupsPred((function(r){return r.name===t}))},t.prototype.getGroup=function(t){var r,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2),s=a[0],d=a[1];if(s===t)return d}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return null},t.prototype.isEnabled=function(t){return this.reduceGroupsPred((function(r){return r.isEnabled(t)}))},t.prototype.enable=function(){return this.enabled=!0,this.forEachGroup((function(t){return t.enable()}))},t.prototype.disable=function(){return this.enabled=!1,this.forEachGroup((function(t){return t.disable()}))},t.prototype.toggle=function(){return this.enabled?this.disable():this.enable()},t.prototype.makeRequired=function(){return this},t.prototype.enableForStorage=function(t){return this.forEachGroup((function(r){return r.enableForStorage(t)}))},t.prototype.disableForStorage=function(t){return this.forEachGroup((function(r){return r.disableForStorage(t)}))},t.prototype.toggleForStorage=function(t){return this.forEachGroup((function(r){return r.toggleForStorage(t)}))},t.prototype.raw=function(){var t={enabled:this.enabled,groups:[]};return t.groups=i(this.groups).map((function(t){var r=o(t,2);r[0];return r[1].raw()})),t},t}();r.GdprManager=s},function(t,r,e){\"use strict\";function n(t){for(var e in t)r.hasOwnProperty(e)||(r[e]=t[e])}Object.defineProperty(r,\"__esModule\",{value:!0}),n(e(5)),n(e(6)),n(e(8))},function(t,r,e){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n=e(0),o=e(2),i=function(){function t(t,r,e,n){this.parent=t,this.storage=r,this.enable=e,this.require=n,this.name=\"\",this.description=\"\",n&&(this.enable=!0)}return t.create=function(r,e,o,i){return void 0===e&&(e=n.GdprStorage.Cookie),void 0===o&&(o=!1),void 0===i&&(i=!1),new t(r,e,o,i)},t.prototype.endGuard=function(){var t=this.require||this.enable,r=o.makeGuard(this.name,this.description,this.storage,this.require,t);return this.require&&r.makeRequired(),this.parent.guards.push(r),this.parent},t.prototype.edit=function(t){return t(this),this},t.prototype.withName=function(t){return this.edit((function(r){return r.name=t}))},t.prototype.withDescription=function(t){return this.edit((function(r){return r.description=t}))},t.prototype.enabled=function(){return this.edit((function(t){return t.enable=!0}))},t.prototype.disabled=function(){return this.edit((function(t){return t.enable=!1}))},t.prototype.storedIn=function(t){return this.edit((function(r){return r.storage=t}))},t.prototype.required=function(){return this.edit((function(t){return t.require=!0}))},t}();r.GdprGuardBuilder=i},function(t,r,e){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n=e(0),o=e(3),i=e(4),u=function(){function t(){this.storage=n.GdprStorage.Cookie,this.groups=[]}return t.make=function(){return new t},t.prototype.startGroup=function(t,r,e,n){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),void 0===n&&(n=!0),i.GdprGroupBuilder.create(this,r,e,t,n,!1)},t.prototype.startRequiredGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startEnabledGroup(t,r,e).required()},t.prototype.startEnabledGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startGroup(t,r,e,!0).enabled()},t.prototype.startDisabledGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startGroup(t,r,e,!1).disabled()},t.prototype.build=function(){return o.GdprManager.create(this.groups)},t.prototype.endGroup=function(){return this},t}();r.GdprManagerBuilder=u},function(t,r,e){\"use strict\";function n(t){for(var e in t)r.hasOwnProperty(e)||(r[e]=t[e])}Object.defineProperty(r,\"__esModule\",{value:!0}),n(e(2)),n(e(1)),n(e(3)),n(e(0)),n(e(4)),n(e(9)),n(e(10))},function(t,r,e){\"use strict\";var n,o=this&&this.__extends||(n=function(t,r){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var e in r)r.hasOwnProperty(e)&&(t[e]=r[e])})(t,r)},function(t,r){function e(){this.constructor=t}n(t,r),t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}),i=this&&this.__read||function(t,r){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,o,i=e.call(t),u=[];try{for(;(void 0===r||r-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},u=this&&this.__spread||function(){for(var t=[],r=0;r<arguments.length;r++)t=t.concat(i(arguments[r]));return t};Object.defineProperty(r,\"__esModule\",{value:!0});var a=e(0),s=e(6),d=e(1),c=e(5),l=function(t){function r(r,e,n,o,i,u){var a=t.call(this)||this;return a.parent=r,a.name=e,a.description=n,a.enable=i,a.require=u,a.guards=[],a.storage=o,u&&(a.enable=!0),a}return o(r,t),r.prototype.startGroup=function(r,e,n){return void 0===r&&(r=null),void 0===e&&(e=\"\"),void 0===n&&(n=\"\"),t.prototype.startGroup.call(this,r||this.parent.storage,e,n)},r.prototype.startRequiredGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startGroup(t,r,e).required()},r.create=function(t,e,n,o,i,u){return void 0===n&&(n=\"\"),void 0===o&&(o=null),void 0===i&&(i=!0),void 0===u&&(u=!1),new r(t,e,n,o||a.GdprStorage.Cookie,i,u)},r.prototype.endGroup=function(){var t=this.require||this.enable,r=d.GdprGuardGroup.for(this.name,this.description,t,this.require);return u(this.guards,this.groups).forEach((function(t){return r.addGuard(t)})),this.require&&r.makeRequired(),this.parent.groups.push(r),this.parent},r.prototype.edit=function(t){return t(this),this},r.prototype.withName=function(t){return this.edit((function(r){return r.name=t}))},r.prototype.withDescription=function(t){return this.edit((function(r){return r.description=t}))},r.prototype.storedIn=function(t){return this.edit((function(r){return r.storage=t}))},r.prototype.enabled=function(){return this.edit((function(t){return t.enable=!0}))},r.prototype.disabled=function(){return this.edit((function(t){return t.enable=!1}))},r.prototype.required=function(){return this.edit((function(t){return t.require=!0}))},r.prototype.startGuard=function(t){return void 0===t&&(t=null),c.GdprGuardBuilder.create(this,t||this.storage,this.enable)},r.prototype.startRequiredGuard=function(t){return this.startGuard(t).required()},r.prototype.withEnabledGuard=function(t,r,e){return void 0===r&&(r=\"\"),void 0===e&&(e=null),this.startGuard(e).withName(t).withDescription(r).enabled().endGuard()},r.prototype.withDisabledGuard=function(t,r,e){return void 0===r&&(r=\"\"),void 0===e&&(e=null),this.startGuard(e).withName(t).withDescription(r).disabled().endGuard()},r}(s.GdprManagerBuilder);r.GdprGroupBuilder=l},function(t,r,e){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n=e(3),o=e(0),i=e(1),u=e(2),a=function(){function t(){}return t.manager=function(t){var r=this;if(!([\"enabled\",\"groups\"].every((function(r){return r in t}))&&\"boolean\"==typeof t.enabled&&Array.isArray(t.groups)))return null;var e=t.groups.map((function(t){return r.group(t)})).filter((function(t){return null!==t})),o=n.GdprManager.create([]);return o.enabled=!!t.enabled,e.length?(e.forEach((function(t){return o.addGroup(t)})),o):null},t.group=function(t){var r=this,e=this.guard(t);if(null===e)return null;var n=[\"guards\"];if(!(n.every((function(r){return r in t}))&&Array.isArray(t.guards)))return null;var o=i.GdprGuardGroup.for(e.name,e.description,e.enabled,e.required),u=t.guards.map((function(t){return n.every((function(r){return r in t}))?r.group(t):r.guard(t)})).filter((function(t){return null!==t}));return u.length?(u.forEach((function(t){return o.addGuard(t)})),o):null},t.guard=function(t){return[\"name\",\"enabled\",\"required\",\"description\",\"storage\"].every((function(r){return r in t}))&&\"string\"==typeof t.name&&\"boolean\"==typeof t.enabled&&\"boolean\"==typeof t.required&&\"string\"==typeof t.description&&\"number\"==typeof t.storage&&t.storage in o.GdprStorage?u.makeGuard(t.name,t.description,t.storage,!!t.required,!!t.enabled):null},t}();r.GdprDeserializer=a},function(t,r,e){\"use strict\";var n=this&&this.__awaiter||function(t,r,e,n){return new(e||(e=Promise))((function(o,i){function u(t){try{s(n.next(t))}catch(t){i(t)}}function a(t){try{s(n.throw(t))}catch(t){i(t)}}function s(t){var r;t.done?o(t.value):(r=t.value,r instanceof e?r:new e((function(t){t(r)}))).then(u,a)}s((n=n.apply(t,r||[])).next())}))},o=this&&this.__generator||function(t,r){var e,n,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(e)throw new TypeError(\"Generator is already executing.\");for(;u;)try{if(e=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return u.label++,{value:i[1],done:!1};case 5:u.label++,n=i[1],i=[0];continue;case 7:i=u.ops.pop(),u.trys.pop();continue;default:if(!(o=(o=u.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){u=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){u.label=i[1];break}if(6===i[0]&&u.label<o[1]){u.label=o[1],o=i;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(i);break}o[2]&&u.ops.pop(),u.trys.pop();continue}i=r.call(t,u)}catch(t){i=[6,t],n=0}finally{e=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};Object.defineProperty(r,\"__esModule\",{value:!0});var i=function(){function t(){}return t.prototype.exists=function(t){return void 0===t&&(t=!0),n(this,void 0,void 0,(function(){return o(this,(function(r){switch(r.label){case 0:return[4,this.restore(t)];case 1:return[2,null!==r.sent()]}}))}))},t.prototype.storeIfNotExists=function(t){return n(this,void 0,void 0,(function(){return o(this,(function(r){switch(r.label){case 0:return[4,this.exists()];case 1:return[2,!!r.sent()||this.store(t)]}}))}))},t.prototype.restoreOrCreate=function(t){return n(this,void 0,void 0,(function(){var r,e;return o(this,(function(n){switch(n.label){case 0:return[4,this.restore()];case 1:return(r=n.sent())?[3,3]:[4,t()];case 2:return e=n.sent(),this.updateSharedManager(e),[2,e];case 3:return[2,r]}}))}))},t.prototype.check=function(){return n(this,void 0,void 0,(function(){var t=this;return o(this,(function(r){switch(r.label){case 0:return[4,Promise.resolve()];case 1:return r.sent(),setTimeout((function(){t.exists(!0)}),100),[2]}}))}))},t}();r.GdprSaviorAdapter=i}])}));","export function objToNode(objNode, insideSvg, options) {\n    let node\n    if (objNode.nodeName === '#text') {\n        node = options.document.createTextNode(objNode.data)\n\n    } else if (objNode.nodeName === '#comment') {\n        node = options.document.createComment(objNode.data)\n    } else {\n        if (objNode.nodeName === 'svg' || insideSvg) {\n            node = options.document.createElementNS('http://www.w3.org/2000/svg', objNode.nodeName)\n            insideSvg = true\n        } else {\n            node = options.document.createElement(objNode.nodeName)\n        }\n        if (objNode.attributes) {\n            Object.entries(objNode.attributes).forEach(([key, value]) => node.setAttribute(key, value))\n        }\n        if (objNode.childNodes) {\n            objNode.childNodes.forEach(childNode => node.appendChild(objToNode(childNode, insideSvg, options)))\n        }\n        if (options.valueDiffing) {\n            if (objNode.value) {\n                node.value = objNode.value\n            }\n            if (objNode.checked) {\n                node.checked = objNode.checked\n            }\n            if (objNode.selected) {\n                node.selected = objNode.selected\n            }\n        }\n    }\n    return node\n}\n","import {objToNode} from \"./fromVirtual\"\n\n// ===== Apply a diff =====\n\nfunction getFromRoute(node, route) {\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        const c = route.splice(0, 1)[0]\n        node = node.childNodes[c]\n    }\n    return node\n}\n\nexport function applyDiff(\n        tree,\n        diff,\n        options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n    ) {\n    let node = getFromRoute(tree, diff[options._const.route])\n    let newNode\n    let reference\n    let route\n    let nodeArray\n    let c\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preDiffApply(info)) {\n        return true\n    }\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.value])\n            break\n        case options._const.modifyAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.newValue])\n            if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.newValue]\n            }\n            break\n        case options._const.removeAttribute:\n            if (!node || !node.removeAttribute) {\n                return false\n            }\n            node.removeAttribute(diff[options._const.name])\n            break\n        case options._const.modifyTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyValue:\n            if (!node || typeof node.value === 'undefined') {\n                return false\n            }\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            if (!node || typeof node.data === 'undefined') {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyChecked:\n            if (!node || typeof node.checked === 'undefined') {\n                return false\n            }\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            if (!node || typeof node.selected === 'undefined') {\n                return false\n            }\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            node.parentNode.replaceChild(\n                objToNode(\n                    diff[options._const.newValue],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node\n            )\n            break\n        case options._const.relocateGroup:\n            nodeArray = Array(...new Array(diff.groupLength)).map(() => node.removeChild(node.childNodes[diff[options._const.from]]))\n            nodeArray.forEach((childNode, index) => {\n                if (index === 0) {\n                    reference = node.childNodes[diff[options._const.to]]\n                }\n                node.insertBefore(childNode, reference || null)\n            })\n            break\n        case options._const.removeElement:\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromRoute(tree, route)\n            node.insertBefore(\n                objToNode(\n                    diff[options._const.element],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node.childNodes[c] || null\n            )\n            break\n        case options._const.removeTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = options.document.createTextNode(diff[options._const.value])\n            node = getFromRoute(tree, route)\n            if (!node || !node.childNodes) {\n                return false\n            }\n            node.insertBefore(newNode, node.childNodes[c] || null)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    // if a new node was created, we might be interested in its\n    // post diff hook\n    info.newNode = newNode\n    options.postDiffApply(info)\n\n    return true\n}\n\nexport function applyDOM(tree, diffs, options) {\n    return diffs.every(diff => applyDiff(tree, diff, options))\n}\n","import {applyDiff} from \"./apply\"\n\n// ===== Undo a diff =====\n\nfunction swap(obj, p1, p2) {\n    const tmp = obj[p1]\n    obj[p1] = obj[p2]\n    obj[p2] = tmp\n}\n\nfunction undoDiff(\n    tree,\n    diff,\n    options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n) {\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            diff[options._const.action] = options._const.removeAttribute\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyAttribute:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeAttribute:\n            diff[options._const.action] = options._const.addAttribute\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyTextElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyValue:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyComment:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyChecked:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifySelected:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.replaceElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.relocateGroup:\n            swap(diff, options._const.from, options._const.to)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeElement:\n            diff[options._const.action] = options._const.addElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.addElement:\n            diff[options._const.action] = options._const.removeElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeTextElement:\n            diff[options._const.action] = options._const.addTextElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.addTextElement:\n            diff[options._const.action] = options._const.removeTextElement\n            applyDiff(tree, diff, options)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n}\n\nexport function undoDOM(tree, diffs, options) {\n    if (!diffs.length) {\n        diffs = [diffs]\n    }\n    diffs = diffs.slice()\n    diffs.reverse()\n    diffs.forEach(diff => {\n        undoDiff(tree, diff, options)\n    })\n}\n","export class Diff {\n    constructor(options = {}) {\n        Object.entries(options).forEach(([key, value]) => this[key] = value)\n    }\n\n    toString() {\n        return JSON.stringify(this)\n    }\n\n    setValue(aKey, aValue) {\n        this[aKey] = aValue\n        return this\n    }\n}\n\nfunction elementDescriptors(el) {\n    const output = []\n    if (el.nodeName !== '#text' && el.nodeName !== '#comment') {\n        output.push(el.nodeName)\n        if (el.attributes) {\n            if (el.attributes['class']) {\n                output.push(`${el.nodeName}.${el.attributes['class'].replace(/ /g, '.')}`)\n            }\n            if (el.attributes.id) {\n                output.push(`${el.nodeName}#${el.attributes.id}`)\n            }\n        }\n\n    }\n    return output\n}\n\nfunction findUniqueDescriptors(li) {\n    const uniqueDescriptors = {}\n    const duplicateDescriptors = {}\n\n    li.forEach(node => {\n        elementDescriptors(node).forEach(descriptor => {\n            const inUnique = descriptor in uniqueDescriptors\n            const inDupes = descriptor in duplicateDescriptors\n            if (!inUnique && !inDupes) {\n                uniqueDescriptors[descriptor] = true\n            } else if (inUnique) {\n                delete uniqueDescriptors[descriptor]\n                duplicateDescriptors[descriptor] = true\n            }\n        })\n    })\n\n    return uniqueDescriptors\n}\n\nfunction uniqueInBoth(l1, l2) {\n    const l1Unique = findUniqueDescriptors(l1)\n    const l2Unique = findUniqueDescriptors(l2)\n    const inBoth = {}\n\n    Object.keys(l1Unique).forEach(key => {\n        if (l2Unique[key]) {\n            inBoth[key] = true\n        }\n    })\n\n    return inBoth\n}\n\nexport function removeDone(tree) {\n    delete tree.outerDone\n    delete tree.innerDone\n    delete tree.valueDone\n    if (tree.childNodes) {\n        return tree.childNodes.every(removeDone)\n    } else {\n        return true\n    }\n}\n\nexport function isEqual(e1, e2) {\n    if (!['nodeName', 'value', 'checked', 'selected', 'data'].every(element => {\n            if (e1[element] !== e2[element]) {\n                return false\n            }\n            return true\n        })) {\n        return false\n    }\n\n    if (Boolean(e1.attributes) !== Boolean(e2.attributes)) {\n        return false\n    }\n\n    if (Boolean(e1.childNodes) !== Boolean(e2.childNodes)) {\n        return false\n    }\n    if (e1.attributes) {\n        const e1Attributes = Object.keys(e1.attributes)\n        const e2Attributes = Object.keys(e2.attributes)\n\n        if (e1Attributes.length !== e2Attributes.length) {\n            return false\n        }\n        if (!e1Attributes.every(attribute => {\n                if (e1.attributes[attribute] !== e2.attributes[attribute]) {\n                    return false\n                }\n                return true\n            })) {\n            return false\n        }\n    }\n    if (e1.childNodes) {\n        if (e1.childNodes.length !== e2.childNodes.length) {\n            return false\n        }\n        if (!e1.childNodes.every((childNode, index) => isEqual(childNode, e2.childNodes[index]))) {\n\n            return false\n        }\n\n    }\n\n    return true\n}\n\n\nexport function roughlyEqual(e1, e2, uniqueDescriptors, sameSiblings, preventRecursion) {\n\n    if (!e1 || !e2) {\n        return false\n    }\n\n    if (e1.nodeName !== e2.nodeName) {\n        return false\n    }\n\n    if (e1.nodeName === '#text') {\n        // Note that we initially don't care what the text content of a node is,\n        // the mere fact that it's the same tag and \"has text\" means it's roughly\n        // equal, and then we can find out the true text difference later.\n        return preventRecursion ? true : e1.data === e2.data\n    }\n\n\n    if (e1.nodeName in uniqueDescriptors) {\n        return true\n    }\n\n    if (e1.attributes && e2.attributes) {\n\n        if (e1.attributes.id) {\n            if (e1.attributes.id !== e2.attributes.id) {\n                return false\n            } else {\n                const idDescriptor = `${e1.nodeName}#${e1.attributes.id}`\n                if (idDescriptor in uniqueDescriptors) {\n                    return true\n                }\n            }\n        }\n        if (e1.attributes['class'] && e1.attributes['class'] === e2.attributes['class']) {\n            const classDescriptor = `${e1.nodeName}.${e1.attributes['class'].replace(/ /g, '.')}`\n            if (classDescriptor in uniqueDescriptors) {\n                return true\n            }\n        }\n    }\n\n    if (sameSiblings) {\n        return true\n    }\n\n    const nodeList1 = e1.childNodes ? e1.childNodes.slice().reverse() : []\n    const nodeList2 = e2.childNodes ? e2.childNodes.slice().reverse() : []\n\n    if (nodeList1.length !== nodeList2.length) {\n        return false\n    }\n\n    if (preventRecursion) {\n        return nodeList1.every((element, index) => element.nodeName === nodeList2[index].nodeName)\n    } else {\n        // note: we only allow one level of recursion at any depth. If 'preventRecursion'\n        // was not set, we must explicitly force it to true for child iterations.\n        const childUniqueDescriptors = uniqueInBoth(nodeList1, nodeList2)\n        return nodeList1.every((element, index) => roughlyEqual(element, nodeList2[index], childUniqueDescriptors, true, true))\n    }\n}\n\n\nexport function cloneObj(obj) { //  TODO: Do we really need to clone here? Is it not enough to just return the original object?\n    return JSON.parse(JSON.stringify(obj))\n}\n/**\n * based on https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_substring#JavaScript\n */\nfunction findCommonSubsets(c1, c2, marked1, marked2) {\n    let lcsSize = 0\n    let index = []\n    const c1Length = c1.length\n    const c2Length = c2.length\n\n    const // set up the matching table\n        matches = Array(...new Array(c1Length + 1)).map(() => [])\n\n    const uniqueDescriptors = uniqueInBoth(c1, c2)\n\n    let // If all of the elements are the same tag, id and class, then we can\n        // consider them roughly the same even if they have a different number of\n        // children. This will reduce removing and re-adding similar elements.\n        subsetsSame = c1Length === c2Length\n\n    if (subsetsSame) {\n\n        c1.some((element, i) => {\n            const c1Desc = elementDescriptors(element)\n            const c2Desc = elementDescriptors(c2[i])\n            if (c1Desc.length !== c2Desc.length) {\n                subsetsSame = false\n                return true\n            }\n            c1Desc.some((description, i) => {\n                if (description !== c2Desc[i]) {\n                    subsetsSame = false\n                    return true\n                }\n            })\n            if (!subsetsSame) {\n                return true\n            }\n        })\n    }\n\n    // fill the matches with distance values\n    for (let c1Index = 0; c1Index < c1Length; c1Index++) {\n        const c1Element = c1[c1Index]\n        for (let c2Index = 0; c2Index < c2Length; c2Index++) {\n            const c2Element = c2[c2Index]\n            if (!marked1[c1Index] && !marked2[c2Index] && roughlyEqual(c1Element, c2Element, uniqueDescriptors, subsetsSame)) {\n                matches[c1Index + 1][c2Index + 1] = (matches[c1Index][c2Index] ? matches[c1Index][c2Index] + 1 : 1)\n                if (matches[c1Index + 1][c2Index + 1] >= lcsSize) {\n                    lcsSize = matches[c1Index + 1][c2Index + 1]\n                    index = [c1Index + 1, c2Index + 1]\n                }\n            } else {\n                matches[c1Index + 1][c2Index + 1] = 0\n            }\n        }\n    }\n\n    if (lcsSize === 0) {\n        return false\n    }\n\n    return {\n        oldValue: index[0] - lcsSize,\n        newValue: index[1] - lcsSize,\n        length: lcsSize\n    }\n}\n\n/**\n * This should really be a predefined function in Array...\n */\nfunction makeArray(n, v) {\n    return Array(...new Array(n)).map(() => v)\n}\n\n/**\n * Generate arrays that indicate which node belongs to which subset,\n * or whether it's actually an orphan node, existing in only one\n * of the two trees, rather than somewhere in both.\n *\n * So if t1 = <img><canvas><br>, t2 = <canvas><br><img>.\n * The longest subset is \"<canvas><br>\" (length 2), so it will group 0.\n * The second longest is \"<img>\" (length 1), so it will be group 1.\n * gaps1 will therefore be [1,0,0] and gaps2 [0,0,1].\n *\n * If an element is not part of any group, it will stay being 'true', which\n * is the initial value. For example:\n * t1 = <img><p></p><br><canvas>, t2 = <b></b><br><canvas><img>\n *\n * The \"<p></p>\" and \"<b></b>\" do only show up in one of the two and will\n * therefore be marked by \"true\". The remaining parts are parts of the\n * groups 0 and 1:\n * gaps1 = [1, true, 0, 0], gaps2 = [true, 0, 0, 1]\n *\n */\nexport function getGapInformation(t1, t2, stable) {\n    const gaps1 = t1.childNodes ? makeArray(t1.childNodes.length, true) : []\n    const gaps2 = t2.childNodes ? makeArray(t2.childNodes.length, true) : []\n    let group = 0\n\n    // give elements from the same subset the same group number\n    stable.forEach(subset => {\n        const endOld = subset.oldValue + subset.length\n        const endNew = subset.newValue + subset.length\n\n        for (let j = subset.oldValue; j < endOld; j += 1) {\n            gaps1[j] = group\n        }\n        for (let j = subset.newValue; j < endNew; j += 1) {\n            gaps2[j] = group\n        }\n        group += 1\n    })\n\n    return {\n        gaps1,\n        gaps2\n    }\n}\n\n/**\n * Find all matching subsets, based on immediate child differences only.\n */\nexport function markSubTrees(oldTree, newTree) {\n    // note: the child lists are views, and so update as we update old/newTree\n    const oldChildren = oldTree.childNodes ? oldTree.childNodes : []\n\n    const newChildren = newTree.childNodes ? newTree.childNodes : []\n    const marked1 = makeArray(oldChildren.length, false)\n    const marked2 = makeArray(newChildren.length, false)\n    const subsets = []\n    let subset = true\n\n    const returnIndex = function() {\n        return arguments[1]\n    }\n\n    const markBoth = i => {\n        marked1[subset.oldValue + i] = true\n        marked2[subset.newValue + i] = true\n    }\n\n    while (subset) {\n        subset = findCommonSubsets(oldChildren, newChildren, marked1, marked2)\n        if (subset) {\n            subsets.push(subset)\n            const subsetArray = Array(...new Array(subset.length)).map(returnIndex)\n            subsetArray.forEach(item => markBoth(item))\n        }\n    }\n\n    oldTree.subsets = subsets\n    oldTree.subsetsAge = 100\n    return subsets\n}\n\nexport class DiffTracker {\n    constructor() {\n        this.list = []\n    }\n\n    add(diffs) {\n        this.list.push(...diffs)\n    }\n    forEach(fn) {\n        this.list.forEach(li => fn(li))\n    }\n\n}\n","import {cloneObj} from \"./helpers\"\n\n// ===== Apply a virtual diff =====\n\nfunction getFromVirtualRoute(tree, route) {\n    let node = tree\n    let parentNode\n    let nodeIndex\n\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        nodeIndex = route.splice(0, 1)[0]\n        parentNode = node\n        node = node.childNodes[nodeIndex]\n    }\n    return {\n        node,\n        parentNode,\n        nodeIndex\n    }\n}\n\nfunction applyVirtualDiff(\n        tree,\n        diff,\n        options // {preDiffApply, postDiffApply, _const}\n    ) {\n    const routeInfo = getFromVirtualRoute(tree, diff[options._const.route])\n    let node = routeInfo.node\n    const parentNode = routeInfo.parentNode\n    const nodeIndex = routeInfo.nodeIndex\n    const newSubsets = []\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preDiffApply(info)) {\n        return true\n    }\n\n    let newNode\n    let nodeArray\n    let route\n    let c\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node.attributes) {\n                node.attributes = {}\n            }\n\n            node.attributes[diff[options._const.name]] = diff[options._const.value]\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = true\n            } else if (diff[options._const.name] === 'selected') {\n                node.selected = true\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.value]\n            }\n\n            break\n        case options._const.modifyAttribute:\n            node.attributes[diff[options._const.name]] = diff[options._const.newValue]\n            break\n        case options._const.removeAttribute:\n\n            delete node.attributes[diff[options._const.name]]\n\n            if (Object.keys(node.attributes).length === 0) {\n                delete node.attributes\n            }\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = false\n            } else if (diff[options._const.name] === 'selected') {\n                delete node.selected\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                delete node.value\n            }\n\n            break\n        case options._const.modifyTextElement:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyValue:\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyChecked:\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            newNode = cloneObj(diff[options._const.newValue])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n            parentNode.childNodes[nodeIndex] = newNode\n            break\n        case options._const.relocateGroup:\n            nodeArray = node.childNodes.splice(diff[options._const.from], diff.groupLength).reverse()\n            nodeArray.forEach(movedNode => node.childNodes.splice(diff[options._const.to], 0, movedNode))\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (diff[options._const.from] < diff[options._const.to] && map.oldValue <= diff[options._const.to] && map.oldValue > diff[options._const.from]) {\n                        map.oldValue -= diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (diff[options._const.from] > diff[options._const.to] && map.oldValue > diff[options._const.to] && map.oldValue < diff[options._const.from]) {\n                        map.oldValue += diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (map.oldValue === diff[options._const.from]) {\n                        map.oldValue = diff[options._const.to]\n                    }\n                })\n            }\n\n            break\n        case options._const.removeElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromVirtualRoute(tree, route).node\n            newNode = cloneObj(diff[options._const.element])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    } else if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        case options._const.removeTextElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.nodeName === 'TEXTAREA') {\n                delete parentNode.value\n            }\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = {}\n            newNode.nodeName = '#text'\n            newNode.data = diff[options._const.value]\n            node = getFromVirtualRoute(tree, route).node\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.nodeName === 'TEXTAREA') {\n                node.value = diff[options._const.newValue]\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    }\n                    if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    if (node.subsets) {\n        node.subsets = node.subsets.filter(map => !map.delete && map.oldValue !== map.newValue)\n        if (newSubsets.length) {\n            node.subsets = node.subsets.concat(newSubsets)\n        }\n    }\n\n    // capture newNode for the callback\n    info.newNode = newNode\n    options.postDiffApply(info)\n\n    return\n}\n\nexport function applyVirtual(tree, diffs, options) {\n    diffs.forEach(diff => {\n        applyVirtualDiff(tree, diff, options)\n    })\n    return true\n}\n","export function nodeToObj(aNode, options = {}) {\n    const objNode = {}\n    objNode.nodeName = aNode.nodeName\n    if (objNode.nodeName === '#text' || objNode.nodeName === '#comment') {\n        objNode.data = aNode.data\n    } else {\n        if (aNode.attributes && aNode.attributes.length > 0) {\n            objNode.attributes = {}\n            const nodeArray = Array.prototype.slice.call(aNode.attributes)\n            nodeArray.forEach(attribute => objNode.attributes[attribute.name] = attribute.value)\n        }\n        if (objNode.nodeName === 'TEXTAREA') {\n            objNode.value = aNode.value\n        } else if (aNode.childNodes && aNode.childNodes.length > 0) {\n            objNode.childNodes = []\n            const nodeArray = Array.prototype.slice.call(aNode.childNodes)\n            nodeArray.forEach(childNode => objNode.childNodes.push(nodeToObj(childNode, options)))\n        }\n        if (options.valueDiffing) {\n            if (aNode.checked !== undefined && aNode.type && ['radio', 'checkbox'].includes(aNode.type.toLowerCase())) {\n                objNode.checked = aNode.checked\n            } else if (aNode.value !== undefined) {\n                objNode.value = aNode.value\n            }\n            if (aNode.selected !== undefined) {\n                objNode.selected = aNode.selected\n            }\n        }\n    }\n    return objNode\n}\n","// from html-parse-stringify (MIT)\n\nconst tagRE = /<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>/g\n// re-used obj for quick lookups of components\nconst empty = Object.create ? Object.create(null) : {}\nconst attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g\n\n\nfunction unescape(string) {\n    return string.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n.replace(/&amp;/g, '&')\n}\n\n// create optimized lookup object for\n// void elements as listed here:\n// http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nconst lookup = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuItem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n}\n\n\nfunction parseTag(tag) {\n    const res = {\n        nodeName: '',\n        attributes: {}\n    }\n\n    let tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/)\n    if (tagMatch) {\n        res.nodeName = tagMatch[1].toUpperCase()\n        if (lookup[tagMatch[1].toLowerCase()] || tag.charAt(tag.length - 2) === '/') res.voidElement = true\n\n    }\n\n    let reg = new RegExp(attrRE)\n    let result = null\n    let done = false\n    while (!done) {\n        result = reg.exec(tag)\n\n        if (result === null) {\n            done = true\n        } else if (result[0].trim()) {\n            if (result[1]) {\n                let attr = result[1].trim()\n                let arr = [attr, \"\"]\n\n                if (attr.indexOf(\"=\") > -1) arr = attr.split(\"=\")\n\n                res.attributes[arr[0]] = arr[1]\n                reg.lastIndex--\n            } else if (result[2]) res.attributes[result[2]] = result[3].trim().substring(1, result[3].length - 1)\n        }\n    }\n\n    return res\n}\n\nfunction parse(\n    html,\n    options = {components: empty}\n) {\n    const result = []\n    let current\n    let level = -1\n    const arr = []\n    const byTag = {}\n    let inComponent = false\n\n    html.replace(tagRE, (tag, index) => {\n        if (inComponent) {\n            if (tag !== (`</${current.nodeName}>`)) {\n                return\n            } else {\n                inComponent = false\n            }\n        }\n        const isOpen = tag.charAt(1) !== '/'\n        const start = index + tag.length\n        const nextChar = html.charAt(start)\n        let parent\n\n        if (isOpen) {\n            level++\n\n            current = parseTag(tag)\n            if (current.type === 'tag' && options.components[current.nodeName]) {\n                current.type = 'component'\n                inComponent = true\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                if (!current.childNodes) {\n                    current.childNodes = []\n                }\n                current.childNodes.push({\n                    nodeName: '#text',\n                    data: unescape(html.slice(start, html.indexOf('<', start)))\n                })\n            }\n\n            byTag[current.tagName] = current\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current)\n            }\n\n            parent = arr[level - 1]\n\n            if (parent) {\n                if (!parent.childNodes) {\n                    parent.childNodes = []\n                }\n                parent.childNodes.push(current)\n            }\n\n            arr[level] = current\n        }\n\n        if (!isOpen || current.voidElement) {\n            level--\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                parent = level === -1 ? result : arr[level].childNodes || []\n\n                // calculate correct end of the data slice in case there's\n                // no tag after the text node.\n                const end = html.indexOf('<', start)\n                const data = unescape(html.slice(start, end === -1 ? undefined : end))\n                parent.push({\n                    nodeName: '#text',\n                    data\n                })\n            }\n        }\n    })\n\n    return result[0]\n}\n\nfunction cleanObj(obj) {\n    delete obj.voidElement\n    if (obj.childNodes) {\n        obj.childNodes.forEach(child => cleanObj(child))\n    }\n    return obj\n}\n\nexport function stringToObj(string) {\n    return cleanObj(parse(string))\n}\n","import {Diff, DiffTracker, cloneObj, getGapInformation, isEqual, markSubTrees, removeDone, roughlyEqual} from \"./helpers\"\nimport {applyVirtual} from \"./apply\"\nimport {nodeToObj} from \"./fromDOM\"\nimport {stringToObj} from \"./fromString\"\n\n// ===== Create a diff =====\n\nexport class DiffFinder {\n    constructor(t1Node, t2Node, options) {\n        this.options = options\n        this.t1 = (t1Node instanceof HTMLElement) ? nodeToObj(t1Node, this.options) : (typeof t1Node === 'string') ? stringToObj(t1Node, this.options) : JSON.parse(JSON.stringify(t1Node))\n        this.t2 = (t2Node instanceof HTMLElement) ? nodeToObj(t2Node, this.options) : (typeof t2Node === 'string') ? stringToObj(t2Node, this.options) : JSON.parse(JSON.stringify(t2Node))\n        this.diffcount = 0\n        this.foundAll = false\n        if (this.debug) {\n            this.t1Orig = nodeToObj(t1Node, this.options)\n            this.t2Orig = nodeToObj(t2Node, this.options)\n        }\n\n        this.tracker = new DiffTracker()\n    }\n\n    init() {\n        return this.findDiffs(this.t1, this.t2)\n    }\n\n    findDiffs(t1, t2) {\n        let diffs\n        do {\n            if (this.options.debug) {\n                this.diffcount += 1\n                if (this.diffcount > this.options.diffcap) {\n                    window.diffError = [this.t1Orig, this.t2Orig]\n                    throw new Error(`surpassed diffcap:${JSON.stringify(this.t1Orig)} -> ${JSON.stringify(this.t2Orig)}`)\n                }\n            }\n            diffs = this.findNextDiff(t1, t2, [])\n\n            if (diffs.length === 0) {\n                // Last check if the elements really are the same now.\n                // If not, remove all info about being done and start over.\n                // Sometimes a node can be marked as done, but the creation of subsequent diffs means that it has to be changed again.\n                if (!isEqual(t1, t2)) {\n                    if (this.foundAll) {\n                        console.error('Could not find remaining diffs!')\n                    } else {\n                        this.foundAll = true\n                        removeDone(t1)\n                        diffs = this.findNextDiff(t1, t2, [])\n                    }\n                }\n            }\n            if (diffs.length > 0) {\n                this.foundAll = false\n                this.tracker.add(diffs)\n                applyVirtual(t1, diffs, this.options)\n            }\n        } while (diffs.length > 0)\n\n        return this.tracker.list\n    }\n\n    findNextDiff(t1, t2, route) {\n        let diffs\n        let fdiffs\n\n        if (this.options.maxDepth && route.length > this.options.maxDepth) {\n            return []\n        }\n        // outer differences?\n        if (!t1.outerDone) {\n            diffs = this.findOuterDiff(t1, t2, route)\n            if (this.options.filterOuterDiff) {\n                fdiffs = this.options.filterOuterDiff(t1, t2, diffs)\n                if (fdiffs) diffs = fdiffs\n            }\n            if (diffs.length > 0) {\n                t1.outerDone = true\n                return diffs\n            } else {\n                t1.outerDone = true\n            }\n        }\n        // inner differences?\n        if (!t1.innerDone) {\n            diffs = this.findInnerDiff(t1, t2, route)\n            if (diffs.length > 0) {\n                return diffs\n            } else {\n                t1.innerDone = true\n            }\n        }\n\n        if (this.options.valueDiffing && !t1.valueDone) {\n            // value differences?\n            diffs = this.findValueDiff(t1, t2, route)\n\n            if (diffs.length > 0) {\n                t1.valueDone = true\n                return diffs\n            } else {\n                t1.valueDone = true\n            }\n        }\n\n        // no differences\n        return []\n    }\n\n    findOuterDiff(t1, t2, route) {\n        const diffs = []\n        let attr\n        let attr1\n        let attr2\n        let attrLength\n        let pos\n        let i\n        if (t1.nodeName !== t2.nodeName) {\n            if (!route.length) {\n                throw new Error('Top level nodes have to be of the same kind.')\n            }\n            return [new Diff()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, cloneObj(t1))\n                .setValue(this.options._const.newValue, cloneObj(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n        if (route.length && this.options.maxNodeDiffCount < Math.abs((t1.childNodes || []).length - (t2.childNodes || []).length)) {\n            return [new Diff()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, cloneObj(t1))\n                .setValue(this.options._const.newValue, cloneObj(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n\n        if (t1.data !== t2.data) {\n            // Comment or text node.\n            if (t1.nodeName === '#text') {\n                return [new Diff()\n                    .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            } else {\n                return [new Diff()\n                    .setValue(this.options._const.action, this.options._const.modifyComment)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            }\n\n        }\n\n        attr1 = t1.attributes ? Object.keys(t1.attributes).sort() : []\n        attr2 = t2.attributes ? Object.keys(t2.attributes).sort() : []\n\n        attrLength = attr1.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr1[i]\n            pos = attr2.indexOf(attr)\n            if (pos === -1) {\n                diffs.push(new Diff()\n                    .setValue(this.options._const.action, this.options._const.removeAttribute)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.name, attr)\n                    .setValue(this.options._const.value, t1.attributes[attr])\n                )\n            } else {\n                attr2.splice(pos, 1)\n                if (t1.attributes[attr] !== t2.attributes[attr]) {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyAttribute)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.name, attr)\n                        .setValue(this.options._const.oldValue, t1.attributes[attr])\n                        .setValue(this.options._const.newValue, t2.attributes[attr])\n                    )\n                }\n            }\n        }\n\n        attrLength = attr2.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr2[i]\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.addAttribute)\n                .setValue(this.options._const.route, route)\n                .setValue(this.options._const.name, attr)\n                .setValue(this.options._const.value, t2.attributes[attr])\n            )\n        }\n\n        return diffs\n    }\n\n    findInnerDiff(t1, t2, route) {\n        const t1ChildNodes = t1.childNodes ? t1.childNodes.slice() : []\n        const t2ChildNodes = t2.childNodes ? t2.childNodes.slice() : []\n        const last = Math.max(t1ChildNodes.length, t2ChildNodes.length)\n        let childNodesLengthDifference = Math.abs(t1ChildNodes.length - t2ChildNodes.length)\n        let diffs = []\n        let index = 0\n        if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n            const subtrees = t1.subsets && t1.subsetsAge-- ? t1.subsets : (t1.childNodes && t2.childNodes) ? markSubTrees(t1, t2) : []\n\n            if (subtrees.length > 0) {\n                /* One or more groups have been identified among the childnodes of t1\n                 * and t2.\n                 */\n                diffs = this.attemptGroupRelocation(t1, t2, subtrees, route)\n                if (diffs.length > 0) {\n                    return diffs\n                }\n            }\n        }\n\n\n        /* 0 or 1 groups of similar child nodes have been found\n         * for t1 and t2. 1 If there is 1, it could be a sign that the\n         * contents are the same. When the number of groups is below 2,\n         * t1 and t2 are made to have the same length and each of the\n         * pairs of child nodes are diffed.\n         */\n\n        for (let i = 0; i < last; i += 1) {\n            const e1 = t1ChildNodes[i]\n            const e2 = t2ChildNodes[i]\n\n            if (childNodesLengthDifference) {\n                /* t1 and t2 have different amounts of childNodes. Add\n                 * and remove as necessary to obtain the same length */\n                if (e1 && !e2) {\n                    if (e1.nodeName === '#text') {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e1.data)\n                        )\n                        index -= 1\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cloneObj(e1))\n                        )\n                        index -= 1\n                    }\n\n                } else if (e2 && !e1) {\n                    if (e2.nodeName === '#text') {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e2.data)\n                        )\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cloneObj(e2))\n                        )\n                    }\n                }\n            }\n            /* We are now guaranteed that childNodes e1 and e2 exist,\n             * and that they can be diffed.\n             */\n            /* Diffs in child nodes should not affect the parent node,\n             * so we let these diffs be submitted together with other\n             * diffs.\n             */\n\n            if (e1 && e2) {\n                if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n                    diffs = diffs.concat(this.findNextDiff(e1, e2, route.concat(index)))\n                } else if (!isEqual(e1, e2)) {\n                    if (t1ChildNodes.length > t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeElement)\n                                .setValue(this.options._const.element, cloneObj(e1))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                        t1ChildNodes.splice(i, 1)\n                        index -= 1\n                        childNodesLengthDifference -= 1\n                    } else if (t1ChildNodes.length < t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.addElement)\n                                .setValue(this.options._const.element, cloneObj(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                        t1ChildNodes.splice(i, 0, {})\n                        childNodesLengthDifference -= 1\n                    } else {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.replaceElement)\n                                .setValue(this.options._const.oldValue, cloneObj(e1))\n                                .setValue(this.options._const.newValue, cloneObj(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                    }\n\n                }\n\n            }\n            index += 1\n\n        }\n        t1.innerDone = true\n        return diffs\n    }\n\n    attemptGroupRelocation(t1, t2, subtrees, route) {\n        /* Either t1.childNodes and t2.childNodes have the same length, or\n         * there are at least two groups of similar elements can be found.\n         * attempts are made at equalizing t1 with t2. First all initial\n         * elements with no group affiliation (gaps=true) are removed (if\n         * only in t1) or added (if only in t2). Then the creation of a group\n         * relocation diff is attempted.\n         */\n        const gapInformation = getGapInformation(t1, t2, subtrees)\n        const gaps1 = gapInformation.gaps1\n        const gaps2 = gapInformation.gaps2\n        let shortest = Math.min(gaps1.length, gaps2.length)\n        let destinationDifferent\n        let toGroup\n        let group\n        let node\n        let similarNode\n        let testI\n        const diffs = []\n\n\n        for (let index2 = 0, index1 = 0; index2 < shortest; index1 += 1, index2 += 1) {\n            if (gaps1[index2] === true) {\n                node = t1.childNodes[index1]\n                if (node.nodeName === '#text') {\n                    if (t2.childNodes[index2].nodeName === '#text' && node.data !== t2.childNodes[index2].data) {\n                        testI = index1\n                        while (t1.childNodes.length > testI + 1 && t1.childNodes[testI + 1].nodeName === '#text') {\n                            testI += 1\n                            if (t2.childNodes[index2].data === t1.childNodes[testI].data) {\n                                similarNode = true\n                                break\n                            }\n                        }\n                        if (!similarNode) {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                                .setValue(this.options._const.route, route.concat(index2))\n                                .setValue(this.options._const.oldValue, node.data)\n                                .setValue(this.options._const.newValue, t2.childNodes[index2].data)\n                            )\n                            return diffs\n                        }\n                    }\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.removeTextElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.value, node.data)\n                    )\n                    gaps1.splice(index2, 1)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index2 -= 1\n                } else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.removeElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cloneObj(node))\n                    )\n                    gaps1.splice(index2, 1)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index2 -= 1\n                }\n\n            } else if (gaps2[index2] === true) {\n                node = t2.childNodes[index2]\n                if (node.nodeName === '#text') {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addTextElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.value, node.data)\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                } else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cloneObj(node))\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                }\n\n            } else if (gaps1[index2] !== gaps2[index2]) {\n                if (diffs.length > 0) {\n                    return diffs\n                }\n                // group relocation\n                group = subtrees[gaps1[index2]]\n                toGroup = Math.min(group.newValue, (t1.childNodes.length - group.length))\n                if (toGroup !== group.oldValue) {\n                    // Check whether destination nodes are different than originating ones.\n                    destinationDifferent = false\n                    for (let j = 0; j < group.length; j += 1) {\n                        if (!roughlyEqual(t1.childNodes[toGroup + j], t1.childNodes[group.oldValue + j], [], false, true)) {\n                            destinationDifferent = true\n                        }\n                    }\n                    if (destinationDifferent) {\n                        return [new Diff()\n                            .setValue(this.options._const.action, this.options._const.relocateGroup)\n                            .setValue('groupLength', group.length)\n                            .setValue(this.options._const.from, group.oldValue)\n                            .setValue(this.options._const.to, toGroup)\n                            .setValue(this.options._const.route, route)\n                        ]\n                    }\n                }\n            }\n        }\n        return diffs\n    }\n\n    findValueDiff(t1, t2, route) {\n        // Differences of value. Only useful if the value/selection/checked value\n        // differs from what is represented in the DOM. For example in the case\n        // of filled out forms, etc.\n        const diffs = []\n\n        if (t1.selected !== t2.selected) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifySelected)\n                .setValue(this.options._const.oldValue, t1.selected)\n                .setValue(this.options._const.newValue, t2.selected)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        if ((t1.value || t2.value) && t1.value !== t2.value && t1.nodeName !== 'OPTION') {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyValue)\n                .setValue(this.options._const.oldValue, t1.value || \"\")\n                .setValue(this.options._const.newValue, t2.value || \"\")\n                .setValue(this.options._const.route, route)\n            )\n        }\n        if (t1.checked !== t2.checked) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyChecked)\n                .setValue(this.options._const.oldValue, t1.checked)\n                .setValue(this.options._const.newValue, t2.checked)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        return diffs\n    }\n\n}\n","import {applyDOM, undoDOM} from \"./dom/index\"\nimport {DiffFinder} from \"./virtual/index\"\nexport {nodeToObj, stringToObj} from \"./virtual/index\"\n\nconst DEFAULT_OPTIONS = {\n    debug: false,\n    diffcap: 10, // Limit for how many diffs are accepting when debugging. Inactive when debug is false.\n    maxDepth: false, // False or a numeral. If set to a numeral, limits the level of depth that the the diff mechanism looks for differences. If false, goes through the entire tree.\n    maxChildCount: 50, // False or a numeral. If set to a numeral, only does a simplified form of diffing of contents so that the number of diffs cannot be higher than the number of child nodes.\n    valueDiffing: true, // Whether to take into consideration the values of forms that differ from auto assigned values (when a user fills out a form).\n    // syntax: textDiff: function (node, currentValue, expectedValue, newValue)\n    textDiff(node, currentValue, expectedValue, newValue) {\n        node.data = newValue\n        return\n    },\n    // empty functions were benchmarked as running faster than both\n    // `f && f()` and `if (f) { f(); }`\n    preVirtualDiffApply() {},\n    postVirtualDiffApply() {},\n    preDiffApply() {},\n    postDiffApply() {},\n    filterOuterDiff: null,\n    compress: false, // Whether to work with compressed diffs\n    _const: false, // object with strings for every change types to be used in diffs.\n    document: window && window.document ? window.document : false\n}\n\n\nexport class DiffDOM {\n    constructor(options = {}) {\n\n        this.options = options\n        // IE11 doesn't have Object.assign and buble doesn't translate object spreaders\n        // by default, so this is the safest way of doing it currently.\n        Object.entries(DEFAULT_OPTIONS).forEach(([key, value]) => {\n            if (!Object.prototype.hasOwnProperty.call(this.options, key)) {\n                this.options[key] = value\n            }\n        })\n\n        if (!this.options._const) {\n            const varNames = [\"addAttribute\", \"modifyAttribute\", \"removeAttribute\",\n                \"modifyTextElement\", \"relocateGroup\", \"removeElement\", \"addElement\",\n                \"removeTextElement\", \"addTextElement\", \"replaceElement\", \"modifyValue\",\n                \"modifyChecked\", \"modifySelected\", \"modifyComment\", \"action\", \"route\",\n                \"oldValue\", \"newValue\", \"element\", \"group\", \"from\", \"to\", \"name\",\n                \"value\", \"data\", \"attributes\", \"nodeName\", \"childNodes\", \"checked\",\n                \"selected\"\n            ]\n            this.options._const = {}\n            if (this.options.compress) {\n                varNames.forEach((varName, index) => this.options._const[varName] = index)\n            } else {\n                varNames.forEach(varName => this.options._const[varName] = varName)\n            }\n        }\n\n        this.DiffFinder = DiffFinder\n\n    }\n\n    apply(tree, diffs) {\n        return applyDOM(tree, diffs, this.options)\n    }\n\n    undo(tree, diffs) {\n        return undoDOM(tree, diffs, this.options)\n    }\n\n    diff(t1Node, t2Node) {\n        const finder = new this.DiffFinder(t1Node, t2Node, this.options)\n        return finder.init()\n    }\n\n}\n","import { GdprManager } from \"gdpr-guard\";\r\nimport { RenderPayload, render, GdprPayload } from \"./render\";\r\nimport { Rendered } from \"./Renderer\";\r\nimport { DiffDOM } from \"diff-dom\";\r\n\r\n/**\r\n * @global diffing\r\n * Used for DOM diffing operations (to efficiently reduce DOM manipulations)\r\n */\r\nconst diffing = new DiffDOM();\r\n\r\n/**\r\n * Mount the rendered element in the target (using diffs)\r\n * @param target - The target in which the rendered element will be mounted\r\n * @param rendered - The rendered element to mount\r\n */\r\nexport const mountOnTarget = (target: Element, rendered: Rendered) => {\r\n\tif(target.childElementCount){\r\n\t\tconst diffSource = target.children.item(0);\r\n\t\tconst diff = diffing.diff(diffSource, rendered);\r\n\t\tdiffing.apply(diffSource, diff);\r\n\t}else // for very first render (otherwise diff root is !=)\r\n\t\ttarget.appendChild(rendered);\r\n};\r\n\r\nexport type ReRenderFunction = () => Promise<GdprManager>;\r\n\r\nexport interface ReRenderResult{\r\n\trender: ReRenderFunction;\r\n\tmanager: GdprManager;\r\n}\r\n\r\n/**\r\n * Render the GDPR state inside of the given target (provides re-render function)\r\n * @param target - The target in which the rendered element will be mounted\r\n * @param manager - The manager state to render\r\n * @param payload - The render configuration\r\n * @returns The function to call to re-render\r\n */\r\nexport const renderInside = async (target: Element, gdpr: GdprPayload, payload: RenderPayload): Promise<ReRenderResult> => {\r\n\tconst doRender: ReRenderFunction = async () => {\r\n\t\tconst { rendered, manager } = await render(gdpr, payload);\r\n\t\tmountOnTarget(target, rendered);\r\n\t\treturn manager;\r\n\t};\r\n\r\n\tconst manager: GdprManager = await doRender();\r\n\r\n\treturn {\r\n\t\trender: doRender,\r\n\t\tmanager,\r\n\t};\r\n}\r\n","import * as gdprGuard from \"gdpr-guard\"\r\n\r\nexport * from \"./Renderer\"\r\nexport * from \"./render\"\r\nexport * from \"./utils\"\r\n\r\nexport {\r\n\tgdprGuard,\r\n}\r\n"],"sourceRoot":""}