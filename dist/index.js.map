{"version":3,"file":"index.js","mappings":"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","sources":["webpack://domGdprGuard/webpack/universalModuleDefinition","webpack://domGdprGuard/./node_modules/gdpr-guard/dist/gdpr_guard.js","webpack://domGdprGuard/webpack/bootstrap","webpack://domGdprGuard/webpack/runtime/define property getters","webpack://domGdprGuard/webpack/runtime/hasOwnProperty shorthand","webpack://domGdprGuard/webpack/runtime/make namespace object","webpack://domGdprGuard/./src/render.ts","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/fromVirtual.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/apply.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/undo.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/helpers.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/apply.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/fromString.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/diff.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/index.js","webpack://domGdprGuard/./src/utils.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"domGdprGuard\"] = factory();\n\telse\n\t\troot[\"domGdprGuard\"] = factory();\n})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : this, () => {\nreturn ","!function(r,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"gdprGuard\",[],t):\"object\"==typeof exports?exports.gdprGuard=t():r.gdprGuard=t()}(\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:this,(()=>(()=>{\"use strict\";var r={315:(r,t,e)=>{Object.defineProperty(t,\"__esModule\",{value:!0}),t.makeGuard=void 0;var n=e(670);t.makeGuard=function(r,t,e,o,i){return void 0===e&&(e=n.GdprStorage.Cookie),void 0===o&&(o=!1),void 0===i&&(i=null),{name:r,description:t,storage:e,required:o,enabled:null===i?o:i,enable:function(){return this.enabled||this.toggle(),this},disable:function(){return this.enabled&&this.toggle(),this},toggle:function(){return this.required||(this.enabled=!this.enabled),this},makeRequired:function(){return this.required=!0,this.enabled=!0,this},isEnabled:function(r){return this.name===r&&this.enabled},enableForStorage:function(r){return this.enabled||this.toggleForStorage(r),this},disableForStorage:function(r){return this.enabled&&this.toggleForStorage(r),this},toggleForStorage:function(r){return this.storage!=r||this.required||this.toggle(),this},raw:function(){return JSON.parse(JSON.stringify(this))}}}},822:function(r,t,e){var n=this&&this.__read||function(r,t){var e=\"function\"==typeof Symbol&&r[Symbol.iterator];if(!e)return r;var n,o,i=e.call(r),u=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(r){o={error:r}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},o=this&&this.__spreadArray||function(r,t,e){if(e||2===arguments.length)for(var n,o=0,i=t.length;o<i;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return r.concat(n||Array.prototype.slice.call(t))},i=this&&this.__values||function(r){var t=\"function\"==typeof Symbol&&Symbol.iterator,e=t&&r[t],n=0;if(e)return e.call(r);if(r&&\"number\"==typeof r.length)return{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")};Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprGuardGroup=void 0;var u=e(670),a=function(){function r(r,t,e,n){void 0===t&&(t=\"\"),void 0===e&&(e=!1),void 0===n&&(n=!1),this.name=r,this.description=t,this.enabled=e,this.required=n,this.storage=u.GdprStorage.None,this.bindings=new Map,this.required&&(this.enabled=!0)}return r.for=function(t,e,n,o){return void 0===e&&(e=\"\"),void 0===n&&(n=!1),void 0===o&&(o=!1),new r(t,e,n,o)},r.prototype.addGuard=function(r){return this.bindings.set(r.name,r),this},r.prototype.hasGuard=function(r){return this.name===r||this.bindings.has(r)||this.reduceSubGroupsPred((function(t){return t.hasGuard(r)}))},r.prototype.getGuard=function(r){var t,e;return this.name===r?this:null!==(e=null!==(t=this.bindings.get(r))&&void 0!==t?t:this.reduceSubGroups((function(t){return t.getGuard(r)})))&&void 0!==e?e:null},r.prototype.isEnabled=function(r){if(this.hasGuard(r)){var t=this.getGuard(r);if(null!==t)return t.enabled}return!1},r.prototype.enable=function(){return this.required?this:(this.enabled=!0,this.doForEachGuard((function(r){return r.enable()})))},r.prototype.disable=function(){return this.required?this:(this.enabled=!1,this.doForEachGuard((function(r){return r.disable()})))},r.prototype.toggle=function(){return this.enabled?this.disable():this.enable()},r.prototype.makeRequired=function(){return this.required=!0,this.enabled=!0,this.doForEachGuard((function(r){return r.makeRequired()}))},r.prototype.enableForStorage=function(r){return this.required?this:this.doForEachGuard((function(t){t.enableForStorage(r)}))},r.prototype.disableForStorage=function(r){return this.required?this:this.doForEachGuard((function(t){t.disableForStorage(r)}))},r.prototype.toggleForStorage=function(r){return this.required?this:this.doForEachGuard((function(t){t.toggleForStorage(r)}))},r.prototype.raw=function(){var r={name:this.name,description:this.description,enabled:this.enabled,required:this.required,storage:this.storage,guards:[]};return r.guards=o([],n(this.bindings),!1).map((function(r){var t=n(r,2);return t[0],t[1].raw()})),r},r.prototype.doForEachGuard=function(r){return this.bindings.forEach((function(t){return r(t)})),this},r.prototype.reduceSubGroupsPred=function(t){var e,o;try{for(var u=i(this.bindings),a=u.next();!a.done;a=u.next()){var s=n(a.value,2),d=(s[0],s[1]);if(d instanceof r&&t(d))return!0}}catch(r){e={error:r}}finally{try{a&&!a.done&&(o=u.return)&&o.call(u)}finally{if(e)throw e.error}}return!1},r.prototype.reduceSubGroups=function(t){var e,o;try{for(var u=i(this.bindings),a=u.next();!a.done;a=u.next()){var s=n(a.value,2),d=(s[0],s[1]);if(d instanceof r){var c=t(d);if(c)return c}}}catch(r){e={error:r}}finally{try{a&&!a.done&&(o=u.return)&&o.call(u)}finally{if(e)throw e.error}}return null},r.prototype.getGuards=function(){return o([],n(this.bindings.values()),!1)},r}();t.GdprGuardGroup=a},777:function(r,t,e){var n=this&&this.__values||function(r){var t=\"function\"==typeof Symbol&&Symbol.iterator,e=t&&r[t],n=0;if(e)return e.call(r);if(r&&\"number\"==typeof r.length)return{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},o=this&&this.__read||function(r,t){var e=\"function\"==typeof Symbol&&r[Symbol.iterator];if(!e)return r;var n,o,i=e.call(r),u=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(r){o={error:r}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},i=this&&this.__spreadArray||function(r,t,e){if(e||2===arguments.length)for(var n,o=0,i=t.length;o<i;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return r.concat(n||Array.prototype.slice.call(t))};Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprManager=void 0;var u=e(822),a=e(670),s=e(554),d=e(779),c=function(){function r(){this.bannerWasShown=!1,this.enabled=!0,this.events=new s.GdprManagerEventHub,this.groups=new Map,this.name=\"manager\",this.description=\"Manager of GDPR guard groups\",this.storage=a.GdprStorage.None,this.required=!1}return r.create=function(t){void 0===t&&(t=[]);var e=new r;return t.forEach((function(r){return e.addGroup(r)})),e},r.prototype.closeBanner=function(){var r=this;this.bannerWasShown=!0,(0,d.visitGdpr)(this,{onEach:function(t){t.enabled?r.events.enable(t.name):r.events.disable(t.name)}})},r.prototype.resetAndShowBanner=function(){this.bannerWasShown=!1},r.prototype.createGroup=function(r,t){return void 0===t&&(t=\"\"),this.addGroup(u.GdprGuardGroup.for(r,t))},r.prototype.addGroup=function(r){return this.groups.set(r.name,r),this},r.prototype.hasGuard=function(r){return this.reduceGroupsPred((function(t){return t.hasGuard(r)}))},r.prototype.getGuard=function(r){var t,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2),s=(a[0],a[1]);if(s.hasGuard(r))return s.getGuard(r)}}catch(r){t={error:r}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}return null},r.prototype.hasGroup=function(r){return this.reduceGroupsPred((function(t){return t.name===r}))},r.prototype.getGroup=function(r){var t,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2),s=a[0],d=a[1];if(s===r)return d}}catch(r){t={error:r}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}return null},r.prototype.isEnabled=function(r){return this.reduceGroupsPred((function(t){return t.isEnabled(r)}))},r.prototype.enable=function(){return this.enabled=!0,this.forEachGroup((function(r){return r.enable()}))},r.prototype.disable=function(){return this.enabled=!1,this.forEachGroup((function(r){return r.disable()}))},r.prototype.toggle=function(){return this.enabled?this.disable():this.enable()},r.prototype.makeRequired=function(){return this},r.prototype.enableForStorage=function(r){return this.forEachGroup((function(t){return t.enableForStorage(r)}))},r.prototype.disableForStorage=function(r){return this.forEachGroup((function(t){return t.disableForStorage(r)}))},r.prototype.toggleForStorage=function(r){return this.forEachGroup((function(t){return t.toggleForStorage(r)}))},r.prototype.raw=function(){var r={bannerWasShown:this.bannerWasShown,enabled:this.enabled,groups:[],name:this.name,description:this.description,storage:this.storage,required:this.required};return r.groups=i([],o(this.groups.values()),!1).map((function(r){return r.raw()})),r},r.prototype.reduceGroupsPred=function(r){var t,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2);if(a[0],r(a[1]))return!0}}catch(r){t={error:r}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}return!1},r.prototype.forEachGroup=function(r){return this.groups.forEach((function(t){return r(t)})),this},r.prototype.getGroups=function(){return i([],o(this.groups.values()),!1)},r}();t.GdprManager=c},554:(r,t)=>{Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprManagerEventHub=void 0;var e=function(){function r(){this.eventMap={}}return r.prototype.onEnable=function(r,t){return this.addListener(\"enable\",r,t),this},r.prototype.onDisable=function(r,t){return this.addListener(\"disable\",r,t),this},r.prototype.enable=function(r){return this.executeListeners(\"enable\",r),this},r.prototype.disable=function(r){return this.executeListeners(\"disable\",r),this},r.prototype.tagFor=function(r,t){return\"\".concat(r,\"--\").concat(t)},r.prototype.addListener=function(r,t,e){var n=this.tagFor(r,t);n in this.eventMap||(this.eventMap[n]=[]),this.eventMap[n].push(e)},r.prototype.executeListeners=function(r,t){var e,n=this.tagFor(r,t);null===(e=this.eventMap[n])||void 0===e||e.forEach((function(r){return r()}))},r}();t.GdprManagerEventHub=e},670:(r,t)=>{var e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprStorage=void 0,function(r){r[r.None=1]=\"None\",r[r.Cookie=2]=\"Cookie\",r[r.LocalStorage=4]=\"LocalStorage\",r[r.SessionStorage=8]=\"SessionStorage\",r[r.IndexedDb=16]=\"IndexedDb\",r[r.FileSystem=16]=\"FileSystem\",r[r.ServerStorage=16]=\"ServerStorage\",r[r.All=30]=\"All\"}(e||(e={})),t.GdprStorage=e},860:function(r,t,e){var n,o=this&&this.__extends||(n=function(r,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,t){r.__proto__=t}||function(r,t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r[e]=t[e])},n(r,t)},function(r,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function e(){this.constructor=r}n(r,t),r.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}),i=this&&this.__read||function(r,t){var e=\"function\"==typeof Symbol&&r[Symbol.iterator];if(!e)return r;var n,o,i=e.call(r),u=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(r){o={error:r}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},u=this&&this.__spreadArray||function(r,t,e){if(e||2===arguments.length)for(var n,o=0,i=t.length;o<i;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return r.concat(n||Array.prototype.slice.call(t))};Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprGroupBuilder=void 0;var a=e(670),s=e(237),d=e(822),c=e(890),p=function(r){function t(t,e,n,o,i,u){var a=r.call(this)||this;return a.parent=t,a.name=e,a.description=n,a.enable=i,a.require=u,a.guards=[],a.storage=o,u&&(a.enable=!0),a}return o(t,r),t.create=function(r,e,n,o,i,u){return void 0===n&&(n=\"\"),void 0===o&&(o=null),void 0===i&&(i=!0),void 0===u&&(u=!1),new t(r,e,n,o||a.GdprStorage.Cookie,i,u)},t.prototype.startGroup=function(t,e,n){return void 0===t&&(t=null),void 0===e&&(e=\"\"),void 0===n&&(n=\"\"),r.prototype.startGroup.call(this,t||this.parent.storage,e,n)},t.prototype.startRequiredGroup=function(r,t,e){return void 0===r&&(r=null),void 0===t&&(t=\"\"),void 0===e&&(e=\"\"),this.startGroup(r,t,e).required()},t.prototype.endGroup=function(){var r=this.require||this.enable,t=d.GdprGuardGroup.for(this.name,this.description,r,this.require);return u(u([],i(this.guards),!1),i(this.groups),!1).forEach((function(r){return t.addGuard(r)})),this.require&&t.makeRequired(),this.parent.groups.push(t),this.parent},t.prototype.withName=function(r){return this.edit((function(t){return t.name=r}))},t.prototype.withDescription=function(r){return this.edit((function(t){return t.description=r}))},t.prototype.storedIn=function(r){return this.edit((function(t){return t.storage=r}))},t.prototype.enabled=function(){return this.edit((function(r){return r.enable=!0}))},t.prototype.disabled=function(){return this.edit((function(r){return r.enable=!1}))},t.prototype.required=function(){return this.edit((function(r){return r.require=!0}))},t.prototype.startGuard=function(r){return void 0===r&&(r=null),c.GdprGuardBuilder.create(this,r||this.storage,this.enable)},t.prototype.startRequiredGuard=function(r){return this.startGuard(r).required()},t.prototype.withEnabledGuard=function(r,t,e){return void 0===t&&(t=\"\"),void 0===e&&(e=null),this.startGuard(e).withName(r).withDescription(t).enabled().endGuard()},t.prototype.withDisabledGuard=function(r,t,e){return void 0===t&&(t=\"\"),void 0===e&&(e=null),this.startGuard(e).withName(r).withDescription(t).disabled().endGuard()},t.prototype.edit=function(r){return r(this),this},t}(s.GdprManagerBuilder);t.GdprGroupBuilder=p},890:(r,t,e)=>{Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprGuardBuilder=void 0;var n=e(670),o=e(315),i=function(){function r(r,t,e,n){this.parent=r,this.storage=t,this.enable=e,this.require=n,this.name=\"\",this.description=\"\",n&&(this.enable=!0)}return r.create=function(t,e,o,i){return void 0===e&&(e=n.GdprStorage.Cookie),void 0===o&&(o=!1),void 0===i&&(i=!1),new r(t,e,o,i)},r.prototype.endGuard=function(){var r=this.require||this.enable,t=(0,o.makeGuard)(this.name,this.description,this.storage,this.require,r);return this.require&&t.makeRequired(),this.parent.guards.push(t),this.parent},r.prototype.withName=function(r){return this.edit((function(t){return t.name=r}))},r.prototype.withDescription=function(r){return this.edit((function(t){return t.description=r}))},r.prototype.enabled=function(){return this.edit((function(r){return r.enable=!0}))},r.prototype.disabled=function(){return this.edit((function(r){return r.enable=!1}))},r.prototype.storedIn=function(r){return this.edit((function(t){return t.storage=r}))},r.prototype.required=function(){return this.edit((function(r){return r.require=!0}))},r.prototype.edit=function(r){return r(this),this},r}();t.GdprGuardBuilder=i},237:(r,t,e)=>{Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprManagerBuilder=void 0;var n=e(670),o=e(777),i=e(171),u=function(){function r(){this.storage=n.GdprStorage.Cookie,this.groups=[],this.bannerWasShown=!1}return r.make=function(){return new r},r.prototype.withBannerShown=function(r){void 0===r&&(r=!0),this.bannerWasShown=r},r.prototype.startGroup=function(r,t,e,n){return void 0===r&&(r=null),void 0===t&&(t=\"\"),void 0===e&&(e=\"\"),void 0===n&&(n=!0),i.GdprGroupBuilder.create(this,t,e,r,n,!1)},r.prototype.startRequiredGroup=function(r,t,e){return void 0===r&&(r=null),void 0===t&&(t=\"\"),void 0===e&&(e=\"\"),this.startEnabledGroup(r,t,e).required()},r.prototype.startEnabledGroup=function(r,t,e){return void 0===r&&(r=null),void 0===t&&(t=\"\"),void 0===e&&(e=\"\"),this.startGroup(r,t,e,!0).enabled()},r.prototype.startDisabledGroup=function(r,t,e){return void 0===r&&(r=null),void 0===t&&(t=\"\"),void 0===e&&(e=\"\"),this.startGroup(r,t,e,!1).disabled()},r.prototype.build=function(){var r=o.GdprManager.create(this.groups);return r.bannerWasShown=this.bannerWasShown,r},r.prototype.endGroup=function(){return this},r}();t.GdprManagerBuilder=u},171:function(r,t,e){var n=this&&this.__createBinding||(Object.create?function(r,t,e,n){void 0===n&&(n=e);var o=Object.getOwnPropertyDescriptor(t,e);o&&!(\"get\"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(r,n,o)}:function(r,t,e,n){void 0===n&&(n=e),r[n]=t[e]}),o=this&&this.__exportStar||function(r,t){for(var e in r)\"default\"===e||Object.prototype.hasOwnProperty.call(t,e)||n(t,r,e)};Object.defineProperty(t,\"__esModule\",{value:!0}),o(e(890),t),o(e(237),t),o(e(860),t)},93:function(r,t,e){var n=this&&this.__createBinding||(Object.create?function(r,t,e,n){void 0===n&&(n=e);var o=Object.getOwnPropertyDescriptor(t,e);o&&!(\"get\"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(r,n,o)}:function(r,t,e,n){void 0===n&&(n=e),r[n]=t[e]}),o=this&&this.__exportStar||function(r,t){for(var e in r)\"default\"===e||Object.prototype.hasOwnProperty.call(t,e)||n(t,r,e)};Object.defineProperty(t,\"__esModule\",{value:!0}),o(e(315),t),o(e(822),t),o(e(777),t),o(e(670),t),o(e(554),t),o(e(779),t),o(e(171),t),o(e(891),t),o(e(562),t),o(e(344),t)},562:(r,t,e)=>{Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprDeserializer=void 0;var n=e(777),o=e(670),i=e(822),u=e(315),a=[\"enabled\",\"groups\"],s=[\"guards\"],d=[\"name\",\"enabled\",\"required\",\"description\",\"storage\"],c=function(){function r(){}return r.manager=function(r){var t=this;if(!function(r){return a.every((function(t){return t in r}))&&\"boolean\"==typeof r.enabled&&Array.isArray(r.groups)}(r))return null;var e=r.groups.map((function(r){return t.group(r)})).filter((function(r){return null!==r})),o=n.GdprManager.create([]);return o.enabled=!!r.enabled,o.bannerWasShown=!!r.bannerWasShown,e.forEach((function(r){return o.addGroup(r)})),o},r.group=function(r){var t=this,e=this.guard(r);if(null===e)return null;if(!function(r){return s.every((function(t){return t in r}))&&Array.isArray(r.guards)}(r))return null;var n=i.GdprGuardGroup.for(e.name,e.description,e.enabled,e.required),o=r.guards.map((function(r){return s.every((function(t){return t in r}))?t.group(r):t.guard(r)})).filter((function(r){return null!==r}));return o.forEach((function(r){return n.addGuard(r)})),n},r.guard=function(r){return function(r){return d.every((function(t){return t in r}))&&\"string\"==typeof r.name&&\"boolean\"==typeof r.enabled&&\"boolean\"==typeof r.required&&\"string\"==typeof r.description&&\"number\"==typeof r.storage&&r.storage in o.GdprStorage}(r)?(0,u.makeGuard)(r.name,r.description,r.storage,!!r.required,!!r.enabled):null},r}();t.GdprDeserializer=c},344:function(r,t){var e=this&&this.__awaiter||function(r,t,e,n){return new(e||(e=Promise))((function(o,i){function u(r){try{s(n.next(r))}catch(r){i(r)}}function a(r){try{s(n.throw(r))}catch(r){i(r)}}function s(r){var t;r.done?o(r.value):(t=r.value,t instanceof e?t:new e((function(r){r(t)}))).then(u,a)}s((n=n.apply(r,t||[])).next())}))},n=this&&this.__generator||function(r,t){var e,n,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(a){return function(s){return function(a){if(e)throw new TypeError(\"Generator is already executing.\");for(;i&&(i=0,a[0]&&(u=0)),u;)try{if(e=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return u.label++,{value:a[1],done:!1};case 5:u.label++,n=a[1],a=[0];continue;case 7:a=u.ops.pop(),u.trys.pop();continue;default:if(!((o=(o=u.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){u=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){u.label=a[1];break}if(6===a[0]&&u.label<o[1]){u.label=o[1],o=a;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(a);break}o[2]&&u.ops.pop(),u.trys.pop();continue}a=t.call(r,u)}catch(r){a=[6,r],n=0}finally{e=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprSaviorAdapter=void 0;var o=function(){function r(){}return r.prototype.exists=function(r){return void 0===r&&(r=!0),e(this,void 0,void 0,(function(){return n(this,(function(t){switch(t.label){case 0:return[4,this.restore(r)];case 1:return[2,null!==t.sent()]}}))}))},r.prototype.storeIfNotExists=function(r){return e(this,void 0,void 0,(function(){return n(this,(function(t){switch(t.label){case 0:return[4,this.exists()];case 1:return[2,!!t.sent()||this.store(r)]}}))}))},r.prototype.restoreOrCreate=function(r){return e(this,void 0,void 0,(function(){var t,e;return n(this,(function(n){switch(n.label){case 0:return[4,this.restore()];case 1:return(t=n.sent())?[3,3]:[4,r()];case 2:return e=n.sent(),this.updateSharedManager(e),e.bannerWasShown&&e.closeBanner(),[2,e];case 3:return t.bannerWasShown&&t.closeBanner(),[2,t]}}))}))},r.prototype.check=function(){return e(this,void 0,void 0,(function(){return n(this,(function(r){switch(r.label){case 0:return[4,Promise.resolve()];case 1:return r.sent(),[4,this.exists(!0)];case 2:return r.sent(),[2]}}))}))},r}();t.GdprSaviorAdapter=o},891:(r,t)=>{Object.defineProperty(t,\"__esModule\",{value:!0}),t.GdprSerializer=void 0;var e=function(){function r(){}return r.serialize=function(r){return r.raw()},r}();t.GdprSerializer=e},779:(r,t,e)=>{Object.defineProperty(t,\"__esModule\",{value:!0}),t.visitGdpr=void 0;var n=e(777),o=e(822);t.visitGdpr=function(r,e){var i=void 0===e?{}:e,u=i.onManager,a=void 0===u?function(){}:u,s=i.onGroup,d=void 0===s?function(){}:s,c=i.onGuard,p=void 0===c?function(){}:c,l=i.onEach,f=void 0===l?function(){}:l,h={onManager:a,onGroup:d,onGuard:p,onEach:f};r instanceof n.GdprManager?(a(r),f(r),r.getGroups().forEach((function(r){return(0,t.visitGdpr)(r,h)}))):r instanceof o.GdprGuardGroup?(d(r),f(r),r.getGuards().forEach((function(r){return(0,t.visitGdpr)(r,h)}))):(p(r),f(r))}}},t={};return function e(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return r[n].call(i.exports,i,i.exports,e),i.exports}(93)})()));\n//# sourceMappingURL=gdpr_guard.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { GdprGuard, GdprGuardGroup, GdprManager, GdprManagerFactory, GdprSavior } from \"gdpr-guard\"\nimport { GroupRenderFunction, GuardRenderFunction, ManagerRenderFunction, Rendered } from \"./Renderer\"\n\n/**\n * Configuration for the render function\n */\nexport interface RenderPayload {\n\t/**\n\t * Manager rendering function\n\t */\n\trenderManager: ManagerRenderFunction;\n\n\t/**\n\t * Group rendering function\n\t */\n\trenderGroup: GroupRenderFunction;\n\n\t/**\n\t * Guard rendering function\n\t */\n\trenderGuard: GuardRenderFunction;\n}\n\n/**\n * Result of the render function\n */\nexport interface GdprRenderResult {\n\t/**\n\t * The rendered element\n\t */\n\trendered: Rendered;\n\n\t/**\n\t * The manager used to render\n\t */\n\tmanager: GdprManager;\n}\n\n/**\n * Render the current manager state (you will manually handle re-renders)\n * @param manager - The manager to render\n * @param payload - The render configuration\n */\nexport const render = async (manager: GdprManager, payload: RenderPayload): Promise<GdprRenderResult> => {\n\tconst {\n\t\trenderManager: rm,\n\t\trenderGroup: rgr,\n\t\trenderGuard: rgu,\n\t} = payload;\n\n\n\tconst renderer = {\n\t\tbound(method: keyof typeof renderer) {\n\t\t\treturn this[method].bind(this);\n\t\t},\n\t\trenderGuard(guard: GdprGuard): Promise<Rendered> {\n\t\t\treturn rgu(this.bound(\"renderGroup\"), guard);\n\t\t},\n\t\trenderGroup(group: GdprGuardGroup): Promise<Rendered> {\n\t\t\treturn rgr(this.bound(\"renderGuard\"), group);\n\t\t},\n\t\trenderManager(manager: GdprManager): Promise<Rendered> {\n\t\t\treturn rm(this.bound(\"renderGroup\"), manager);\n\t\t},\n\t};\n\n\n\tconst rendered = await renderer.renderManager(manager);\n\n\treturn {\n\t\trendered,\n\t\tmanager,\n\t};\n};\n","export function objToNode(objNode, insideSvg, options) {\n    let node\n    if (objNode.nodeName === '#text') {\n        node = options.document.createTextNode(objNode.data)\n\n    } else if (objNode.nodeName === '#comment') {\n        node = options.document.createComment(objNode.data)\n    } else {\n        if (insideSvg) {\n            node = options.document.createElementNS('http://www.w3.org/2000/svg', objNode.nodeName)\n        } else if (objNode.nodeName.toLowerCase() === 'svg') {\n            node = options.document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n            insideSvg = true\n        } else {\n            node = options.document.createElement(objNode.nodeName)\n        }\n        if (objNode.attributes) {\n            Object.entries(objNode.attributes).forEach(([key, value]) => node.setAttribute(key, value))\n        }\n        if (objNode.childNodes) {\n            objNode.childNodes.forEach(childNode => node.appendChild(objToNode(childNode, insideSvg, options)))\n        }\n        if (options.valueDiffing) {\n            if (objNode.value) {\n                node.value = objNode.value\n            }\n            if (objNode.checked) {\n                node.checked = objNode.checked\n            }\n            if (objNode.selected) {\n                node.selected = objNode.selected\n            }\n        }\n    }\n    return node\n}\n","import {objToNode} from \"./fromVirtual\"\n\n// ===== Apply a diff =====\n\nfunction getFromRoute(node, route) {\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        const c = route.splice(0, 1)[0]\n        node = node.childNodes[c]\n    }\n    return node\n}\n\nexport function applyDiff(\n        tree,\n        diff,\n        options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n    ) {\n    let node = getFromRoute(tree, diff[options._const.route])\n    let newNode\n    let reference\n    let route\n    let nodeArray\n    let c\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preDiffApply(info)) {\n        return true\n    }\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.value])\n            break\n        case options._const.modifyAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.newValue])\n            if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.newValue]\n            }\n            break\n        case options._const.removeAttribute:\n            if (!node || !node.removeAttribute) {\n                return false\n            }\n            node.removeAttribute(diff[options._const.name])\n            break\n        case options._const.modifyTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyValue:\n            if (!node || typeof node.value === 'undefined') {\n                return false\n            }\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            if (!node || typeof node.data === 'undefined') {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyChecked:\n            if (!node || typeof node.checked === 'undefined') {\n                return false\n            }\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            if (!node || typeof node.selected === 'undefined') {\n                return false\n            }\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            node.parentNode.replaceChild(\n                objToNode(\n                    diff[options._const.newValue],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node\n            )\n            break\n        case options._const.relocateGroup:\n            nodeArray = Array(...new Array(diff.groupLength)).map(() => node.removeChild(node.childNodes[diff[options._const.from]]))\n            nodeArray.forEach((childNode, index) => {\n                if (index === 0) {\n                    reference = node.childNodes[diff[options._const.to]]\n                }\n                node.insertBefore(childNode, reference || null)\n            })\n            break\n        case options._const.removeElement:\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromRoute(tree, route)\n            node.insertBefore(\n                objToNode(\n                    diff[options._const.element],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node.childNodes[c] || null\n            )\n            break\n        case options._const.removeTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = options.document.createTextNode(diff[options._const.value])\n            node = getFromRoute(tree, route)\n            if (!node || !node.childNodes) {\n                return false\n            }\n            node.insertBefore(newNode, node.childNodes[c] || null)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    // if a new node was created, we might be interested in its\n    // post diff hook\n    info.newNode = newNode\n    options.postDiffApply(info)\n\n    return true\n}\n\nexport function applyDOM(tree, diffs, options) {\n    return diffs.every(diff => applyDiff(tree, diff, options))\n}\n","import {applyDiff} from \"./apply\"\n\n// ===== Undo a diff =====\n\nfunction swap(obj, p1, p2) {\n    const tmp = obj[p1]\n    obj[p1] = obj[p2]\n    obj[p2] = tmp\n}\n\nfunction undoDiff(\n    tree,\n    diff,\n    options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n) {\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            diff[options._const.action] = options._const.removeAttribute\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyAttribute:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeAttribute:\n            diff[options._const.action] = options._const.addAttribute\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyTextElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyValue:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyComment:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyChecked:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifySelected:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.replaceElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.relocateGroup:\n            swap(diff, options._const.from, options._const.to)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeElement:\n            diff[options._const.action] = options._const.addElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.addElement:\n            diff[options._const.action] = options._const.removeElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeTextElement:\n            diff[options._const.action] = options._const.addTextElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.addTextElement:\n            diff[options._const.action] = options._const.removeTextElement\n            applyDiff(tree, diff, options)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n}\n\nexport function undoDOM(tree, diffs, options) {\n    if (!diffs.length) {\n        diffs = [diffs]\n    }\n    diffs = diffs.slice()\n    diffs.reverse()\n    diffs.forEach(diff => {\n        undoDiff(tree, diff, options)\n    })\n}\n","export class Diff {\n    constructor(options = {}) {\n        Object.entries(options).forEach(([key, value]) => this[key] = value)\n    }\n\n    toString() {\n        return JSON.stringify(this)\n    }\n\n    setValue(aKey, aValue) {\n        this[aKey] = aValue\n        return this\n    }\n}\n\nfunction elementDescriptors(el) {\n    const output = []\n    output.push(el.nodeName)\n    if (el.nodeName !== '#text' && el.nodeName !== '#comment') {\n        if (el.attributes) {\n            if (el.attributes['class']) {\n                output.push(`${el.nodeName}.${el.attributes['class'].replace(/ /g, '.')}`)\n            }\n            if (el.attributes.id) {\n                output.push(`${el.nodeName}#${el.attributes.id}`)\n            }\n        }\n\n    }\n    return output\n}\n\nfunction findUniqueDescriptors(li) {\n    const uniqueDescriptors = {}\n    const duplicateDescriptors = {}\n\n    li.forEach(node => {\n        elementDescriptors(node).forEach(descriptor => {\n            const inUnique = descriptor in uniqueDescriptors\n            const inDupes = descriptor in duplicateDescriptors\n            if (!inUnique && !inDupes) {\n                uniqueDescriptors[descriptor] = true\n            } else if (inUnique) {\n                delete uniqueDescriptors[descriptor]\n                duplicateDescriptors[descriptor] = true\n            }\n        })\n    })\n\n    return uniqueDescriptors\n}\n\nfunction uniqueInBoth(l1, l2) {\n    const l1Unique = findUniqueDescriptors(l1)\n    const l2Unique = findUniqueDescriptors(l2)\n    const inBoth = {}\n\n    Object.keys(l1Unique).forEach(key => {\n        if (l2Unique[key]) {\n            inBoth[key] = true\n        }\n    })\n\n    return inBoth\n}\n\nexport function removeDone(tree) {\n    delete tree.outerDone\n    delete tree.innerDone\n    delete tree.valueDone\n    if (tree.childNodes) {\n        return tree.childNodes.every(removeDone)\n    } else {\n        return true\n    }\n}\n\nexport function isEqual(e1, e2) {\n    if (!['nodeName', 'value', 'checked', 'selected', 'data'].every(element => {\n            if (e1[element] !== e2[element]) {\n                return false\n            }\n            return true\n        })) {\n        return false\n    }\n\n    if (Boolean(e1.attributes) !== Boolean(e2.attributes)) {\n        return false\n    }\n\n    if (Boolean(e1.childNodes) !== Boolean(e2.childNodes)) {\n        return false\n    }\n    if (e1.attributes) {\n        const e1Attributes = Object.keys(e1.attributes)\n        const e2Attributes = Object.keys(e2.attributes)\n\n        if (e1Attributes.length !== e2Attributes.length) {\n            return false\n        }\n        if (!e1Attributes.every(attribute => {\n                if (e1.attributes[attribute] !== e2.attributes[attribute]) {\n                    return false\n                }\n                return true\n            })) {\n            return false\n        }\n    }\n    if (e1.childNodes) {\n        if (e1.childNodes.length !== e2.childNodes.length) {\n            return false\n        }\n        if (!e1.childNodes.every((childNode, index) => isEqual(childNode, e2.childNodes[index]))) {\n\n            return false\n        }\n\n    }\n\n    return true\n}\n\n\nexport function roughlyEqual(e1, e2, uniqueDescriptors, sameSiblings, preventRecursion) {\n\n    if (!e1 || !e2) {\n        return false\n    }\n\n    if (e1.nodeName !== e2.nodeName) {\n        return false\n    }\n\n    if (e1.nodeName === '#text') {\n        // Note that we initially don't care what the text content of a node is,\n        // the mere fact that it's the same tag and \"has text\" means it's roughly\n        // equal, and then we can find out the true text difference later.\n        return preventRecursion ? true : e1.data === e2.data\n    }\n\n\n    if (e1.nodeName in uniqueDescriptors) {\n        return true\n    }\n\n    if (e1.attributes && e2.attributes) {\n\n        if (e1.attributes.id) {\n            if (e1.attributes.id !== e2.attributes.id) {\n                return false\n            } else {\n                const idDescriptor = `${e1.nodeName}#${e1.attributes.id}`\n                if (idDescriptor in uniqueDescriptors) {\n                    return true\n                }\n            }\n        }\n        if (e1.attributes['class'] && e1.attributes['class'] === e2.attributes['class']) {\n            const classDescriptor = `${e1.nodeName}.${e1.attributes['class'].replace(/ /g, '.')}`\n            if (classDescriptor in uniqueDescriptors) {\n                return true\n            }\n        }\n    }\n\n    if (sameSiblings) {\n        return true\n    }\n\n    const nodeList1 = e1.childNodes ? e1.childNodes.slice().reverse() : []\n    const nodeList2 = e2.childNodes ? e2.childNodes.slice().reverse() : []\n\n    if (nodeList1.length !== nodeList2.length) {\n        return false\n    }\n\n    if (preventRecursion) {\n        return nodeList1.every((element, index) => element.nodeName === nodeList2[index].nodeName)\n    } else {\n        // note: we only allow one level of recursion at any depth. If 'preventRecursion'\n        // was not set, we must explicitly force it to true for child iterations.\n        const childUniqueDescriptors = uniqueInBoth(nodeList1, nodeList2)\n        return nodeList1.every((element, index) => roughlyEqual(element, nodeList2[index], childUniqueDescriptors, true, true))\n    }\n}\n\n\nexport function cloneObj(obj) { //  TODO: Do we really need to clone here? Is it not enough to just return the original object?\n    return JSON.parse(JSON.stringify(obj))\n}\n/**\n * based on https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_substring#JavaScript\n */\nfunction findCommonSubsets(c1, c2, marked1, marked2) {\n    let lcsSize = 0\n    let index = []\n    const c1Length = c1.length\n    const c2Length = c2.length\n\n    const // set up the matching table\n        matches = Array(...new Array(c1Length + 1)).map(() => [])\n\n    const uniqueDescriptors = uniqueInBoth(c1, c2)\n\n    let // If all of the elements are the same tag, id and class, then we can\n        // consider them roughly the same even if they have a different number of\n        // children. This will reduce removing and re-adding similar elements.\n        subsetsSame = c1Length === c2Length\n\n    if (subsetsSame) {\n\n        c1.some((element, i) => {\n            const c1Desc = elementDescriptors(element)\n            const c2Desc = elementDescriptors(c2[i])\n            if (c1Desc.length !== c2Desc.length) {\n                subsetsSame = false\n                return true\n            }\n            c1Desc.some((description, i) => {\n                if (description !== c2Desc[i]) {\n                    subsetsSame = false\n                    return true\n                }\n            })\n            if (!subsetsSame) {\n                return true\n            }\n        })\n    }\n\n    // fill the matches with distance values\n    for (let c1Index = 0; c1Index < c1Length; c1Index++) {\n        const c1Element = c1[c1Index]\n        for (let c2Index = 0; c2Index < c2Length; c2Index++) {\n            const c2Element = c2[c2Index]\n            if (!marked1[c1Index] && !marked2[c2Index] && roughlyEqual(c1Element, c2Element, uniqueDescriptors, subsetsSame)) {\n                matches[c1Index + 1][c2Index + 1] = (matches[c1Index][c2Index] ? matches[c1Index][c2Index] + 1 : 1)\n                if (matches[c1Index + 1][c2Index + 1] >= lcsSize) {\n                    lcsSize = matches[c1Index + 1][c2Index + 1]\n                    index = [c1Index + 1, c2Index + 1]\n                }\n            } else {\n                matches[c1Index + 1][c2Index + 1] = 0\n            }\n        }\n    }\n\n    if (lcsSize === 0) {\n        return false\n    }\n\n    return {\n        oldValue: index[0] - lcsSize,\n        newValue: index[1] - lcsSize,\n        length: lcsSize\n    }\n}\n\n/**\n * This should really be a predefined function in Array...\n */\nfunction makeArray(n, v) {\n    return Array(...new Array(n)).map(() => v)\n}\n\n/**\n * Generate arrays that indicate which node belongs to which subset,\n * or whether it's actually an orphan node, existing in only one\n * of the two trees, rather than somewhere in both.\n *\n * So if t1 = <img><canvas><br>, t2 = <canvas><br><img>.\n * The longest subset is \"<canvas><br>\" (length 2), so it will group 0.\n * The second longest is \"<img>\" (length 1), so it will be group 1.\n * gaps1 will therefore be [1,0,0] and gaps2 [0,0,1].\n *\n * If an element is not part of any group, it will stay being 'true', which\n * is the initial value. For example:\n * t1 = <img><p></p><br><canvas>, t2 = <b></b><br><canvas><img>\n *\n * The \"<p></p>\" and \"<b></b>\" do only show up in one of the two and will\n * therefore be marked by \"true\". The remaining parts are parts of the\n * groups 0 and 1:\n * gaps1 = [1, true, 0, 0], gaps2 = [true, 0, 0, 1]\n *\n */\nexport function getGapInformation(t1, t2, stable) {\n    const gaps1 = t1.childNodes ? makeArray(t1.childNodes.length, true) : []\n    const gaps2 = t2.childNodes ? makeArray(t2.childNodes.length, true) : []\n    let group = 0\n\n    // give elements from the same subset the same group number\n    stable.forEach(subset => {\n        const endOld = subset.oldValue + subset.length\n        const endNew = subset.newValue + subset.length\n\n        for (let j = subset.oldValue; j < endOld; j += 1) {\n            gaps1[j] = group\n        }\n        for (let j = subset.newValue; j < endNew; j += 1) {\n            gaps2[j] = group\n        }\n        group += 1\n    })\n\n    return {\n        gaps1,\n        gaps2\n    }\n}\n\n/**\n * Find all matching subsets, based on immediate child differences only.\n */\nexport function markSubTrees(oldTree, newTree) {\n    // note: the child lists are views, and so update as we update old/newTree\n    const oldChildren = oldTree.childNodes ? oldTree.childNodes : []\n\n    const newChildren = newTree.childNodes ? newTree.childNodes : []\n    const marked1 = makeArray(oldChildren.length, false)\n    const marked2 = makeArray(newChildren.length, false)\n    const subsets = []\n    let subset = true\n\n    const returnIndex = function() {\n        return arguments[1]\n    }\n\n    const markBoth = i => {\n        marked1[subset.oldValue + i] = true\n        marked2[subset.newValue + i] = true\n    }\n\n    while (subset) {\n        subset = findCommonSubsets(oldChildren, newChildren, marked1, marked2)\n        if (subset) {\n            subsets.push(subset)\n            const subsetArray = Array(...new Array(subset.length)).map(returnIndex)\n            subsetArray.forEach(item => markBoth(item))\n        }\n    }\n\n    oldTree.subsets = subsets\n    oldTree.subsetsAge = 100\n    return subsets\n}\n\nexport class DiffTracker {\n    constructor() {\n        this.list = []\n    }\n\n    add(diffs) {\n        this.list.push(...diffs)\n    }\n    forEach(fn) {\n        this.list.forEach(li => fn(li))\n    }\n\n}\n","import {cloneObj} from \"./helpers\"\n\n// ===== Apply a virtual diff =====\n\nfunction getFromVirtualRoute(tree, route) {\n    let node = tree\n    let parentNode\n    let nodeIndex\n\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        nodeIndex = route.splice(0, 1)[0]\n        parentNode = node\n        node = node.childNodes[nodeIndex]\n    }\n    return {\n        node,\n        parentNode,\n        nodeIndex\n    }\n}\n\nfunction applyVirtualDiff(\n        tree,\n        diff,\n        options // {preVirtualDiffApply, postVirtualDiffApply, _const}\n    ) {\n    const routeInfo = getFromVirtualRoute(tree, diff[options._const.route])\n    let node = routeInfo.node\n    const parentNode = routeInfo.parentNode\n    const nodeIndex = routeInfo.nodeIndex\n    const newSubsets = []\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preVirtualDiffApply(info)) {\n        return true\n    }\n\n    let newNode\n    let nodeArray\n    let route\n    let c\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node.attributes) {\n                node.attributes = {}\n            }\n\n            node.attributes[diff[options._const.name]] = diff[options._const.value]\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = true\n            } else if (diff[options._const.name] === 'selected') {\n                node.selected = true\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.value]\n            }\n\n            break\n        case options._const.modifyAttribute:\n            node.attributes[diff[options._const.name]] = diff[options._const.newValue]\n            break\n        case options._const.removeAttribute:\n\n            delete node.attributes[diff[options._const.name]]\n\n            if (Object.keys(node.attributes).length === 0) {\n                delete node.attributes\n            }\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = false\n            } else if (diff[options._const.name] === 'selected') {\n                delete node.selected\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                delete node.value\n            }\n\n            break\n        case options._const.modifyTextElement:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyValue:\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyChecked:\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            newNode = cloneObj(diff[options._const.newValue])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n            parentNode.childNodes[nodeIndex] = newNode\n            break\n        case options._const.relocateGroup:\n            nodeArray = node.childNodes.splice(diff[options._const.from], diff.groupLength).reverse()\n            nodeArray.forEach(movedNode => node.childNodes.splice(diff[options._const.to], 0, movedNode))\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (diff[options._const.from] < diff[options._const.to] && map.oldValue <= diff[options._const.to] && map.oldValue > diff[options._const.from]) {\n                        map.oldValue -= diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (diff[options._const.from] > diff[options._const.to] && map.oldValue > diff[options._const.to] && map.oldValue < diff[options._const.from]) {\n                        map.oldValue += diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (map.oldValue === diff[options._const.from]) {\n                        map.oldValue = diff[options._const.to]\n                    }\n                })\n            }\n\n            break\n        case options._const.removeElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromVirtualRoute(tree, route).node\n            newNode = cloneObj(diff[options._const.element])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    } else if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        case options._const.removeTextElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.nodeName === 'TEXTAREA') {\n                delete parentNode.value\n            }\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = {}\n            newNode.nodeName = '#text'\n            newNode.data = diff[options._const.value]\n            node = getFromVirtualRoute(tree, route).node\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.nodeName === 'TEXTAREA') {\n                node.value = diff[options._const.newValue]\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    }\n                    if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    if (node.subsets) {\n        node.subsets = node.subsets.filter(map => !map.delete && map.oldValue !== map.newValue)\n        if (newSubsets.length) {\n            node.subsets = node.subsets.concat(newSubsets)\n        }\n    }\n\n    // capture newNode for the callback\n    info.newNode = newNode\n    options.postVirtualDiffApply(info)\n\n    return\n}\n\nexport function applyVirtual(tree, diffs, options) {\n    diffs.forEach(diff => {\n        applyVirtualDiff(tree, diff, options)\n    })\n    return true\n}\n","export function nodeToObj(aNode, options = {}) {\n    const objNode = {}\n    objNode.nodeName = aNode.nodeName\n    if (objNode.nodeName === '#text' || objNode.nodeName === '#comment') {\n        objNode.data = aNode.data\n    } else {\n        if (aNode.attributes && aNode.attributes.length > 0) {\n            objNode.attributes = {}\n            const nodeArray = Array.prototype.slice.call(aNode.attributes)\n            nodeArray.forEach(attribute => objNode.attributes[attribute.name] = attribute.value)\n        }\n        if (objNode.nodeName === 'TEXTAREA') {\n            objNode.value = aNode.value\n        } else if (aNode.childNodes && aNode.childNodes.length > 0) {\n            objNode.childNodes = []\n            const nodeArray = Array.prototype.slice.call(aNode.childNodes)\n            nodeArray.forEach(childNode => objNode.childNodes.push(nodeToObj(childNode, options)))\n        }\n        if (options.valueDiffing) {\n            if (aNode.checked !== undefined && aNode.type && ['radio', 'checkbox'].includes(aNode.type.toLowerCase())) {\n                objNode.checked = aNode.checked\n            } else if (aNode.value !== undefined) {\n                objNode.value = aNode.value\n            }\n            if (aNode.selected !== undefined) {\n                objNode.selected = aNode.selected\n            }\n        }\n    }\n    return objNode\n}\n","// from html-parse-stringify (MIT)\n\nconst tagRE = /<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>/g\n\n// re-used obj for quick lookups of components\nconst empty = Object.create ? Object.create(null) : {}\nconst attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g\n\n\nfunction unescape(string) {\n    return string.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n.replace(/&amp;/g, '&')\n}\n\n// create optimized lookup object for\n// void elements as listed here:\n// http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nconst lookup = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuItem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n}\n\n\nfunction parseTag(tag) {\n    const res = {\n        nodeName: '',\n        attributes: {}\n    }\n\n    let tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/)\n    if (tagMatch) {\n        res.nodeName = tagMatch[1].toUpperCase()\n        if (lookup[tagMatch[1]] || tag.charAt(tag.length - 2) === '/') {\n            res.voidElement = true\n        }\n\n        // handle comment tag\n        if (res.nodeName.startsWith('!--')) {\n            const endIndex = tag.indexOf('-->')\n            return {\n                type: 'comment',\n                data: endIndex !== -1 ? tag.slice(4, endIndex) : ''\n            }\n        }\n    }\n\n    let reg = new RegExp(attrRE)\n    let result = null\n    let done = false\n    while (!done) {\n        result = reg.exec(tag)\n\n        if (result === null) {\n            done = true\n        } else if (result[0].trim()) {\n            if (result[1]) {\n                let attr = result[1].trim()\n                let arr = [attr, \"\"]\n\n                if (attr.indexOf(\"=\") > -1) arr = attr.split(\"=\")\n\n                res.attributes[arr[0]] = arr[1]\n                reg.lastIndex--\n            } else if (result[2]) res.attributes[result[2]] = result[3].trim().substring(1, result[3].length - 1)\n        }\n    }\n\n    return res\n}\n\nfunction parse(\n    html,\n    options = {components: empty}\n) {\n    const result = []\n    let current\n    let level = -1\n    const arr = []\n    let inComponent = false\n\n    // handle text at top level\n    if (html.indexOf('<') !== 0) {\n        const end = html.indexOf('<')\n        result.push({\n            nodeName: '#text',\n            data: end === -1 ? html : html.substring(0, end)\n        })\n    }\n\n    html.replace(tagRE, (tag, index) => {\n        if (inComponent) {\n            if (tag !== (`</${current.nodeName}>`)) {\n                return\n            } else {\n                inComponent = false\n            }\n        }\n        const isOpen = tag.charAt(1) !== '/'\n        const isComment = tag.startsWith('<!--')\n        const start = index + tag.length\n        const nextChar = html.charAt(start)\n        let parent\n\n        if (isComment) {\n            const comment = parseTag(tag)\n\n            // if we're at root, push new base node\n            if (level < 0) {\n                result.push(comment)\n                return result\n            }\n            parent = arr[level]\n            if (parent) {\n                if (!parent.childNodes) {\n                    parent.childNodes = []\n                }\n                parent.childNodes.push(comment)\n            }\n\n            return result\n        }\n\n        if (isOpen) {\n            current = parseTag(tag)\n            level++\n            if (current.type === 'tag' && options.components[current.nodeName]) {\n                current.type = 'component'\n                inComponent = true\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                if (!current.childNodes) {\n                    current.childNodes = []\n                }\n                current.childNodes.push({\n                    nodeName: '#text',\n                    data: unescape(html.slice(start, html.indexOf('<', start)))\n                })\n            }\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current)\n            }\n\n            parent = arr[level - 1]\n\n            if (parent) {\n                if (!parent.childNodes) {\n                    parent.childNodes = []\n                }\n                parent.childNodes.push(current)\n            }\n\n            arr[level] = current\n        }\n\n        if (!isOpen || current.voidElement) {\n            if (\n                level > -1 &&\n                (current.voidElement || current.nodeName === tag.slice(2, -1).toUpperCase())\n            ) {\n                level--\n                // move current up a level to match the end tag\n                current = level === -1 ? result : arr[level]\n            }\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                parent = level === -1 ? result : arr[level].childNodes || []\n\n                // calculate correct end of the data slice in case there's\n                // no tag after the text node.\n                const end = html.indexOf('<', start)\n                let data = unescape(html.slice(start, end === -1 ? undefined : end))\n                parent.push({\n                    nodeName: '#text',\n                    data\n                })\n            }\n        }\n    })\n\n    return result[0]\n}\n\nfunction cleanObj(obj) {\n    delete obj.voidElement\n    if (obj.childNodes) {\n        obj.childNodes.forEach(child => cleanObj(child))\n    }\n    return obj\n}\n\nexport function stringToObj(string) {\n    return cleanObj(parse(string))\n}\n","import {Diff, DiffTracker, cloneObj, getGapInformation, isEqual, markSubTrees, removeDone, roughlyEqual} from \"./helpers\"\nimport {applyVirtual} from \"./apply\"\nimport {nodeToObj} from \"./fromDOM\"\nimport {stringToObj} from \"./fromString\"\n\n// ===== Create a diff =====\n\nexport class DiffFinder {\n    constructor(t1Node, t2Node, options) {\n        this.options = options\n        this.t1 = (typeof HTMLElement !== 'undefined' && t1Node instanceof HTMLElement) ? nodeToObj(t1Node, this.options) : (typeof t1Node === 'string') ? stringToObj(t1Node, this.options) : JSON.parse(JSON.stringify(t1Node))\n        this.t2 = (typeof HTMLElement !== 'undefined' && t2Node instanceof HTMLElement) ? nodeToObj(t2Node, this.options) : (typeof t2Node === 'string') ? stringToObj(t2Node, this.options) : JSON.parse(JSON.stringify(t2Node))\n        this.diffcount = 0\n        this.foundAll = false\n        if (this.debug) {\n            this.t1Orig = nodeToObj(t1Node, this.options)\n            this.t2Orig = nodeToObj(t2Node, this.options)\n        }\n\n        this.tracker = new DiffTracker()\n    }\n\n    init() {\n        return this.findDiffs(this.t1, this.t2)\n    }\n\n    findDiffs(t1, t2) {\n        let diffs\n        do {\n            if (this.options.debug) {\n                this.diffcount += 1\n                if (this.diffcount > this.options.diffcap) {\n                    throw new Error(`surpassed diffcap:${JSON.stringify(this.t1Orig)} -> ${JSON.stringify(this.t2Orig)}`)\n                }\n            }\n            diffs = this.findNextDiff(t1, t2, [])\n\n            if (diffs.length === 0) {\n                // Last check if the elements really are the same now.\n                // If not, remove all info about being done and start over.\n                // Sometimes a node can be marked as done, but the creation of subsequent diffs means that it has to be changed again.\n                if (!isEqual(t1, t2)) {\n                    if (this.foundAll) {\n                        console.error('Could not find remaining diffs!')\n                    } else {\n                        this.foundAll = true\n                        removeDone(t1)\n                        diffs = this.findNextDiff(t1, t2, [])\n                    }\n                }\n            }\n            if (diffs.length > 0) {\n                this.foundAll = false\n                this.tracker.add(diffs)\n                applyVirtual(t1, diffs, this.options)\n            }\n        } while (diffs.length > 0)\n\n        return this.tracker.list\n    }\n\n    findNextDiff(t1, t2, route) {\n        let diffs\n        let fdiffs\n\n        if (this.options.maxDepth && route.length > this.options.maxDepth) {\n            return []\n        }\n        // outer differences?\n        if (!t1.outerDone) {\n            diffs = this.findOuterDiff(t1, t2, route)\n            if (this.options.filterOuterDiff) {\n                fdiffs = this.options.filterOuterDiff(t1, t2, diffs)\n                if (fdiffs) diffs = fdiffs\n            }\n            if (diffs.length > 0) {\n                t1.outerDone = true\n                return diffs\n            } else {\n                t1.outerDone = true\n            }\n        }\n        // inner differences?\n        if (!t1.innerDone) {\n            diffs = this.findInnerDiff(t1, t2, route)\n            if (diffs.length > 0) {\n                return diffs\n            } else {\n                t1.innerDone = true\n            }\n        }\n\n        if (this.options.valueDiffing && !t1.valueDone) {\n            // value differences?\n            diffs = this.findValueDiff(t1, t2, route)\n\n            if (diffs.length > 0) {\n                t1.valueDone = true\n                return diffs\n            } else {\n                t1.valueDone = true\n            }\n        }\n\n        // no differences\n        return []\n    }\n\n    findOuterDiff(t1, t2, route) {\n        const diffs = []\n        let attr\n        let attr1\n        let attr2\n        let attrLength\n        let pos\n        let i\n        if (t1.nodeName !== t2.nodeName) {\n            if (!route.length) {\n                throw new Error('Top level nodes have to be of the same kind.')\n            }\n            return [new Diff()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, cloneObj(t1))\n                .setValue(this.options._const.newValue, cloneObj(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n        if (route.length && this.options.maxNodeDiffCount < Math.abs((t1.childNodes || []).length - (t2.childNodes || []).length)) {\n            return [new Diff()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, cloneObj(t1))\n                .setValue(this.options._const.newValue, cloneObj(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n\n        if (t1.data !== t2.data) {\n            // Comment or text node.\n            if (t1.nodeName === '#text') {\n                return [new Diff()\n                    .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            } else {\n                return [new Diff()\n                    .setValue(this.options._const.action, this.options._const.modifyComment)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            }\n\n        }\n\n        attr1 = t1.attributes ? Object.keys(t1.attributes).sort() : []\n        attr2 = t2.attributes ? Object.keys(t2.attributes).sort() : []\n\n        attrLength = attr1.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr1[i]\n            pos = attr2.indexOf(attr)\n            if (pos === -1) {\n                diffs.push(new Diff()\n                    .setValue(this.options._const.action, this.options._const.removeAttribute)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.name, attr)\n                    .setValue(this.options._const.value, t1.attributes[attr])\n                )\n            } else {\n                attr2.splice(pos, 1)\n                if (t1.attributes[attr] !== t2.attributes[attr]) {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyAttribute)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.name, attr)\n                        .setValue(this.options._const.oldValue, t1.attributes[attr])\n                        .setValue(this.options._const.newValue, t2.attributes[attr])\n                    )\n                }\n            }\n        }\n\n        attrLength = attr2.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr2[i]\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.addAttribute)\n                .setValue(this.options._const.route, route)\n                .setValue(this.options._const.name, attr)\n                .setValue(this.options._const.value, t2.attributes[attr])\n            )\n        }\n\n        return diffs\n    }\n\n    findInnerDiff(t1, t2, route) {\n        const t1ChildNodes = t1.childNodes ? t1.childNodes.slice() : []\n        const t2ChildNodes = t2.childNodes ? t2.childNodes.slice() : []\n        const last = Math.max(t1ChildNodes.length, t2ChildNodes.length)\n        let childNodesLengthDifference = Math.abs(t1ChildNodes.length - t2ChildNodes.length)\n        let diffs = []\n        let index = 0\n        if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n            const cachedSubtrees = t1.subsets && t1.subsetsAge--\n            const subtrees = cachedSubtrees ? t1.subsets : (t1.childNodes && t2.childNodes) ? markSubTrees(t1, t2) : []\n            if (subtrees.length > 0) {\n                /* One or more groups have been identified among the childnodes of t1\n                 * and t2.\n                 */\n                diffs = this.attemptGroupRelocation(t1, t2, subtrees, route, cachedSubtrees)\n                if (diffs.length > 0) {\n                    return diffs\n                }\n            }\n        }\n\n\n        /* 0 or 1 groups of similar child nodes have been found\n         * for t1 and t2. 1 If there is 1, it could be a sign that the\n         * contents are the same. When the number of groups is below 2,\n         * t1 and t2 are made to have the same length and each of the\n         * pairs of child nodes are diffed.\n         */\n\n        for (let i = 0; i < last; i += 1) {\n            const e1 = t1ChildNodes[i]\n            const e2 = t2ChildNodes[i]\n\n            if (childNodesLengthDifference) {\n                /* t1 and t2 have different amounts of childNodes. Add\n                 * and remove as necessary to obtain the same length */\n                if (e1 && !e2) {\n                    if (e1.nodeName === '#text') {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e1.data)\n                        )\n                        index -= 1\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cloneObj(e1))\n                        )\n                        index -= 1\n                    }\n\n                } else if (e2 && !e1) {\n                    if (e2.nodeName === '#text') {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e2.data)\n                        )\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cloneObj(e2))\n                        )\n                    }\n                }\n            }\n            /* We are now guaranteed that childNodes e1 and e2 exist,\n             * and that they can be diffed.\n             */\n            /* Diffs in child nodes should not affect the parent node,\n             * so we let these diffs be submitted together with other\n             * diffs.\n             */\n\n            if (e1 && e2) {\n                if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n                    diffs = diffs.concat(this.findNextDiff(e1, e2, route.concat(index)))\n                } else if (!isEqual(e1, e2)) {\n                    if (t1ChildNodes.length > t2ChildNodes.length) {\n                        if (e1.nodeName === '#text') {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeTextElement)\n                                .setValue(this.options._const.route, route.concat(index))\n                                .setValue(this.options._const.value, e1.data)\n                            )\n                        } else {\n                            diffs.push(\n                                new Diff()\n                                    .setValue(this.options._const.action, this.options._const.removeElement)\n                                    .setValue(this.options._const.element, cloneObj(e1))\n                                    .setValue(this.options._const.route, route.concat(index))\n                            )\n                        }\n                        t1ChildNodes.splice(i, 1)\n                        i -= 1\n                        index -= 1\n\n                        childNodesLengthDifference -= 1\n                    } else if (t1ChildNodes.length < t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.addElement)\n                                .setValue(this.options._const.element, cloneObj(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                        t1ChildNodes.splice(i, 0, {})\n                        childNodesLengthDifference -= 1\n                    } else {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.replaceElement)\n                                .setValue(this.options._const.oldValue, cloneObj(e1))\n                                .setValue(this.options._const.newValue, cloneObj(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                    }\n\n                }\n\n            }\n            index += 1\n\n        }\n        t1.innerDone = true\n        return diffs\n    }\n\n    attemptGroupRelocation(t1, t2, subtrees, route, cachedSubtrees) {\n        /* Either t1.childNodes and t2.childNodes have the same length, or\n         * there are at least two groups of similar elements can be found.\n         * attempts are made at equalizing t1 with t2. First all initial\n         * elements with no group affiliation (gaps=true) are removed (if\n         * only in t1) or added (if only in t2). Then the creation of a group\n         * relocation diff is attempted.\n         */\n        const gapInformation = getGapInformation(t1, t2, subtrees)\n        const gaps1 = gapInformation.gaps1\n        const gaps2 = gapInformation.gaps2\n        let shortest = Math.min(gaps1.length, gaps2.length)\n        let destinationDifferent\n        let toGroup\n        let group\n        let node\n        let similarNode\n        let testI\n        const diffs = []\n\n        for (let index2 = 0, index1 = 0; index2 < shortest; index1 += 1, index2 += 1) {\n            if (cachedSubtrees && (gaps1[index2] === true || gaps2[index2] === true)) {\n                // pass\n            } else if (gaps1[index2] === true) {\n                node = t1.childNodes[index1]\n                if (node.nodeName === '#text') {\n                    if (t2.childNodes[index2].nodeName === '#text') {\n                        if (node.data !== t2.childNodes[index2].data) {\n                            testI = index1\n                            while (t1.childNodes.length > testI + 1 && t1.childNodes[testI + 1].nodeName === '#text') {\n                                testI += 1\n                                if (t2.childNodes[index2].data === t1.childNodes[testI].data) {\n                                    similarNode = true\n                                    break\n                                }\n                            }\n                            if (!similarNode) {\n                                diffs.push(new Diff()\n                                    .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                                    .setValue(this.options._const.route, route.concat(index2))\n                                    .setValue(this.options._const.oldValue, node.data)\n                                    .setValue(this.options._const.newValue, t2.childNodes[index2].data)\n                                )\n                                return diffs\n                            }\n                        }\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index2))\n                            .setValue(this.options._const.value, node.data)\n                        )\n                        gaps1.splice(index2, 1)\n                        shortest = Math.min(gaps1.length, gaps2.length)\n                        index2 -= 1\n                    }\n                } else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.removeElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cloneObj(node))\n                    )\n                    gaps1.splice(index2, 1)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index2 -= 1\n                }\n\n            } else if (gaps2[index2] === true) {\n                node = t2.childNodes[index2]\n                if (node.nodeName === '#text') {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addTextElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.value, node.data)\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                } else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cloneObj(node))\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                }\n\n            } else if (gaps1[index2] !== gaps2[index2]) {\n                if (diffs.length > 0) {\n                    return diffs\n                }\n                // group relocation\n                group = subtrees[gaps1[index2]]\n                toGroup = Math.min(group.newValue, (t1.childNodes.length - group.length))\n                if (toGroup !== group.oldValue) {\n                    // Check whether destination nodes are different than originating ones.\n                    destinationDifferent = false\n                    for (let j = 0; j < group.length; j += 1) {\n                        if (!roughlyEqual(t1.childNodes[toGroup + j], t1.childNodes[group.oldValue + j], [], false, true)) {\n                            destinationDifferent = true\n                        }\n                    }\n                    if (destinationDifferent) {\n                        return [new Diff()\n                            .setValue(this.options._const.action, this.options._const.relocateGroup)\n                            .setValue('groupLength', group.length)\n                            .setValue(this.options._const.from, group.oldValue)\n                            .setValue(this.options._const.to, toGroup)\n                            .setValue(this.options._const.route, route)\n                        ]\n                    }\n                }\n            }\n        }\n        return diffs\n    }\n\n    findValueDiff(t1, t2, route) {\n        // Differences of value. Only useful if the value/selection/checked value\n        // differs from what is represented in the DOM. For example in the case\n        // of filled out forms, etc.\n        const diffs = []\n\n        if (t1.selected !== t2.selected) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifySelected)\n                .setValue(this.options._const.oldValue, t1.selected)\n                .setValue(this.options._const.newValue, t2.selected)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        if ((t1.value || t2.value) && t1.value !== t2.value && t1.nodeName !== 'OPTION') {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyValue)\n                .setValue(this.options._const.oldValue, t1.value || \"\")\n                .setValue(this.options._const.newValue, t2.value || \"\")\n                .setValue(this.options._const.route, route)\n            )\n        }\n        if (t1.checked !== t2.checked) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyChecked)\n                .setValue(this.options._const.oldValue, t1.checked)\n                .setValue(this.options._const.newValue, t2.checked)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        return diffs\n    }\n\n}\n","import {applyDOM, undoDOM} from \"./dom/index\"\nimport {DiffFinder} from \"./virtual/index\"\nexport {nodeToObj, stringToObj} from \"./virtual/index\"\n\nconst DEFAULT_OPTIONS = {\n    debug: false,\n    diffcap: 10, // Limit for how many diffs are accepting when debugging. Inactive when debug is false.\n    maxDepth: false, // False or a numeral. If set to a numeral, limits the level of depth that the the diff mechanism looks for differences. If false, goes through the entire tree.\n    maxChildCount: 50, // False or a numeral. If set to a numeral, only does a simplified form of diffing of contents so that the number of diffs cannot be higher than the number of child nodes.\n    valueDiffing: true, // Whether to take into consideration the values of forms that differ from auto assigned values (when a user fills out a form).\n    // syntax: textDiff: function (node, currentValue, expectedValue, newValue)\n    textDiff(node, currentValue, expectedValue, newValue) {\n        node.data = newValue\n        return\n    },\n    // empty functions were benchmarked as running faster than both\n    // `f && f()` and `if (f) { f(); }`\n    preVirtualDiffApply() {},\n    postVirtualDiffApply() {},\n    preDiffApply() {},\n    postDiffApply() {},\n    filterOuterDiff: null,\n    compress: false, // Whether to work with compressed diffs\n    _const: false, // object with strings for every change types to be used in diffs.\n    document: typeof window !== 'undefined' && window.document ? window.document : false\n}\n\n\nexport class DiffDOM {\n    constructor(options = {}) {\n\n        this.options = options\n        // IE11 doesn't have Object.assign and buble doesn't translate object spreaders\n        // by default, so this is the safest way of doing it currently.\n        Object.entries(DEFAULT_OPTIONS).forEach(([key, value]) => {\n            if (!Object.prototype.hasOwnProperty.call(this.options, key)) {\n                this.options[key] = value\n            }\n        })\n\n        if (!this.options._const) {\n            const varNames = [\"addAttribute\", \"modifyAttribute\", \"removeAttribute\",\n                \"modifyTextElement\", \"relocateGroup\", \"removeElement\", \"addElement\",\n                \"removeTextElement\", \"addTextElement\", \"replaceElement\", \"modifyValue\",\n                \"modifyChecked\", \"modifySelected\", \"modifyComment\", \"action\", \"route\",\n                \"oldValue\", \"newValue\", \"element\", \"group\", \"from\", \"to\", \"name\",\n                \"value\", \"data\", \"attributes\", \"nodeName\", \"childNodes\", \"checked\",\n                \"selected\"\n            ]\n            this.options._const = {}\n            if (this.options.compress) {\n                varNames.forEach((varName, index) => this.options._const[varName] = index)\n            } else {\n                varNames.forEach(varName => this.options._const[varName] = varName)\n            }\n        }\n\n        this.DiffFinder = DiffFinder\n\n    }\n\n    apply(tree, diffs) {\n        return applyDOM(tree, diffs, this.options)\n    }\n\n    undo(tree, diffs) {\n        return undoDOM(tree, diffs, this.options)\n    }\n\n    diff(t1Node, t2Node) {\n        const finder = new this.DiffFinder(t1Node, t2Node, this.options)\n        return finder.init()\n    }\n\n}\n","import { GdprManager } from \"gdpr-guard\";\nimport { render, RenderPayload } from \"./render\";\nimport { Rendered } from \"./Renderer\";\nimport { DiffDOM } from \"diff-dom\";\n\n/**\n * @global diffing\n * Used for DOM diffing operations (to efficiently reduce DOM manipulations)\n */\nconst diffing = new DiffDOM();\n\n/**\n * Mount the rendered element in the target (using diffs)\n * @param target - The target in which the rendered element will be mounted\n * @param rendered - The rendered element to mount\n */\nexport const mountOnTarget = (target: Element, rendered: Rendered) => {\n\tif (target.childElementCount) {\n\t\tconst diffSource = target.children.item(0);\n\t\tconst diff = diffing.diff(diffSource, rendered);\n\t\tdiffing.apply(diffSource, diff);\n\t} else // for very first render (otherwise diff root is !=)\n\t\ttarget.appendChild(rendered);\n};\n\nexport type ReRenderFunction = () => Promise<void>;\n\nexport interface ReRenderResult {\n\trender: ReRenderFunction;\n\tmanager: GdprManager;\n}\n\n/**\n * Render the GDPR state inside of the given target (provides re-render function)\n * @param target - The target in which the rendered element will be mounted\n * @param manager - The manager to render\n * @param payload - The render configuration\n * @returns The function to call to re-render\n */\nexport const renderInside = async (target: Element, manager: GdprManager, payload: RenderPayload): Promise<ReRenderResult> => {\n\tconst doRender: ReRenderFunction = async () => {\n\t\tconst { rendered } = await render(manager, payload);\n\t\tmountOnTarget(target, rendered);\n\t};\n\n\tawait doRender();\n\n\treturn {\n\t\trender: doRender,\n\t\tmanager,\n\t};\n}\n"],"names":["root","factory","exports","module","define","amd","self","window","this","t","r","e","Object","defineProperty","value","makeGuard","n","o","i","GdprStorage","Cookie","name","description","storage","required","enabled","enable","toggle","disable","makeRequired","isEnabled","enableForStorage","toggleForStorage","disableForStorage","raw","JSON","parse","stringify","__read","Symbol","iterator","call","u","next","done","push","error","return","__spreadArray","arguments","length","Array","prototype","slice","concat","__values","TypeError","GdprGuardGroup","a","None","bindings","Map","for","addGuard","set","hasGuard","has","reduceSubGroupsPred","getGuard","get","reduceSubGroups","doForEachGuard","guards","map","forEach","s","d","c","getGuards","values","GdprManager","bannerWasShown","events","GdprManagerEventHub","groups","create","addGroup","closeBanner","visitGdpr","onEach","resetAndShowBanner","createGroup","reduceGroupsPred","hasGroup","getGroup","forEachGroup","getGroups","eventMap","onEnable","addListener","onDisable","executeListeners","tagFor","LocalStorage","SessionStorage","IndexedDb","FileSystem","ServerStorage","All","__extends","setPrototypeOf","__proto__","hasOwnProperty","String","constructor","GdprGroupBuilder","p","parent","require","startGroup","startRequiredGroup","endGroup","withName","edit","withDescription","storedIn","disabled","startGuard","GdprGuardBuilder","startRequiredGuard","withEnabledGuard","endGuard","withDisabledGuard","GdprManagerBuilder","make","withBannerShown","startEnabledGroup","startDisabledGroup","build","__createBinding","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__exportStar","GdprDeserializer","manager","every","isArray","group","filter","guard","__awaiter","Promise","throw","then","apply","__generator","label","sent","trys","ops","pop","GdprSaviorAdapter","exists","restore","storeIfNotExists","store","restoreOrCreate","updateSharedManager","check","resolve","GdprSerializer","serialize","onManager","onGroup","onGuard","l","f","h","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","key","obj","prop","toStringTag","render","payload","rm","rgr","rgu","renderer","bound","method","bind","renderGuard","renderGroup","renderManager","rendered","objToNode","objNode","insideSvg","options","node","nodeName","document","createTextNode","data","createComment","createElementNS","toLowerCase","createElement","attributes","entries","setAttribute","childNodes","childNode","appendChild","valueDiffing","checked","selected","getFromRoute","route","splice","applyDiff","tree","diff","newNode","reference","nodeArray","_const","info","preDiffApply","action","addAttribute","modifyAttribute","newValue","removeAttribute","modifyTextElement","nodeType","textDiff","oldValue","modifyValue","modifyComment","modifyChecked","modifySelected","replaceElement","parentNode","replaceChild","namespaceURI","relocateGroup","groupLength","removeChild","from","index","to","insertBefore","removeElement","addElement","element","removeTextElement","addTextElement","console","log","postDiffApply","swap","p1","p2","tmp","Diff","toString","setValue","aKey","aValue","elementDescriptors","el","output","replace","id","findUniqueDescriptors","li","uniqueDescriptors","duplicateDescriptors","descriptor","inUnique","uniqueInBoth","l1","l2","l1Unique","l2Unique","inBoth","keys","removeDone","outerDone","innerDone","valueDone","isEqual","e1","e2","Boolean","e1Attributes","e2Attributes","attribute","roughlyEqual","sameSiblings","preventRecursion","nodeList1","reverse","nodeList2","childUniqueDescriptors","cloneObj","findCommonSubsets","c1","c2","marked1","marked2","lcsSize","c1Length","c2Length","matches","subsetsSame","some","c1Desc","c2Desc","c1Index","c1Element","c2Index","c2Element","makeArray","v","DiffTracker","list","add","diffs","fn","getFromVirtualRoute","nodeIndex","applyVirtual","routeInfo","newSubsets","preVirtualDiffApply","movedNode","subsets","splitLength","delete","postVirtualDiffApply","applyVirtualDiff","nodeToObj","aNode","type","includes","tagRE","empty","attrRE","string","lookup","area","base","br","col","embed","hr","img","input","keygen","link","menuItem","meta","param","source","track","wbr","parseTag","tag","res","tagMatch","match","toUpperCase","charAt","voidElement","startsWith","endIndex","indexOf","reg","RegExp","result","exec","trim","attr","arr","split","lastIndex","substring","cleanObj","child","stringToObj","html","components","current","level","inComponent","end","isOpen","isComment","start","nextChar","comment","DiffFinder","t1Node","t2Node","t1","HTMLElement","t2","diffcount","foundAll","debug","t1Orig","t2Orig","tracker","init","findDiffs","diffcap","Error","findNextDiff","fdiffs","maxDepth","findOuterDiff","filterOuterDiff","findInnerDiff","findValueDiff","attr1","attr2","attrLength","pos","maxNodeDiffCount","Math","abs","sort","t1ChildNodes","t2ChildNodes","last","max","childNodesLengthDifference","maxChildCount","cachedSubtrees","subsetsAge","subtrees","oldTree","newTree","oldChildren","newChildren","subset","returnIndex","item","markBoth","markSubTrees","attemptGroupRelocation","gapInformation","stable","gaps1","gaps2","endOld","endNew","j","getGapInformation","destinationDifferent","toGroup","similarNode","testI","shortest","min","index2","index1","DEFAULT_OPTIONS","currentValue","expectedValue","compress","diffing","varNames","varName","applyDOM","undo","undoDiff","undoDOM","mountOnTarget","target","childElementCount","diffSource","children","renderInside","doRender"],"sourceRoot":""}