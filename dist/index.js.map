{"version":3,"file":"index.js","mappings":"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","sources":["webpack://domGdprGuard/webpack/universalModuleDefinition","webpack://domGdprGuard/./node_modules/gdpr-guard/dist/gdpr_guard.js","webpack://domGdprGuard/webpack/bootstrap","webpack://domGdprGuard/webpack/runtime/define property getters","webpack://domGdprGuard/webpack/runtime/hasOwnProperty shorthand","webpack://domGdprGuard/webpack/runtime/make namespace object","webpack://domGdprGuard/./src/render.ts","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/fromVirtual.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/apply.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/dom/undo.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/helpers.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/apply.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/fromString.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/virtual/diff.js","webpack://domGdprGuard/./node_modules/diff-dom/src/diffDOM/index.js","webpack://domGdprGuard/./src/utils.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"domGdprGuard\"] = factory();\n\telse\n\t\troot[\"domGdprGuard\"] = factory();\n})(self, function() {\nreturn ","!function(t,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define(\"gdprGuard\",[],r):\"object\"==typeof exports?exports.gdprGuard=r():t.gdprGuard=r()}(self,(function(){return(()=>{\"use strict\";var t={315:(t,r,e)=>{Object.defineProperty(r,\"__esModule\",{value:!0}),r.makeGuard=void 0;var n=e(670);r.makeGuard=function(t,r,e,o,i){return void 0===e&&(e=n.GdprStorage.Cookie),void 0===o&&(o=!1),void 0===i&&(i=null),{name:t,description:r,storage:e,required:o,enabled:null===i?o:i,enable:function(){return this.enabled||this.toggle(),this},disable:function(){return this.enabled&&this.toggle(),this},toggle:function(){return this.required||(this.enabled=!this.enabled),this},makeRequired:function(){return this.required=!0,this.enabled=!0,this},isEnabled:function(t){return this.name===t&&this.enabled},enableForStorage:function(t){return this.enabled||this.toggleForStorage(t),this},disableForStorage:function(t){return this.enabled&&this.toggleForStorage(t),this},toggleForStorage:function(t){return this.storage!=t||this.required||this.toggle(),this},raw:function(){return JSON.parse(JSON.stringify(this))}}}},822:function(t,r,e){var n=this&&this.__values||function(t){var r=\"function\"==typeof Symbol&&Symbol.iterator,e=r&&t[r],n=0;if(e)return e.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(r?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},o=this&&this.__read||function(t,r){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,o,i=e.call(t),u=[];try{for(;(void 0===r||r-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},i=this&&this.__spreadArray||function(t,r,e){if(e||2===arguments.length)for(var n,o=0,i=r.length;o<i;o++)!n&&o in r||(n||(n=Array.prototype.slice.call(r,0,o)),n[o]=r[o]);return t.concat(n||Array.prototype.slice.call(r))};Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprGuardGroup=void 0;var u=e(670),a=function(){function t(t,r,e,n){void 0===r&&(r=\"\"),void 0===e&&(e=!1),void 0===n&&(n=!1),this.name=t,this.description=r,this.enabled=e,this.required=n,this.storage=u.GdprStorage.None,this.bindings=new Map,this.required&&(this.enabled=!0)}return t.for=function(r,e,n,o){return void 0===e&&(e=\"\"),void 0===n&&(n=!1),void 0===o&&(o=!1),new t(r,e,n,o)},t.prototype.addGuard=function(t){return this.bindings.set(t.name,t),this},t.prototype.hasGuard=function(t){return this.name===t||this.bindings.has(t)},t.prototype.getGuard=function(t){return this.name===t?this:this.bindings.get(t)||null},t.prototype.isEnabled=function(t){var r,e;if(this.hasGuard(t)&&null!==(a=this.getGuard(t)))return a.enabled;try{for(var i=n(this.bindings),u=i.next();!u.done;u=i.next()){var a,s=o(u.value,2);if(s[0],(a=s[1]).isEnabled(t))return!0}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return!1},t.prototype.enable=function(){return this.required?this:(this.enabled=!0,this.doForEachGuard((function(t){return t.enable()})))},t.prototype.disable=function(){return this.required?this:(this.enabled=!1,this.doForEachGuard((function(t){return t.disable()})))},t.prototype.toggle=function(){return this.enabled?this.disable():this.enable()},t.prototype.makeRequired=function(){return this.required=!0,this.enabled=!0,this.doForEachGuard((function(t){return t.makeRequired()}))},t.prototype.enableForStorage=function(t){return this.doForEachGuard((function(r){r.storage&t&&r.enable()}))},t.prototype.disableForStorage=function(t){return this.doForEachGuard((function(r){r.storage&t&&r.disable()}))},t.prototype.toggleForStorage=function(t){return this.doForEachGuard((function(r){if(r.storage&t)return r.toggle()}))},t.prototype.raw=function(){var t={name:this.name,description:this.description,enabled:this.enabled,required:this.required,storage:this.storage,guards:[]};return t.guards=i([],o(this.bindings),!1).map((function(t){var r=o(t,2);return r[0],r[1].raw()})),t},t.prototype.doForEachGuard=function(t){return this.bindings.forEach((function(r){return t(r)})),this},t.prototype.getGuards=function(){return i([],o(this.bindings.values()),!1)},t}();r.GdprGuardGroup=a},777:function(t,r,e){var n=this&&this.__values||function(t){var r=\"function\"==typeof Symbol&&Symbol.iterator,e=r&&t[r],n=0;if(e)return e.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(r?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},o=this&&this.__read||function(t,r){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,o,i=e.call(t),u=[];try{for(;(void 0===r||r-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},i=this&&this.__spreadArray||function(t,r,e){if(e||2===arguments.length)for(var n,o=0,i=r.length;o<i;o++)!n&&o in r||(n||(n=Array.prototype.slice.call(r,0,o)),n[o]=r[o]);return t.concat(n||Array.prototype.slice.call(r))};Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprManager=void 0;var u=e(822),a=e(670),s=e(554),d=e(779),c=function(){function t(){this.bannerWasShown=!1,this.enabled=!0,this.events=new s.GdprManagerEventHub,this.groups=new Map,this.name=\"manager\",this.description=\"Manager of GDPR guard groups\",this.storage=a.GdprStorage.None,this.required=!1}return t.create=function(r){void 0===r&&(r=[]);var e=new t;return r.forEach((function(t){return e.addGroup(t)})),e},t.prototype.closeBanner=function(){var t=this;this.bannerWasShown=!0,(0,d.visitGdpr)(this,{onEach:function(r){r.enabled?t.events.enable(r.name):t.events.disable(r.name)}})},t.prototype.resetAndShowBanner=function(){this.bannerWasShown=!1},t.prototype.createGroup=function(t,r){return void 0===r&&(r=\"\"),this.addGroup(u.GdprGuardGroup.for(t,r))},t.prototype.addGroup=function(t){return this.groups.set(t.name,t),this},t.prototype.hasGuard=function(t){return this.reduceGroupsPred((function(r){return r.hasGuard(t)}))},t.prototype.getGuard=function(t){var r,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2),s=(a[0],a[1]);if(s.hasGuard(t))return s.getGuard(t)}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return null},t.prototype.hasGroup=function(t){return this.reduceGroupsPred((function(r){return r.name===t}))},t.prototype.getGroup=function(t){var r,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2),s=a[0],d=a[1];if(s===t)return d}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return null},t.prototype.isEnabled=function(t){return this.reduceGroupsPred((function(r){return r.isEnabled(t)}))},t.prototype.enable=function(){return this.enabled=!0,this.forEachGroup((function(t){return t.enable()}))},t.prototype.disable=function(){return this.enabled=!1,this.forEachGroup((function(t){return t.disable()}))},t.prototype.toggle=function(){return this.enabled?this.disable():this.enable()},t.prototype.makeRequired=function(){return this},t.prototype.enableForStorage=function(t){return this.forEachGroup((function(r){return r.enableForStorage(t)}))},t.prototype.disableForStorage=function(t){return this.forEachGroup((function(r){return r.disableForStorage(t)}))},t.prototype.toggleForStorage=function(t){return this.forEachGroup((function(r){return r.toggleForStorage(t)}))},t.prototype.raw=function(){var t={bannerWasShown:this.bannerWasShown,enabled:this.enabled,groups:[]};return t.groups=i([],o(this.groups.values()),!1).map((function(t){return t.raw()})),t},t.prototype.reduceGroupsPred=function(t){var r,e;try{for(var i=n(this.groups),u=i.next();!u.done;u=i.next()){var a=o(u.value,2);if(a[0],t(a[1]))return!0}}catch(t){r={error:t}}finally{try{u&&!u.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return!1},t.prototype.forEachGroup=function(t){return this.groups.forEach((function(r){return t(r)})),this},t.prototype.getGroups=function(){return i([],o(this.groups.values()),!1)},t}();r.GdprManager=c},554:(t,r)=>{Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprManagerEventHub=void 0;var e=function(){function t(){this.eventMap={}}return t.prototype.onEnable=function(t,r){return this.addListener(\"enable\",t,r),this},t.prototype.onDisable=function(t,r){return this.addListener(\"disable\",t,r),this},t.prototype.enable=function(t){return this.executeListeners(\"enable\",t),this},t.prototype.disable=function(t){return this.executeListeners(\"disable\",t),this},t.prototype.tagFor=function(t,r){return\"\".concat(t,\"--\").concat(r)},t.prototype.addListener=function(t,r,e){var n=this.tagFor(t,r);n in this.eventMap||(this.eventMap[n]=[]),this.eventMap[n].push(e)},t.prototype.executeListeners=function(t,r){var e,n=this.tagFor(t,r);null===(e=this.eventMap[n])||void 0===e||e.forEach((function(t){return t()}))},t}();r.GdprManagerEventHub=e},670:(t,r)=>{var e;Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprStorage=void 0,function(t){t[t.None=1]=\"None\",t[t.Cookie=2]=\"Cookie\",t[t.LocalStorage=4]=\"LocalStorage\",t[t.SessionStorage=8]=\"SessionStorage\",t[t.IndexedDb=16]=\"IndexedDb\",t[t.FileSystem=16]=\"FileSystem\",t[t.ServerStorage=16]=\"ServerStorage\",t[t.All=30]=\"All\"}(e||(e={})),r.GdprStorage=e},860:function(t,r,e){var n,o=this&&this.__extends||(n=function(t,r){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var e in r)Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e])},n(t,r)},function(t,r){if(\"function\"!=typeof r&&null!==r)throw new TypeError(\"Class extends value \"+String(r)+\" is not a constructor or null\");function e(){this.constructor=t}n(t,r),t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}),i=this&&this.__read||function(t,r){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,o,i=e.call(t),u=[];try{for(;(void 0===r||r-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return u},u=this&&this.__spreadArray||function(t,r,e){if(e||2===arguments.length)for(var n,o=0,i=r.length;o<i;o++)!n&&o in r||(n||(n=Array.prototype.slice.call(r,0,o)),n[o]=r[o]);return t.concat(n||Array.prototype.slice.call(r))};Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprGroupBuilder=void 0;var a=e(670),s=e(237),d=e(822),c=e(890),p=function(t){function r(r,e,n,o,i,u){var a=t.call(this)||this;return a.parent=r,a.name=e,a.description=n,a.enable=i,a.require=u,a.guards=[],a.storage=o,u&&(a.enable=!0),a}return o(r,t),r.create=function(t,e,n,o,i,u){return void 0===n&&(n=\"\"),void 0===o&&(o=null),void 0===i&&(i=!0),void 0===u&&(u=!1),new r(t,e,n,o||a.GdprStorage.Cookie,i,u)},r.prototype.startGroup=function(r,e,n){return void 0===r&&(r=null),void 0===e&&(e=\"\"),void 0===n&&(n=\"\"),t.prototype.startGroup.call(this,r||this.parent.storage,e,n)},r.prototype.startRequiredGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startGroup(t,r,e).required()},r.prototype.endGroup=function(){var t=this.require||this.enable,r=d.GdprGuardGroup.for(this.name,this.description,t,this.require);return u(u([],i(this.guards),!1),i(this.groups),!1).forEach((function(t){return r.addGuard(t)})),this.require&&r.makeRequired(),this.parent.groups.push(r),this.parent},r.prototype.withName=function(t){return this.edit((function(r){return r.name=t}))},r.prototype.withDescription=function(t){return this.edit((function(r){return r.description=t}))},r.prototype.storedIn=function(t){return this.edit((function(r){return r.storage=t}))},r.prototype.enabled=function(){return this.edit((function(t){return t.enable=!0}))},r.prototype.disabled=function(){return this.edit((function(t){return t.enable=!1}))},r.prototype.required=function(){return this.edit((function(t){return t.require=!0}))},r.prototype.startGuard=function(t){return void 0===t&&(t=null),c.GdprGuardBuilder.create(this,t||this.storage,this.enable)},r.prototype.startRequiredGuard=function(t){return this.startGuard(t).required()},r.prototype.withEnabledGuard=function(t,r,e){return void 0===r&&(r=\"\"),void 0===e&&(e=null),this.startGuard(e).withName(t).withDescription(r).enabled().endGuard()},r.prototype.withDisabledGuard=function(t,r,e){return void 0===r&&(r=\"\"),void 0===e&&(e=null),this.startGuard(e).withName(t).withDescription(r).disabled().endGuard()},r.prototype.edit=function(t){return t(this),this},r}(s.GdprManagerBuilder);r.GdprGroupBuilder=p},890:(t,r,e)=>{Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprGuardBuilder=void 0;var n=e(670),o=e(315),i=function(){function t(t,r,e,n){this.parent=t,this.storage=r,this.enable=e,this.require=n,this.name=\"\",this.description=\"\",n&&(this.enable=!0)}return t.create=function(r,e,o,i){return void 0===e&&(e=n.GdprStorage.Cookie),void 0===o&&(o=!1),void 0===i&&(i=!1),new t(r,e,o,i)},t.prototype.endGuard=function(){var t=this.require||this.enable,r=(0,o.makeGuard)(this.name,this.description,this.storage,this.require,t);return this.require&&r.makeRequired(),this.parent.guards.push(r),this.parent},t.prototype.withName=function(t){return this.edit((function(r){return r.name=t}))},t.prototype.withDescription=function(t){return this.edit((function(r){return r.description=t}))},t.prototype.enabled=function(){return this.edit((function(t){return t.enable=!0}))},t.prototype.disabled=function(){return this.edit((function(t){return t.enable=!1}))},t.prototype.storedIn=function(t){return this.edit((function(r){return r.storage=t}))},t.prototype.required=function(){return this.edit((function(t){return t.require=!0}))},t.prototype.edit=function(t){return t(this),this},t}();r.GdprGuardBuilder=i},237:(t,r,e)=>{Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprManagerBuilder=void 0;var n=e(670),o=e(777),i=e(171),u=function(){function t(){this.storage=n.GdprStorage.Cookie,this.groups=[],this.bannerWasShown=!1}return t.make=function(){return new t},t.prototype.withBannerShown=function(t){void 0===t&&(t=!0),this.bannerWasShown=t},t.prototype.startGroup=function(t,r,e,n){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),void 0===n&&(n=!0),i.GdprGroupBuilder.create(this,r,e,t,n,!1)},t.prototype.startRequiredGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startEnabledGroup(t,r,e).required()},t.prototype.startEnabledGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startGroup(t,r,e,!0).enabled()},t.prototype.startDisabledGroup=function(t,r,e){return void 0===t&&(t=null),void 0===r&&(r=\"\"),void 0===e&&(e=\"\"),this.startGroup(t,r,e,!1).disabled()},t.prototype.build=function(){var t=o.GdprManager.create(this.groups);return t.bannerWasShown=this.bannerWasShown,t},t.prototype.endGroup=function(){return this},t}();r.GdprManagerBuilder=u},171:function(t,r,e){var n=this&&this.__createBinding||(Object.create?function(t,r,e,n){void 0===n&&(n=e);var o=Object.getOwnPropertyDescriptor(r,e);o&&!(\"get\"in o?!r.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return r[e]}}),Object.defineProperty(t,n,o)}:function(t,r,e,n){void 0===n&&(n=e),t[n]=r[e]}),o=this&&this.__exportStar||function(t,r){for(var e in t)\"default\"===e||Object.prototype.hasOwnProperty.call(r,e)||n(r,t,e)};Object.defineProperty(r,\"__esModule\",{value:!0}),o(e(890),r),o(e(237),r),o(e(860),r)},93:function(t,r,e){var n=this&&this.__createBinding||(Object.create?function(t,r,e,n){void 0===n&&(n=e);var o=Object.getOwnPropertyDescriptor(r,e);o&&!(\"get\"in o?!r.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return r[e]}}),Object.defineProperty(t,n,o)}:function(t,r,e,n){void 0===n&&(n=e),t[n]=r[e]}),o=this&&this.__exportStar||function(t,r){for(var e in t)\"default\"===e||Object.prototype.hasOwnProperty.call(r,e)||n(r,t,e)};Object.defineProperty(r,\"__esModule\",{value:!0}),o(e(315),r),o(e(822),r),o(e(777),r),o(e(670),r),o(e(779),r),o(e(171),r),o(e(562),r),o(e(344),r)},562:(t,r,e)=>{Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprDeserializer=void 0;var n=e(777),o=e(670),i=e(822),u=e(315),a=function(){function t(){}return t.manager=function(t){var r=this;if(![\"enabled\",\"groups\"].every((function(r){return r in t}))||\"boolean\"!=typeof t.enabled||!Array.isArray(t.groups))return null;var e=t.groups.map((function(t){return r.group(t)})).filter((function(t){return null!==t})),o=n.GdprManager.create([]);return o.enabled=!!t.enabled,o.bannerWasShown=!!t.bannerWasShown,e.length?(e.forEach((function(t){return o.addGroup(t)})),o):null},t.group=function(t){var r=this,e=this.guard(t);if(null===e)return null;var n=[\"guards\"];if(!n.every((function(r){return r in t}))||!Array.isArray(t.guards))return null;var o=i.GdprGuardGroup.for(e.name,e.description,e.enabled,e.required),u=t.guards.map((function(t){return n.every((function(r){return r in t}))?r.group(t):r.guard(t)})).filter((function(t){return null!==t}));return u.length?(u.forEach((function(t){return o.addGuard(t)})),o):null},t.guard=function(t){return[\"name\",\"enabled\",\"required\",\"description\",\"storage\"].every((function(r){return r in t}))&&\"string\"==typeof t.name&&\"boolean\"==typeof t.enabled&&\"boolean\"==typeof t.required&&\"string\"==typeof t.description&&\"number\"==typeof t.storage&&t.storage in o.GdprStorage?(0,u.makeGuard)(t.name,t.description,t.storage,!!t.required,!!t.enabled):null},t}();r.GdprDeserializer=a},344:function(t,r){var e=this&&this.__awaiter||function(t,r,e,n){return new(e||(e=Promise))((function(o,i){function u(t){try{s(n.next(t))}catch(t){i(t)}}function a(t){try{s(n.throw(t))}catch(t){i(t)}}function s(t){var r;t.done?o(t.value):(r=t.value,r instanceof e?r:new e((function(t){t(r)}))).then(u,a)}s((n=n.apply(t,r||[])).next())}))},n=this&&this.__generator||function(t,r){var e,n,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(e)throw new TypeError(\"Generator is already executing.\");for(;u;)try{if(e=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return u.label++,{value:i[1],done:!1};case 5:u.label++,n=i[1],i=[0];continue;case 7:i=u.ops.pop(),u.trys.pop();continue;default:if(!((o=(o=u.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){u=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){u.label=i[1];break}if(6===i[0]&&u.label<o[1]){u.label=o[1],o=i;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(i);break}o[2]&&u.ops.pop(),u.trys.pop();continue}i=r.call(t,u)}catch(t){i=[6,t],n=0}finally{e=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};Object.defineProperty(r,\"__esModule\",{value:!0}),r.GdprSaviorAdapter=void 0;var o=function(){function t(){}return t.prototype.exists=function(t){return void 0===t&&(t=!0),e(this,void 0,void 0,(function(){return n(this,(function(r){switch(r.label){case 0:return[4,this.restore(t)];case 1:return[2,null!==r.sent()]}}))}))},t.prototype.storeIfNotExists=function(t){return e(this,void 0,void 0,(function(){return n(this,(function(r){switch(r.label){case 0:return[4,this.exists()];case 1:return[2,!!r.sent()||this.store(t)]}}))}))},t.prototype.restoreOrCreate=function(t){return e(this,void 0,void 0,(function(){var r,e;return n(this,(function(n){switch(n.label){case 0:return[4,this.restore()];case 1:return(r=n.sent())?[3,3]:[4,t()];case 2:return e=n.sent(),this.updateSharedManager(e),e.bannerWasShown&&e.closeBanner(),[2,e];case 3:return r.bannerWasShown&&r.closeBanner(),[2,r]}}))}))},t.prototype.check=function(){return e(this,void 0,void 0,(function(){var t=this;return n(this,(function(r){switch(r.label){case 0:return[4,Promise.resolve()];case 1:return r.sent(),setTimeout((function(){t.exists(!0)}),100),[2]}}))}))},t}();r.GdprSaviorAdapter=o},779:(t,r,e)=>{Object.defineProperty(r,\"__esModule\",{value:!0}),r.visitGdpr=void 0;var n=e(777),o=e(822);r.visitGdpr=function(t,e){var i=void 0===e?{}:e,u=i.onManager,a=void 0===u?function(){}:u,s=i.onGroup,d=void 0===s?function(){}:s,c=i.onGuard,p=void 0===c?function(){}:c,l=i.onEach,f=void 0===l?function(){}:l,h={onManager:a,onGroup:d,onGuard:p,onEach:f};t instanceof n.GdprManager?(a(t),f(t),t.getGroups().forEach((function(t){return(0,r.visitGdpr)(t,h)}))):t instanceof o.GdprGuardGroup?(d(t),f(t),t.getGuards().forEach((function(t){return(0,r.visitGdpr)(t,h)}))):(p(t),f(t))}}},r={};return function e(n){var o=r[n];if(void 0!==o)return o.exports;var i=r[n]={exports:{}};return t[n].call(i.exports,i,i.exports,e),i.exports}(93)})()}));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { GdprGuard, GdprGuardGroup, GdprManager, GdprManagerFactory, GdprSavior } from \"gdpr-guard\"\nimport { GroupRenderFunction, GuardRenderFunction, ManagerRenderFunction, Rendered } from \"./Renderer\"\n\n/**\n * Configuration for the render function\n */\nexport interface RenderPayload {\n\t/**\n\t * Manager rendering function\n\t */\n\trenderManager: ManagerRenderFunction;\n\n\t/**\n\t * Group rendering function\n\t */\n\trenderGroup: GroupRenderFunction;\n\n\t/**\n\t * Guard rendering function\n\t */\n\trenderGuard: GuardRenderFunction;\n}\n\n/**\n * Result of the render function\n */\nexport interface GdprRenderResult {\n\t/**\n\t * The rendered element\n\t */\n\trendered: Rendered;\n\n\t/**\n\t * The manager used to render\n\t */\n\tmanager: GdprManager;\n}\n\n/**\n * Render the current manager state (you will manually handle re-renders)\n * @param manager - The manager to render\n * @param payload - The render configuration\n */\nexport const render = async (manager: GdprManager, payload: RenderPayload): Promise<GdprRenderResult> => {\n\tconst {\n\t\trenderManager: rm,\n\t\trenderGroup: rgr,\n\t\trenderGuard: rgu,\n\t} = payload;\n\n\n\tconst renderer = {\n\t\tbound(method: string) {\n\t\t\treturn this[method].bind(this);\n\t\t},\n\t\trenderGuard(guard: GdprGuard): Promise<Rendered> {\n\t\t\treturn rgu(this.bound(\"renderGroup\"), guard);\n\t\t},\n\t\trenderGroup(group: GdprGuardGroup): Promise<Rendered> {\n\t\t\treturn rgr(this.bound(\"renderGuard\"), group);\n\t\t},\n\t\trenderManager(manager: GdprManager): Promise<Rendered> {\n\t\t\treturn rm(this.bound(\"renderGroup\"), manager);\n\t\t},\n\t};\n\n\n\tconst rendered = await renderer.renderManager(manager);\n\n\treturn {\n\t\trendered,\n\t\tmanager,\n\t};\n};\n","export function objToNode(objNode, insideSvg, options) {\n    let node\n    if (objNode.nodeName === '#text') {\n        node = options.document.createTextNode(objNode.data)\n\n    } else if (objNode.nodeName === '#comment') {\n        node = options.document.createComment(objNode.data)\n    } else {\n        if (insideSvg) {\n            node = options.document.createElementNS('http://www.w3.org/2000/svg', objNode.nodeName)\n        } else if (objNode.nodeName.toLowerCase() === 'svg') {\n            node = options.document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n            insideSvg = true\n        } else {\n            node = options.document.createElement(objNode.nodeName)\n        }\n        if (objNode.attributes) {\n            Object.entries(objNode.attributes).forEach(([key, value]) => node.setAttribute(key, value))\n        }\n        if (objNode.childNodes) {\n            objNode.childNodes.forEach(childNode => node.appendChild(objToNode(childNode, insideSvg, options)))\n        }\n        if (options.valueDiffing) {\n            if (objNode.value) {\n                node.value = objNode.value\n            }\n            if (objNode.checked) {\n                node.checked = objNode.checked\n            }\n            if (objNode.selected) {\n                node.selected = objNode.selected\n            }\n        }\n    }\n    return node\n}\n","import {objToNode} from \"./fromVirtual\"\n\n// ===== Apply a diff =====\n\nfunction getFromRoute(node, route) {\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        const c = route.splice(0, 1)[0]\n        node = node.childNodes[c]\n    }\n    return node\n}\n\nexport function applyDiff(\n        tree,\n        diff,\n        options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n    ) {\n    let node = getFromRoute(tree, diff[options._const.route])\n    let newNode\n    let reference\n    let route\n    let nodeArray\n    let c\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preDiffApply(info)) {\n        return true\n    }\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.value])\n            break\n        case options._const.modifyAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.newValue])\n            if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.newValue]\n            }\n            break\n        case options._const.removeAttribute:\n            if (!node || !node.removeAttribute) {\n                return false\n            }\n            node.removeAttribute(diff[options._const.name])\n            break\n        case options._const.modifyTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyValue:\n            if (!node || typeof node.value === 'undefined') {\n                return false\n            }\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            if (!node || typeof node.data === 'undefined') {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyChecked:\n            if (!node || typeof node.checked === 'undefined') {\n                return false\n            }\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            if (!node || typeof node.selected === 'undefined') {\n                return false\n            }\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            node.parentNode.replaceChild(\n                objToNode(\n                    diff[options._const.newValue],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node\n            )\n            break\n        case options._const.relocateGroup:\n            nodeArray = Array(...new Array(diff.groupLength)).map(() => node.removeChild(node.childNodes[diff[options._const.from]]))\n            nodeArray.forEach((childNode, index) => {\n                if (index === 0) {\n                    reference = node.childNodes[diff[options._const.to]]\n                }\n                node.insertBefore(childNode, reference || null)\n            })\n            break\n        case options._const.removeElement:\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromRoute(tree, route)\n            node.insertBefore(\n                objToNode(\n                    diff[options._const.element],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node.childNodes[c] || null\n            )\n            break\n        case options._const.removeTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = options.document.createTextNode(diff[options._const.value])\n            node = getFromRoute(tree, route)\n            if (!node || !node.childNodes) {\n                return false\n            }\n            node.insertBefore(newNode, node.childNodes[c] || null)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    // if a new node was created, we might be interested in its\n    // post diff hook\n    info.newNode = newNode\n    options.postDiffApply(info)\n\n    return true\n}\n\nexport function applyDOM(tree, diffs, options) {\n    return diffs.every(diff => applyDiff(tree, diff, options))\n}\n","import {applyDiff} from \"./apply\"\n\n// ===== Undo a diff =====\n\nfunction swap(obj, p1, p2) {\n    const tmp = obj[p1]\n    obj[p1] = obj[p2]\n    obj[p2] = tmp\n}\n\nfunction undoDiff(\n    tree,\n    diff,\n    options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n) {\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            diff[options._const.action] = options._const.removeAttribute\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyAttribute:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeAttribute:\n            diff[options._const.action] = options._const.addAttribute\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyTextElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyValue:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyComment:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifyChecked:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.modifySelected:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.replaceElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.relocateGroup:\n            swap(diff, options._const.from, options._const.to)\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeElement:\n            diff[options._const.action] = options._const.addElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.addElement:\n            diff[options._const.action] = options._const.removeElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.removeTextElement:\n            diff[options._const.action] = options._const.addTextElement\n            applyDiff(tree, diff, options)\n            break\n        case options._const.addTextElement:\n            diff[options._const.action] = options._const.removeTextElement\n            applyDiff(tree, diff, options)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n}\n\nexport function undoDOM(tree, diffs, options) {\n    if (!diffs.length) {\n        diffs = [diffs]\n    }\n    diffs = diffs.slice()\n    diffs.reverse()\n    diffs.forEach(diff => {\n        undoDiff(tree, diff, options)\n    })\n}\n","export class Diff {\n    constructor(options = {}) {\n        Object.entries(options).forEach(([key, value]) => this[key] = value)\n    }\n\n    toString() {\n        return JSON.stringify(this)\n    }\n\n    setValue(aKey, aValue) {\n        this[aKey] = aValue\n        return this\n    }\n}\n\nfunction elementDescriptors(el) {\n    const output = []\n    output.push(el.nodeName)\n    if (el.nodeName !== '#text' && el.nodeName !== '#comment') {\n        if (el.attributes) {\n            if (el.attributes['class']) {\n                output.push(`${el.nodeName}.${el.attributes['class'].replace(/ /g, '.')}`)\n            }\n            if (el.attributes.id) {\n                output.push(`${el.nodeName}#${el.attributes.id}`)\n            }\n        }\n\n    }\n    return output\n}\n\nfunction findUniqueDescriptors(li) {\n    const uniqueDescriptors = {}\n    const duplicateDescriptors = {}\n\n    li.forEach(node => {\n        elementDescriptors(node).forEach(descriptor => {\n            const inUnique = descriptor in uniqueDescriptors\n            const inDupes = descriptor in duplicateDescriptors\n            if (!inUnique && !inDupes) {\n                uniqueDescriptors[descriptor] = true\n            } else if (inUnique) {\n                delete uniqueDescriptors[descriptor]\n                duplicateDescriptors[descriptor] = true\n            }\n        })\n    })\n\n    return uniqueDescriptors\n}\n\nfunction uniqueInBoth(l1, l2) {\n    const l1Unique = findUniqueDescriptors(l1)\n    const l2Unique = findUniqueDescriptors(l2)\n    const inBoth = {}\n\n    Object.keys(l1Unique).forEach(key => {\n        if (l2Unique[key]) {\n            inBoth[key] = true\n        }\n    })\n\n    return inBoth\n}\n\nexport function removeDone(tree) {\n    delete tree.outerDone\n    delete tree.innerDone\n    delete tree.valueDone\n    if (tree.childNodes) {\n        return tree.childNodes.every(removeDone)\n    } else {\n        return true\n    }\n}\n\nexport function isEqual(e1, e2) {\n    if (!['nodeName', 'value', 'checked', 'selected', 'data'].every(element => {\n            if (e1[element] !== e2[element]) {\n                return false\n            }\n            return true\n        })) {\n        return false\n    }\n\n    if (Boolean(e1.attributes) !== Boolean(e2.attributes)) {\n        return false\n    }\n\n    if (Boolean(e1.childNodes) !== Boolean(e2.childNodes)) {\n        return false\n    }\n    if (e1.attributes) {\n        const e1Attributes = Object.keys(e1.attributes)\n        const e2Attributes = Object.keys(e2.attributes)\n\n        if (e1Attributes.length !== e2Attributes.length) {\n            return false\n        }\n        if (!e1Attributes.every(attribute => {\n                if (e1.attributes[attribute] !== e2.attributes[attribute]) {\n                    return false\n                }\n                return true\n            })) {\n            return false\n        }\n    }\n    if (e1.childNodes) {\n        if (e1.childNodes.length !== e2.childNodes.length) {\n            return false\n        }\n        if (!e1.childNodes.every((childNode, index) => isEqual(childNode, e2.childNodes[index]))) {\n\n            return false\n        }\n\n    }\n\n    return true\n}\n\n\nexport function roughlyEqual(e1, e2, uniqueDescriptors, sameSiblings, preventRecursion) {\n\n    if (!e1 || !e2) {\n        return false\n    }\n\n    if (e1.nodeName !== e2.nodeName) {\n        return false\n    }\n\n    if (e1.nodeName === '#text') {\n        // Note that we initially don't care what the text content of a node is,\n        // the mere fact that it's the same tag and \"has text\" means it's roughly\n        // equal, and then we can find out the true text difference later.\n        return preventRecursion ? true : e1.data === e2.data\n    }\n\n\n    if (e1.nodeName in uniqueDescriptors) {\n        return true\n    }\n\n    if (e1.attributes && e2.attributes) {\n\n        if (e1.attributes.id) {\n            if (e1.attributes.id !== e2.attributes.id) {\n                return false\n            } else {\n                const idDescriptor = `${e1.nodeName}#${e1.attributes.id}`\n                if (idDescriptor in uniqueDescriptors) {\n                    return true\n                }\n            }\n        }\n        if (e1.attributes['class'] && e1.attributes['class'] === e2.attributes['class']) {\n            const classDescriptor = `${e1.nodeName}.${e1.attributes['class'].replace(/ /g, '.')}`\n            if (classDescriptor in uniqueDescriptors) {\n                return true\n            }\n        }\n    }\n\n    if (sameSiblings) {\n        return true\n    }\n\n    const nodeList1 = e1.childNodes ? e1.childNodes.slice().reverse() : []\n    const nodeList2 = e2.childNodes ? e2.childNodes.slice().reverse() : []\n\n    if (nodeList1.length !== nodeList2.length) {\n        return false\n    }\n\n    if (preventRecursion) {\n        return nodeList1.every((element, index) => element.nodeName === nodeList2[index].nodeName)\n    } else {\n        // note: we only allow one level of recursion at any depth. If 'preventRecursion'\n        // was not set, we must explicitly force it to true for child iterations.\n        const childUniqueDescriptors = uniqueInBoth(nodeList1, nodeList2)\n        return nodeList1.every((element, index) => roughlyEqual(element, nodeList2[index], childUniqueDescriptors, true, true))\n    }\n}\n\n\nexport function cloneObj(obj) { //  TODO: Do we really need to clone here? Is it not enough to just return the original object?\n    return JSON.parse(JSON.stringify(obj))\n}\n/**\n * based on https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_substring#JavaScript\n */\nfunction findCommonSubsets(c1, c2, marked1, marked2) {\n    let lcsSize = 0\n    let index = []\n    const c1Length = c1.length\n    const c2Length = c2.length\n\n    const // set up the matching table\n        matches = Array(...new Array(c1Length + 1)).map(() => [])\n\n    const uniqueDescriptors = uniqueInBoth(c1, c2)\n\n    let // If all of the elements are the same tag, id and class, then we can\n        // consider them roughly the same even if they have a different number of\n        // children. This will reduce removing and re-adding similar elements.\n        subsetsSame = c1Length === c2Length\n\n    if (subsetsSame) {\n\n        c1.some((element, i) => {\n            const c1Desc = elementDescriptors(element)\n            const c2Desc = elementDescriptors(c2[i])\n            if (c1Desc.length !== c2Desc.length) {\n                subsetsSame = false\n                return true\n            }\n            c1Desc.some((description, i) => {\n                if (description !== c2Desc[i]) {\n                    subsetsSame = false\n                    return true\n                }\n            })\n            if (!subsetsSame) {\n                return true\n            }\n        })\n    }\n\n    // fill the matches with distance values\n    for (let c1Index = 0; c1Index < c1Length; c1Index++) {\n        const c1Element = c1[c1Index]\n        for (let c2Index = 0; c2Index < c2Length; c2Index++) {\n            const c2Element = c2[c2Index]\n            if (!marked1[c1Index] && !marked2[c2Index] && roughlyEqual(c1Element, c2Element, uniqueDescriptors, subsetsSame)) {\n                matches[c1Index + 1][c2Index + 1] = (matches[c1Index][c2Index] ? matches[c1Index][c2Index] + 1 : 1)\n                if (matches[c1Index + 1][c2Index + 1] >= lcsSize) {\n                    lcsSize = matches[c1Index + 1][c2Index + 1]\n                    index = [c1Index + 1, c2Index + 1]\n                }\n            } else {\n                matches[c1Index + 1][c2Index + 1] = 0\n            }\n        }\n    }\n\n    if (lcsSize === 0) {\n        return false\n    }\n\n    return {\n        oldValue: index[0] - lcsSize,\n        newValue: index[1] - lcsSize,\n        length: lcsSize\n    }\n}\n\n/**\n * This should really be a predefined function in Array...\n */\nfunction makeArray(n, v) {\n    return Array(...new Array(n)).map(() => v)\n}\n\n/**\n * Generate arrays that indicate which node belongs to which subset,\n * or whether it's actually an orphan node, existing in only one\n * of the two trees, rather than somewhere in both.\n *\n * So if t1 = <img><canvas><br>, t2 = <canvas><br><img>.\n * The longest subset is \"<canvas><br>\" (length 2), so it will group 0.\n * The second longest is \"<img>\" (length 1), so it will be group 1.\n * gaps1 will therefore be [1,0,0] and gaps2 [0,0,1].\n *\n * If an element is not part of any group, it will stay being 'true', which\n * is the initial value. For example:\n * t1 = <img><p></p><br><canvas>, t2 = <b></b><br><canvas><img>\n *\n * The \"<p></p>\" and \"<b></b>\" do only show up in one of the two and will\n * therefore be marked by \"true\". The remaining parts are parts of the\n * groups 0 and 1:\n * gaps1 = [1, true, 0, 0], gaps2 = [true, 0, 0, 1]\n *\n */\nexport function getGapInformation(t1, t2, stable) {\n    const gaps1 = t1.childNodes ? makeArray(t1.childNodes.length, true) : []\n    const gaps2 = t2.childNodes ? makeArray(t2.childNodes.length, true) : []\n    let group = 0\n\n    // give elements from the same subset the same group number\n    stable.forEach(subset => {\n        const endOld = subset.oldValue + subset.length\n        const endNew = subset.newValue + subset.length\n\n        for (let j = subset.oldValue; j < endOld; j += 1) {\n            gaps1[j] = group\n        }\n        for (let j = subset.newValue; j < endNew; j += 1) {\n            gaps2[j] = group\n        }\n        group += 1\n    })\n\n    return {\n        gaps1,\n        gaps2\n    }\n}\n\n/**\n * Find all matching subsets, based on immediate child differences only.\n */\nexport function markSubTrees(oldTree, newTree) {\n    // note: the child lists are views, and so update as we update old/newTree\n    const oldChildren = oldTree.childNodes ? oldTree.childNodes : []\n\n    const newChildren = newTree.childNodes ? newTree.childNodes : []\n    const marked1 = makeArray(oldChildren.length, false)\n    const marked2 = makeArray(newChildren.length, false)\n    const subsets = []\n    let subset = true\n\n    const returnIndex = function() {\n        return arguments[1]\n    }\n\n    const markBoth = i => {\n        marked1[subset.oldValue + i] = true\n        marked2[subset.newValue + i] = true\n    }\n\n    while (subset) {\n        subset = findCommonSubsets(oldChildren, newChildren, marked1, marked2)\n        if (subset) {\n            subsets.push(subset)\n            const subsetArray = Array(...new Array(subset.length)).map(returnIndex)\n            subsetArray.forEach(item => markBoth(item))\n        }\n    }\n\n    oldTree.subsets = subsets\n    oldTree.subsetsAge = 100\n    return subsets\n}\n\nexport class DiffTracker {\n    constructor() {\n        this.list = []\n    }\n\n    add(diffs) {\n        this.list.push(...diffs)\n    }\n    forEach(fn) {\n        this.list.forEach(li => fn(li))\n    }\n\n}\n","import {cloneObj} from \"./helpers\"\n\n// ===== Apply a virtual diff =====\n\nfunction getFromVirtualRoute(tree, route) {\n    let node = tree\n    let parentNode\n    let nodeIndex\n\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        nodeIndex = route.splice(0, 1)[0]\n        parentNode = node\n        node = node.childNodes[nodeIndex]\n    }\n    return {\n        node,\n        parentNode,\n        nodeIndex\n    }\n}\n\nfunction applyVirtualDiff(\n        tree,\n        diff,\n        options // {preVirtualDiffApply, postVirtualDiffApply, _const}\n    ) {\n    const routeInfo = getFromVirtualRoute(tree, diff[options._const.route])\n    let node = routeInfo.node\n    const parentNode = routeInfo.parentNode\n    const nodeIndex = routeInfo.nodeIndex\n    const newSubsets = []\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preVirtualDiffApply(info)) {\n        return true\n    }\n\n    let newNode\n    let nodeArray\n    let route\n    let c\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node.attributes) {\n                node.attributes = {}\n            }\n\n            node.attributes[diff[options._const.name]] = diff[options._const.value]\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = true\n            } else if (diff[options._const.name] === 'selected') {\n                node.selected = true\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.value]\n            }\n\n            break\n        case options._const.modifyAttribute:\n            node.attributes[diff[options._const.name]] = diff[options._const.newValue]\n            break\n        case options._const.removeAttribute:\n\n            delete node.attributes[diff[options._const.name]]\n\n            if (Object.keys(node.attributes).length === 0) {\n                delete node.attributes\n            }\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = false\n            } else if (diff[options._const.name] === 'selected') {\n                delete node.selected\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                delete node.value\n            }\n\n            break\n        case options._const.modifyTextElement:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyValue:\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyChecked:\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            newNode = cloneObj(diff[options._const.newValue])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n            parentNode.childNodes[nodeIndex] = newNode\n            break\n        case options._const.relocateGroup:\n            nodeArray = node.childNodes.splice(diff[options._const.from], diff.groupLength).reverse()\n            nodeArray.forEach(movedNode => node.childNodes.splice(diff[options._const.to], 0, movedNode))\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (diff[options._const.from] < diff[options._const.to] && map.oldValue <= diff[options._const.to] && map.oldValue > diff[options._const.from]) {\n                        map.oldValue -= diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (diff[options._const.from] > diff[options._const.to] && map.oldValue > diff[options._const.to] && map.oldValue < diff[options._const.from]) {\n                        map.oldValue += diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (map.oldValue === diff[options._const.from]) {\n                        map.oldValue = diff[options._const.to]\n                    }\n                })\n            }\n\n            break\n        case options._const.removeElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromVirtualRoute(tree, route).node\n            newNode = cloneObj(diff[options._const.element])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    } else if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        case options._const.removeTextElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.nodeName === 'TEXTAREA') {\n                delete parentNode.value\n            }\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = {}\n            newNode.nodeName = '#text'\n            newNode.data = diff[options._const.value]\n            node = getFromVirtualRoute(tree, route).node\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.nodeName === 'TEXTAREA') {\n                node.value = diff[options._const.newValue]\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    }\n                    if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    if (node.subsets) {\n        node.subsets = node.subsets.filter(map => !map.delete && map.oldValue !== map.newValue)\n        if (newSubsets.length) {\n            node.subsets = node.subsets.concat(newSubsets)\n        }\n    }\n\n    // capture newNode for the callback\n    info.newNode = newNode\n    options.postVirtualDiffApply(info)\n\n    return\n}\n\nexport function applyVirtual(tree, diffs, options) {\n    diffs.forEach(diff => {\n        applyVirtualDiff(tree, diff, options)\n    })\n    return true\n}\n","export function nodeToObj(aNode, options = {}) {\n    const objNode = {}\n    objNode.nodeName = aNode.nodeName\n    if (objNode.nodeName === '#text' || objNode.nodeName === '#comment') {\n        objNode.data = aNode.data\n    } else {\n        if (aNode.attributes && aNode.attributes.length > 0) {\n            objNode.attributes = {}\n            const nodeArray = Array.prototype.slice.call(aNode.attributes)\n            nodeArray.forEach(attribute => objNode.attributes[attribute.name] = attribute.value)\n        }\n        if (objNode.nodeName === 'TEXTAREA') {\n            objNode.value = aNode.value\n        } else if (aNode.childNodes && aNode.childNodes.length > 0) {\n            objNode.childNodes = []\n            const nodeArray = Array.prototype.slice.call(aNode.childNodes)\n            nodeArray.forEach(childNode => objNode.childNodes.push(nodeToObj(childNode, options)))\n        }\n        if (options.valueDiffing) {\n            if (aNode.checked !== undefined && aNode.type && ['radio', 'checkbox'].includes(aNode.type.toLowerCase())) {\n                objNode.checked = aNode.checked\n            } else if (aNode.value !== undefined) {\n                objNode.value = aNode.value\n            }\n            if (aNode.selected !== undefined) {\n                objNode.selected = aNode.selected\n            }\n        }\n    }\n    return objNode\n}\n","// from html-parse-stringify (MIT)\n\nconst tagRE = /<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>/g\n// re-used obj for quick lookups of components\nconst empty = Object.create ? Object.create(null) : {}\nconst attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g\n\n\nfunction unescape(string) {\n    return string.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n.replace(/&amp;/g, '&')\n}\n\n// create optimized lookup object for\n// void elements as listed here:\n// http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nconst lookup = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuItem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n}\n\n\nfunction parseTag(tag) {\n    const res = {\n        nodeName: '',\n        attributes: {}\n    }\n\n    let tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/)\n    if (tagMatch) {\n        res.nodeName = tagMatch[1].toUpperCase()\n        if (lookup[tagMatch[1].toLowerCase()] || tag.charAt(tag.length - 2) === '/') {\n            res.voidElement = true\n        }\n\n        // handle comment tag\n        if (res.nodeName.startsWith('!--')) {\n            const endIndex = tag.indexOf('-->')\n            return {\n                type: 'comment',\n                data: endIndex !== -1 ? tag.slice(4, endIndex) : ''\n            }\n        }\n    }\n\n    let reg = new RegExp(attrRE)\n    let result = null\n    let done = false\n    while (!done) {\n        result = reg.exec(tag)\n\n        if (result === null) {\n            done = true\n        } else if (result[0].trim()) {\n            if (result[1]) {\n                let attr = result[1].trim()\n                let arr = [attr, \"\"]\n\n                if (attr.indexOf(\"=\") > -1) arr = attr.split(\"=\")\n\n                res.attributes[arr[0]] = arr[1]\n                reg.lastIndex--\n            } else if (result[2]) res.attributes[result[2]] = result[3].trim().substring(1, result[3].length - 1)\n        }\n    }\n\n    return res\n}\n\nfunction parse(\n    html,\n    options = {components: empty}\n) {\n    const result = []\n    let current\n    let level = -1\n    const arr = []\n    let inComponent = false\n\n    html.replace(tagRE, (tag, index) => {\n        if (inComponent) {\n            if (tag !== (`</${current.nodeName}>`)) {\n                return\n            } else {\n                inComponent = false\n            }\n        }\n        const isOpen = tag.charAt(1) !== '/'\n        const isComment = tag.startsWith('<!--')\n        const start = index + tag.length\n        const nextChar = html.charAt(start)\n        let parent\n\n        if (isComment) {\n            const comment = parseTag(tag)\n\n            // if we're at root, push new base node\n            if (level < 0) {\n                result.push(comment)\n                return result\n            }\n            parent = arr[level]\n            if (parent) {\n                if (!parent.childNodes) {\n                    parent.childNodes = []\n                }\n                parent.childNodes.push(comment)\n            }\n\n            return result\n        }\n\n        if (isOpen) {\n            current = parseTag(tag)\n            level++\n            if (current.type === 'tag' && options.components[current.nodeName]) {\n                current.type = 'component'\n                inComponent = true\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                if (!current.childNodes) {\n                    current.childNodes = []\n                }\n                current.childNodes.push({\n                    nodeName: '#text',\n                    data: unescape(html.slice(start, html.indexOf('<', start)))\n                })\n            }\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current)\n            }\n\n            parent = arr[level - 1]\n\n            if (parent) {\n                if (!parent.childNodes) {\n                    parent.childNodes = []\n                }\n                parent.childNodes.push(current)\n            }\n\n            arr[level] = current\n        }\n\n        if (!isOpen || current.voidElement) {\n            level--\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                parent = level === -1 ? result : arr[level].childNodes || []\n\n                // calculate correct end of the data slice in case there's\n                // no tag after the text node.\n                const end = html.indexOf('<', start)\n                const data = unescape(html.slice(start, end === -1 ? undefined : end))\n                parent.push({\n                    nodeName: '#text',\n                    data\n                })\n            }\n        }\n    })\n\n    return result[0]\n}\n\nfunction cleanObj(obj) {\n    delete obj.voidElement\n    if (obj.childNodes) {\n        obj.childNodes.forEach(child => cleanObj(child))\n    }\n    return obj\n}\n\nexport function stringToObj(string) {\n    return cleanObj(parse(string))\n}\n","import {Diff, DiffTracker, cloneObj, getGapInformation, isEqual, markSubTrees, removeDone, roughlyEqual} from \"./helpers\"\nimport {applyVirtual} from \"./apply\"\nimport {nodeToObj} from \"./fromDOM\"\nimport {stringToObj} from \"./fromString\"\n\n// ===== Create a diff =====\n\nexport class DiffFinder {\n    constructor(t1Node, t2Node, options) {\n        this.options = options\n        this.t1 = (t1Node instanceof HTMLElement) ? nodeToObj(t1Node, this.options) : (typeof t1Node === 'string') ? stringToObj(t1Node, this.options) : JSON.parse(JSON.stringify(t1Node))\n        this.t2 = (t2Node instanceof HTMLElement) ? nodeToObj(t2Node, this.options) : (typeof t2Node === 'string') ? stringToObj(t2Node, this.options) : JSON.parse(JSON.stringify(t2Node))\n        this.diffcount = 0\n        this.foundAll = false\n        if (this.debug) {\n            this.t1Orig = nodeToObj(t1Node, this.options)\n            this.t2Orig = nodeToObj(t2Node, this.options)\n        }\n\n        this.tracker = new DiffTracker()\n    }\n\n    init() {\n        return this.findDiffs(this.t1, this.t2)\n    }\n\n    findDiffs(t1, t2) {\n        let diffs\n        do {\n            if (this.options.debug) {\n                this.diffcount += 1\n                if (this.diffcount > this.options.diffcap) {\n                    window.diffError = [this.t1Orig, this.t2Orig]\n                    throw new Error(`surpassed diffcap:${JSON.stringify(this.t1Orig)} -> ${JSON.stringify(this.t2Orig)}`)\n                }\n            }\n            diffs = this.findNextDiff(t1, t2, [])\n\n            if (diffs.length === 0) {\n                // Last check if the elements really are the same now.\n                // If not, remove all info about being done and start over.\n                // Sometimes a node can be marked as done, but the creation of subsequent diffs means that it has to be changed again.\n                if (!isEqual(t1, t2)) {\n                    if (this.foundAll) {\n                        console.error('Could not find remaining diffs!')\n                    } else {\n                        this.foundAll = true\n                        removeDone(t1)\n                        diffs = this.findNextDiff(t1, t2, [])\n                    }\n                }\n            }\n            if (diffs.length > 0) {\n                this.foundAll = false\n                this.tracker.add(diffs)\n                applyVirtual(t1, diffs, this.options)\n            }\n        } while (diffs.length > 0)\n\n        return this.tracker.list\n    }\n\n    findNextDiff(t1, t2, route) {\n        let diffs\n        let fdiffs\n\n        if (this.options.maxDepth && route.length > this.options.maxDepth) {\n            return []\n        }\n        // outer differences?\n        if (!t1.outerDone) {\n            diffs = this.findOuterDiff(t1, t2, route)\n            if (this.options.filterOuterDiff) {\n                fdiffs = this.options.filterOuterDiff(t1, t2, diffs)\n                if (fdiffs) diffs = fdiffs\n            }\n            if (diffs.length > 0) {\n                t1.outerDone = true\n                return diffs\n            } else {\n                t1.outerDone = true\n            }\n        }\n        // inner differences?\n        if (!t1.innerDone) {\n            diffs = this.findInnerDiff(t1, t2, route)\n            if (diffs.length > 0) {\n                return diffs\n            } else {\n                t1.innerDone = true\n            }\n        }\n\n        if (this.options.valueDiffing && !t1.valueDone) {\n            // value differences?\n            diffs = this.findValueDiff(t1, t2, route)\n\n            if (diffs.length > 0) {\n                t1.valueDone = true\n                return diffs\n            } else {\n                t1.valueDone = true\n            }\n        }\n\n        // no differences\n        return []\n    }\n\n    findOuterDiff(t1, t2, route) {\n        const diffs = []\n        let attr\n        let attr1\n        let attr2\n        let attrLength\n        let pos\n        let i\n        if (t1.nodeName !== t2.nodeName) {\n            if (!route.length) {\n                throw new Error('Top level nodes have to be of the same kind.')\n            }\n            return [new Diff()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, cloneObj(t1))\n                .setValue(this.options._const.newValue, cloneObj(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n        if (route.length && this.options.maxNodeDiffCount < Math.abs((t1.childNodes || []).length - (t2.childNodes || []).length)) {\n            return [new Diff()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, cloneObj(t1))\n                .setValue(this.options._const.newValue, cloneObj(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n\n        if (t1.data !== t2.data) {\n            // Comment or text node.\n            if (t1.nodeName === '#text') {\n                return [new Diff()\n                    .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            } else {\n                return [new Diff()\n                    .setValue(this.options._const.action, this.options._const.modifyComment)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            }\n\n        }\n\n        attr1 = t1.attributes ? Object.keys(t1.attributes).sort() : []\n        attr2 = t2.attributes ? Object.keys(t2.attributes).sort() : []\n\n        attrLength = attr1.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr1[i]\n            pos = attr2.indexOf(attr)\n            if (pos === -1) {\n                diffs.push(new Diff()\n                    .setValue(this.options._const.action, this.options._const.removeAttribute)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.name, attr)\n                    .setValue(this.options._const.value, t1.attributes[attr])\n                )\n            } else {\n                attr2.splice(pos, 1)\n                if (t1.attributes[attr] !== t2.attributes[attr]) {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyAttribute)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.name, attr)\n                        .setValue(this.options._const.oldValue, t1.attributes[attr])\n                        .setValue(this.options._const.newValue, t2.attributes[attr])\n                    )\n                }\n            }\n        }\n\n        attrLength = attr2.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr2[i]\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.addAttribute)\n                .setValue(this.options._const.route, route)\n                .setValue(this.options._const.name, attr)\n                .setValue(this.options._const.value, t2.attributes[attr])\n            )\n        }\n\n        return diffs\n    }\n\n    findInnerDiff(t1, t2, route) {\n        const t1ChildNodes = t1.childNodes ? t1.childNodes.slice() : []\n        const t2ChildNodes = t2.childNodes ? t2.childNodes.slice() : []\n        const last = Math.max(t1ChildNodes.length, t2ChildNodes.length)\n        let childNodesLengthDifference = Math.abs(t1ChildNodes.length - t2ChildNodes.length)\n        let diffs = []\n        let index = 0\n        if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n            const cachedSubtrees = t1.subsets && t1.subsetsAge--\n            const subtrees = cachedSubtrees ? t1.subsets : (t1.childNodes && t2.childNodes) ? markSubTrees(t1, t2) : []\n            if (subtrees.length > 0) {\n                /* One or more groups have been identified among the childnodes of t1\n                 * and t2.\n                 */\n                diffs = this.attemptGroupRelocation(t1, t2, subtrees, route, cachedSubtrees)\n                if (diffs.length > 0) {\n                    return diffs\n                }\n            }\n        }\n\n\n        /* 0 or 1 groups of similar child nodes have been found\n         * for t1 and t2. 1 If there is 1, it could be a sign that the\n         * contents are the same. When the number of groups is below 2,\n         * t1 and t2 are made to have the same length and each of the\n         * pairs of child nodes are diffed.\n         */\n\n        for (let i = 0; i < last; i += 1) {\n            const e1 = t1ChildNodes[i]\n            const e2 = t2ChildNodes[i]\n\n            if (childNodesLengthDifference) {\n                /* t1 and t2 have different amounts of childNodes. Add\n                 * and remove as necessary to obtain the same length */\n                if (e1 && !e2) {\n                    if (e1.nodeName === '#text') {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e1.data)\n                        )\n                        index -= 1\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cloneObj(e1))\n                        )\n                        index -= 1\n                    }\n\n                } else if (e2 && !e1) {\n                    if (e2.nodeName === '#text') {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e2.data)\n                        )\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cloneObj(e2))\n                        )\n                    }\n                }\n            }\n            /* We are now guaranteed that childNodes e1 and e2 exist,\n             * and that they can be diffed.\n             */\n            /* Diffs in child nodes should not affect the parent node,\n             * so we let these diffs be submitted together with other\n             * diffs.\n             */\n\n            if (e1 && e2) {\n                if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n                    diffs = diffs.concat(this.findNextDiff(e1, e2, route.concat(index)))\n                } else if (!isEqual(e1, e2)) {\n                    if (t1ChildNodes.length > t2ChildNodes.length) {\n                        if (e1.nodeName === '#text') {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeTextElement)\n                                .setValue(this.options._const.route, route.concat(index))\n                                .setValue(this.options._const.value, e1.data)\n                            )\n                        } else {\n                            diffs.push(\n                                new Diff()\n                                    .setValue(this.options._const.action, this.options._const.removeElement)\n                                    .setValue(this.options._const.element, cloneObj(e1))\n                                    .setValue(this.options._const.route, route.concat(index))\n                            )\n                        }\n                        t1ChildNodes.splice(i, 1)\n                        i -= 1\n                        index -= 1\n\n                        childNodesLengthDifference -= 1\n                    } else if (t1ChildNodes.length < t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.addElement)\n                                .setValue(this.options._const.element, cloneObj(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                        t1ChildNodes.splice(i, 0, {})\n                        childNodesLengthDifference -= 1\n                    } else {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.replaceElement)\n                                .setValue(this.options._const.oldValue, cloneObj(e1))\n                                .setValue(this.options._const.newValue, cloneObj(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                    }\n\n                }\n\n            }\n            index += 1\n\n        }\n        t1.innerDone = true\n        return diffs\n    }\n\n    attemptGroupRelocation(t1, t2, subtrees, route, cachedSubtrees) {\n        /* Either t1.childNodes and t2.childNodes have the same length, or\n         * there are at least two groups of similar elements can be found.\n         * attempts are made at equalizing t1 with t2. First all initial\n         * elements with no group affiliation (gaps=true) are removed (if\n         * only in t1) or added (if only in t2). Then the creation of a group\n         * relocation diff is attempted.\n         */\n        const gapInformation = getGapInformation(t1, t2, subtrees)\n        const gaps1 = gapInformation.gaps1\n        const gaps2 = gapInformation.gaps2\n        let shortest = Math.min(gaps1.length, gaps2.length)\n        let destinationDifferent\n        let toGroup\n        let group\n        let node\n        let similarNode\n        let testI\n        const diffs = []\n\n        for (let index2 = 0, index1 = 0; index2 < shortest; index1 += 1, index2 += 1) {\n            if (cachedSubtrees && (gaps1[index2] === true || gaps2[index2] === true)) {\n                // pass\n            } else if (gaps1[index2] === true) {\n                node = t1.childNodes[index1]\n                if (node.nodeName === '#text') {\n                    if (t2.childNodes[index2].nodeName === '#text') {\n                        if (node.data !== t2.childNodes[index2].data) {\n                            testI = index1\n                            while (t1.childNodes.length > testI + 1 && t1.childNodes[testI + 1].nodeName === '#text') {\n                                testI += 1\n                                if (t2.childNodes[index2].data === t1.childNodes[testI].data) {\n                                    similarNode = true\n                                    break\n                                }\n                            }\n                            if (!similarNode) {\n                                diffs.push(new Diff()\n                                    .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                                    .setValue(this.options._const.route, route.concat(index2))\n                                    .setValue(this.options._const.oldValue, node.data)\n                                    .setValue(this.options._const.newValue, t2.childNodes[index2].data)\n                                )\n                                return diffs\n                            }\n                        }\n                    } else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index2))\n                            .setValue(this.options._const.value, node.data)\n                        )\n                        gaps1.splice(index2, 1)\n                        shortest = Math.min(gaps1.length, gaps2.length)\n                        index2 -= 1\n                    }\n                } else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.removeElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cloneObj(node))\n                    )\n                    gaps1.splice(index2, 1)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index2 -= 1\n                }\n\n            } else if (gaps2[index2] === true) {\n                node = t2.childNodes[index2]\n                if (node.nodeName === '#text') {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addTextElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.value, node.data)\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                } else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cloneObj(node))\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                }\n\n            } else if (gaps1[index2] !== gaps2[index2]) {\n                if (diffs.length > 0) {\n                    return diffs\n                }\n                // group relocation\n                group = subtrees[gaps1[index2]]\n                toGroup = Math.min(group.newValue, (t1.childNodes.length - group.length))\n                if (toGroup !== group.oldValue) {\n                    // Check whether destination nodes are different than originating ones.\n                    destinationDifferent = false\n                    for (let j = 0; j < group.length; j += 1) {\n                        if (!roughlyEqual(t1.childNodes[toGroup + j], t1.childNodes[group.oldValue + j], [], false, true)) {\n                            destinationDifferent = true\n                        }\n                    }\n                    if (destinationDifferent) {\n                        return [new Diff()\n                            .setValue(this.options._const.action, this.options._const.relocateGroup)\n                            .setValue('groupLength', group.length)\n                            .setValue(this.options._const.from, group.oldValue)\n                            .setValue(this.options._const.to, toGroup)\n                            .setValue(this.options._const.route, route)\n                        ]\n                    }\n                }\n            }\n        }\n        return diffs\n    }\n\n    findValueDiff(t1, t2, route) {\n        // Differences of value. Only useful if the value/selection/checked value\n        // differs from what is represented in the DOM. For example in the case\n        // of filled out forms, etc.\n        const diffs = []\n\n        if (t1.selected !== t2.selected) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifySelected)\n                .setValue(this.options._const.oldValue, t1.selected)\n                .setValue(this.options._const.newValue, t2.selected)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        if ((t1.value || t2.value) && t1.value !== t2.value && t1.nodeName !== 'OPTION') {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyValue)\n                .setValue(this.options._const.oldValue, t1.value || \"\")\n                .setValue(this.options._const.newValue, t2.value || \"\")\n                .setValue(this.options._const.route, route)\n            )\n        }\n        if (t1.checked !== t2.checked) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyChecked)\n                .setValue(this.options._const.oldValue, t1.checked)\n                .setValue(this.options._const.newValue, t2.checked)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        return diffs\n    }\n\n}\n","import {applyDOM, undoDOM} from \"./dom/index\"\nimport {DiffFinder} from \"./virtual/index\"\nexport {nodeToObj, stringToObj} from \"./virtual/index\"\n\nconst DEFAULT_OPTIONS = {\n    debug: false,\n    diffcap: 10, // Limit for how many diffs are accepting when debugging. Inactive when debug is false.\n    maxDepth: false, // False or a numeral. If set to a numeral, limits the level of depth that the the diff mechanism looks for differences. If false, goes through the entire tree.\n    maxChildCount: 50, // False or a numeral. If set to a numeral, only does a simplified form of diffing of contents so that the number of diffs cannot be higher than the number of child nodes.\n    valueDiffing: true, // Whether to take into consideration the values of forms that differ from auto assigned values (when a user fills out a form).\n    // syntax: textDiff: function (node, currentValue, expectedValue, newValue)\n    textDiff(node, currentValue, expectedValue, newValue) {\n        node.data = newValue\n        return\n    },\n    // empty functions were benchmarked as running faster than both\n    // `f && f()` and `if (f) { f(); }`\n    preVirtualDiffApply() {},\n    postVirtualDiffApply() {},\n    preDiffApply() {},\n    postDiffApply() {},\n    filterOuterDiff: null,\n    compress: false, // Whether to work with compressed diffs\n    _const: false, // object with strings for every change types to be used in diffs.\n    document: window && window.document ? window.document : false\n}\n\n\nexport class DiffDOM {\n    constructor(options = {}) {\n\n        this.options = options\n        // IE11 doesn't have Object.assign and buble doesn't translate object spreaders\n        // by default, so this is the safest way of doing it currently.\n        Object.entries(DEFAULT_OPTIONS).forEach(([key, value]) => {\n            if (!Object.prototype.hasOwnProperty.call(this.options, key)) {\n                this.options[key] = value\n            }\n        })\n\n        if (!this.options._const) {\n            const varNames = [\"addAttribute\", \"modifyAttribute\", \"removeAttribute\",\n                \"modifyTextElement\", \"relocateGroup\", \"removeElement\", \"addElement\",\n                \"removeTextElement\", \"addTextElement\", \"replaceElement\", \"modifyValue\",\n                \"modifyChecked\", \"modifySelected\", \"modifyComment\", \"action\", \"route\",\n                \"oldValue\", \"newValue\", \"element\", \"group\", \"from\", \"to\", \"name\",\n                \"value\", \"data\", \"attributes\", \"nodeName\", \"childNodes\", \"checked\",\n                \"selected\"\n            ]\n            this.options._const = {}\n            if (this.options.compress) {\n                varNames.forEach((varName, index) => this.options._const[varName] = index)\n            } else {\n                varNames.forEach(varName => this.options._const[varName] = varName)\n            }\n        }\n\n        this.DiffFinder = DiffFinder\n\n    }\n\n    apply(tree, diffs) {\n        return applyDOM(tree, diffs, this.options)\n    }\n\n    undo(tree, diffs) {\n        return undoDOM(tree, diffs, this.options)\n    }\n\n    diff(t1Node, t2Node) {\n        const finder = new this.DiffFinder(t1Node, t2Node, this.options)\n        return finder.init()\n    }\n\n}\n","import { GdprManager } from \"gdpr-guard\";\nimport { render, RenderPayload } from \"./render\";\nimport { Rendered } from \"./Renderer\";\nimport { DiffDOM } from \"diff-dom\";\n\n/**\n * @global diffing\n * Used for DOM diffing operations (to efficiently reduce DOM manipulations)\n */\nconst diffing = new DiffDOM();\n\n/**\n * Mount the rendered element in the target (using diffs)\n * @param target - The target in which the rendered element will be mounted\n * @param rendered - The rendered element to mount\n */\nexport const mountOnTarget = (target: Element, rendered: Rendered) => {\n\tif (target.childElementCount) {\n\t\tconst diffSource = target.children.item(0);\n\t\tconst diff = diffing.diff(diffSource, rendered);\n\t\tdiffing.apply(diffSource, diff);\n\t} else // for very first render (otherwise diff root is !=)\n\t\ttarget.appendChild(rendered);\n};\n\nexport type ReRenderFunction = () => Promise<void>;\n\nexport interface ReRenderResult {\n\trender: ReRenderFunction;\n\tmanager: GdprManager;\n}\n\n/**\n * Render the GDPR state inside of the given target (provides re-render function)\n * @param target - The target in which the rendered element will be mounted\n * @param manager - The manager to render\n * @param payload - The render configuration\n * @returns The function to call to re-render\n */\nexport const renderInside = async (target: Element, manager: GdprManager, payload: RenderPayload): Promise<ReRenderResult> => {\n\tconst doRender: ReRenderFunction = async () => {\n\t\tconst { rendered } = await render(manager, payload);\n\t\tmountOnTarget(target, rendered);\n\t};\n\n\tawait doRender();\n\n\treturn {\n\t\trender: doRender,\n\t\tmanager,\n\t};\n}\n"],"names":["root","factory","exports","module","define","amd","self","t","r","e","Object","defineProperty","value","makeGuard","n","o","i","GdprStorage","Cookie","name","description","storage","required","enabled","enable","this","toggle","disable","makeRequired","isEnabled","enableForStorage","toggleForStorage","disableForStorage","raw","JSON","parse","stringify","__values","Symbol","iterator","call","length","next","done","TypeError","__read","u","push","error","return","__spreadArray","arguments","Array","prototype","slice","concat","GdprGuardGroup","a","None","bindings","Map","for","addGuard","set","hasGuard","has","getGuard","get","s","doForEachGuard","guards","map","forEach","getGuards","values","GdprManager","d","c","bannerWasShown","events","GdprManagerEventHub","groups","create","addGroup","closeBanner","visitGdpr","onEach","resetAndShowBanner","createGroup","reduceGroupsPred","hasGroup","getGroup","forEachGroup","getGroups","eventMap","onEnable","addListener","onDisable","executeListeners","tagFor","LocalStorage","SessionStorage","IndexedDb","FileSystem","ServerStorage","All","__extends","setPrototypeOf","__proto__","hasOwnProperty","String","constructor","GdprGroupBuilder","p","parent","require","startGroup","startRequiredGroup","endGroup","withName","edit","withDescription","storedIn","disabled","startGuard","GdprGuardBuilder","startRequiredGuard","withEnabledGuard","endGuard","withDisabledGuard","GdprManagerBuilder","make","withBannerShown","startEnabledGroup","startDisabledGroup","build","__createBinding","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__exportStar","GdprDeserializer","manager","every","isArray","group","filter","guard","__awaiter","Promise","throw","then","apply","__generator","label","sent","trys","ops","pop","GdprSaviorAdapter","exists","restore","storeIfNotExists","store","restoreOrCreate","updateSharedManager","check","resolve","setTimeout","onManager","onGroup","onGuard","l","f","h","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","key","obj","prop","toStringTag","render","payload","rm","rgr","rgu","renderer","bound","method","bind","renderGuard","renderGroup","renderManager","rendered","objToNode","objNode","insideSvg","options","node","nodeName","document","createTextNode","data","createComment","createElementNS","toLowerCase","createElement","attributes","entries","setAttribute","childNodes","childNode","appendChild","valueDiffing","checked","selected","getFromRoute","route","splice","applyDiff","tree","diff","newNode","reference","nodeArray","_const","info","preDiffApply","action","addAttribute","modifyAttribute","newValue","removeAttribute","modifyTextElement","nodeType","textDiff","oldValue","modifyValue","modifyComment","modifyChecked","modifySelected","replaceElement","parentNode","replaceChild","namespaceURI","relocateGroup","groupLength","removeChild","from","index","to","insertBefore","removeElement","addElement","element","removeTextElement","addTextElement","console","log","postDiffApply","swap","p1","p2","tmp","Diff","toString","setValue","aKey","aValue","elementDescriptors","el","output","replace","id","findUniqueDescriptors","li","uniqueDescriptors","duplicateDescriptors","descriptor","inUnique","uniqueInBoth","l1","l2","l1Unique","l2Unique","inBoth","keys","removeDone","outerDone","innerDone","valueDone","isEqual","e1","e2","Boolean","e1Attributes","e2Attributes","attribute","roughlyEqual","sameSiblings","preventRecursion","nodeList1","reverse","nodeList2","childUniqueDescriptors","cloneObj","findCommonSubsets","c1","c2","marked1","marked2","lcsSize","c1Length","c2Length","matches","subsetsSame","some","c1Desc","c2Desc","c1Index","c1Element","c2Index","c2Element","makeArray","v","DiffTracker","list","add","diffs","fn","getFromVirtualRoute","nodeIndex","applyVirtual","routeInfo","newSubsets","preVirtualDiffApply","movedNode","subsets","splitLength","delete","postVirtualDiffApply","applyVirtualDiff","nodeToObj","aNode","type","includes","tagRE","empty","attrRE","string","lookup","area","base","br","col","embed","hr","img","input","keygen","link","menuItem","meta","param","source","track","wbr","parseTag","tag","res","tagMatch","match","toUpperCase","charAt","voidElement","startsWith","endIndex","indexOf","reg","RegExp","result","exec","trim","attr","arr","split","lastIndex","substring","cleanObj","child","stringToObj","html","components","current","level","inComponent","isOpen","isComment","start","nextChar","comment","end","DiffFinder","t1Node","t2Node","t1","HTMLElement","t2","diffcount","foundAll","debug","t1Orig","t2Orig","tracker","init","findDiffs","diffcap","window","diffError","Error","findNextDiff","fdiffs","maxDepth","findOuterDiff","filterOuterDiff","findInnerDiff","findValueDiff","attr1","attr2","attrLength","pos","maxNodeDiffCount","Math","abs","sort","t1ChildNodes","t2ChildNodes","last","max","childNodesLengthDifference","maxChildCount","cachedSubtrees","subsetsAge","subtrees","oldTree","newTree","oldChildren","newChildren","subset","returnIndex","item","markBoth","markSubTrees","attemptGroupRelocation","gapInformation","stable","gaps1","gaps2","endOld","endNew","j","getGapInformation","destinationDifferent","toGroup","similarNode","testI","shortest","min","index2","index1","DEFAULT_OPTIONS","currentValue","expectedValue","compress","diffing","varNames","varName","applyDOM","undo","undoDiff","undoDOM","mountOnTarget","target","childElementCount","diffSource","children","renderInside","doRender"],"sourceRoot":""}